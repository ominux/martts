%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: MinEnergy.pdf
%%Creator: Adobe Acrobat 9.4.3
%%For: Pangpang
%%CreationDate: 2011/4/16, 20:43:55
%%BoundingBox: 0 0 297 218
%%HiResBoundingBox: 0 0 297 217.0801
%%CropBox: 0 0 297 217.0801
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1163 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:ModifyDate="2011-04-16T20:43:43-04:00"
   xmp:CreateDate="2011-04-16T20:42:34-04:00"
   xmp:MetadataDate="2011-04-16T20:43:43-04:00"
   xmp:CreatorTool="Acrobat PDFMaker 9.1 for PowerPoint"
   xmpMM:DocumentID="uuid:7611c4f6-7839-4195-9094-4fe6ca9b2442"
   xmpMM:InstanceID="uuid:f1cf6e6b-7d47-4792-bc4b-c94feb30f22b"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 9.0"
   pdfx:Company="Hewlett-Packard Company">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Slide 1</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Pangpang</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedA 20 dict
dup /CreationDate (19990603000000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Gray Gamma 2.2) put
dup /ColorSpace (GRAY) put
dup /Copyright (Copyright 1999 Adobe Systems Incorporated) put
dup /ProfileID <66043AD0DE86F27B977BAB702FB1A778> put
dup /MatrixA [1 1 1] put
dup /DecodeLMN [
{{0 0.00006 0.00012 0.00018 0.00023 0.00029 0.00035 0.00041 0.00047 0.00053
0.0006 0.00064 0.0007 0.00076 0.00082 0.00095 0.00108 0.00124 0.0014 0.00159
0.00177 0.00197 0.00218 0.00241 0.00264 0.0029 0.00316 0.00342 0.00371 0.00401
0.00432 0.00464 0.00497 0.00533 0.00569 0.00606 0.00645 0.00685 0.00726 0.00769
0.00813 0.00859 0.00905 0.00954 0.01003 0.01053 0.01106 0.0116 0.01215 0.01271
0.01329 0.01387 0.01448 0.01511 0.01573 0.01639 0.01704 0.01772 0.01842 0.01912
0.01984 0.02057 0.02132 0.02208 0.02286 0.02365 0.02446 0.02528 0.02612 0.02698
0.02785 0.02872 0.02962 0.03053 0.03146 0.0324 0.03336 0.03433 0.03533 0.03633
0.03734 0.03838 0.03943 0.0405 0.04157 0.04266 0.04378 0.04491 0.04605 0.04721
0.04839 0.04958 0.05078 0.052 0.05324 0.05449 0.05576 0.05705 0.05835 0.05966
0.06101 0.06235 0.06372 0.06509 0.0665 0.0679 0.06934 0.07079 0.07225 0.07373
0.07523 0.07674 0.07826 0.0798 0.08138 0.08295 0.08455 0.08615 0.08778 0.08943
0.0911 0.09277 0.09447 0.09618 0.0979 0.09964 0.10141 0.10318 0.10498 0.1068
0.10863 0.11048 0.11234 0.11421 0.11611 0.11803 0.11995 0.1219 0.12387 0.12586
0.12786 0.12987 0.1319 0.13396 0.13602 0.13811 0.14021 0.14234 0.14447 0.14662
0.14881 0.15099 0.1532 0.15543 0.15767 0.15993 0.1622 0.16449 0.16681 0.16915
0.1715 0.17386 0.17624 0.17864 0.18106 0.18351 0.18595 0.18842 0.19092 0.19342
0.19596 0.19849 0.20105 0.20363 0.20623 0.20885 0.21147 0.21413 0.2168 0.21949
0.2222 0.22492 0.22766 0.23043 0.2332 0.236 0.2388 0.24164 0.2445 0.24736
0.25025 0.25316 0.25608 0.25902 0.26198 0.26496 0.26796 0.27097 0.27401 0.27706
0.28014 0.28322 0.28634 0.28946 0.29261 0.29577 0.29895 0.30214 0.30536 0.30861
0.31186 0.31514 0.31844 0.32175 0.32508 0.32843 0.33179 0.33518 0.3386 0.34202
0.34546 0.34893 0.35241 0.3559 0.35943 0.36297 0.36652 0.37009 0.37369 0.37731
0.38094 0.38459 0.38827 0.39196 0.39567 0.39939 0.40313 0.4069 0.41068 0.4145
0.41831 0.42216 0.42602 0.42991 0.4338 0.43772 0.44166 0.44562 0.44959 0.45359
0.4576 0.46165 0.46569 0.46976 0.47387 0.47797 0.48211}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00006 0.00012 0.00018 0.00024 0.00031 0.00037 0.00043 0.00049 0.00055
0.00061 0.00067 0.00073 0.00079 0.00085 0.00098 0.00113 0.00128 0.00145 0.00163
0.00183 0.00204 0.00226 0.0025 0.00275 0.00301 0.00327 0.00356 0.00385 0.00415
0.00449 0.00482 0.00516 0.00552 0.00591 0.00629 0.00668 0.00711 0.00754 0.00798
0.00844 0.00891 0.00938 0.00989 0.01041 0.01093 0.01147 0.01202 0.01259 0.01318
0.01378 0.01439 0.01501 0.01566 0.01631 0.01698 0.01767 0.01837 0.01909 0.01982
0.02057 0.02133 0.02211 0.0229 0.02371 0.02454 0.02538 0.02621 0.02708 0.02797
0.02887 0.02979 0.03072 0.03166 0.03262 0.0336 0.03459 0.03561 0.03664 0.03767
0.03873 0.0398 0.04089 0.04199 0.04312 0.04425 0.04541 0.04657 0.04776 0.04897
0.05019 0.05142 0.05266 0.05394 0.05522 0.05652 0.05783 0.05916 0.06052 0.06188
0.06326 0.06467 0.06609 0.06752 0.06897 0.07044 0.07192 0.07341 0.07494 0.07646
0.07802 0.07959 0.08118 0.08278 0.0844 0.08603 0.08768 0.08936 0.09105 0.09274
0.09447 0.09621 0.09796 0.09975 0.10153 0.10335 0.10518 0.10701 0.10887 0.11077
0.11266 0.11456 0.1165 0.11846 0.12042 0.12241 0.12441 0.12642 0.12847 0.13053
0.1326 0.13469 0.1368 0.13893 0.14107 0.14324 0.14542 0.14762 0.14983 0.15207
0.15433 0.15659 0.15889 0.1612 0.16352 0.16587 0.16823 0.17061 0.17301 0.17542
0.17786 0.18032 0.18279 0.18528 0.18778 0.19031 0.19286 0.19542 0.198 0.20061
0.20322 0.20586 0.20851 0.2112 0.21389 0.2166 0.21933 0.22208 0.22486 0.22763
0.23044 0.23326 0.23612 0.23897 0.24186 0.24475 0.24768 0.25061 0.25357 0.25655
0.25954 0.26256 0.26558 0.26863 0.27172 0.2748 0.27791 0.28104 0.28418 0.28734
0.29053 0.29374 0.29696 0.30021 0.30347 0.30675 0.31005 0.31337 0.3167 0.32007
0.32345 0.32683 0.33025 0.3337 0.33715 0.34063 0.34412 0.34763 0.35116 0.35471
0.35828 0.36188 0.36548 0.36912 0.37276 0.37644 0.38013 0.38384 0.38756 0.39132
0.39509 0.39887 0.40267 0.4065 0.41035 0.41422 0.4181 0.422 0.42594 0.42988
0.43384 0.43783 0.44184 0.44587 0.44991 0.45397 0.45806 0.46216 0.46628 0.47044
0.4746 0.47878 0.48299 0.48721 0.49146 0.49572 0.50001}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00005 0.00011 0.00015 0.0002 0.00024 0.00031 0.00035 0.0004 0.00046
0.0005 0.00055 0.00061 0.00066 0.0007 0.00081 0.00093 0.00105 0.00121 0.00136
0.00151 0.00168 0.00186 0.00206 0.00226 0.00247 0.0027 0.00293 0.00317 0.00343
0.00369 0.00397 0.00426 0.00456 0.00487 0.00519 0.00552 0.00586 0.00621 0.00658
0.00696 0.00734 0.00775 0.00815 0.00858 0.00902 0.00946 0.00992 0.01039 0.01086
0.01137 0.01187 0.01239 0.01292 0.01346 0.01401 0.01459 0.01515 0.01575 0.01636
0.01697 0.01759 0.01823 0.01889 0.01956 0.02023 0.02092 0.02164 0.02235 0.02307
0.02382 0.02457 0.02534 0.02612 0.02692 0.02773 0.02853 0.02937 0.03021 0.03108
0.03195 0.03284 0.03374 0.03464 0.03557 0.0365 0.03746 0.03842 0.0394 0.04039
0.0414 0.04242 0.04344 0.0445 0.04555 0.04662 0.0477 0.04881 0.04993 0.05104
0.05219 0.05335 0.05451 0.0557 0.05689 0.05811 0.05933 0.06056 0.06181 0.06308
0.06436 0.06564 0.06696 0.06828 0.06961 0.07097 0.07233 0.07372 0.0751 0.07651
0.07793 0.07936 0.08081 0.08228 0.08376 0.08525 0.08676 0.08827 0.08981 0.09137
0.09293 0.09451 0.0961 0.09772 0.09934 0.10097 0.10263 0.1043 0.10597 0.10767
0.10938 0.1111 0.11284 0.1146 0.11637 0.11815 0.11995 0.12177 0.1236 0.12544
0.12731 0.12918 0.13106 0.13297 0.13489 0.13683 0.13877 0.14073 0.14272 0.1447
0.14672 0.14874 0.15077 0.15283 0.15491 0.15699 0.15909 0.1612 0.16333 0.16548
0.16764 0.16982 0.17202 0.17421 0.17644 0.17868 0.18093 0.1832 0.18549 0.18778
0.1901 0.19243 0.19477 0.19713 0.19951 0.20191 0.2043 0.20673 0.20917 0.21163
0.2141 0.21659 0.21909 0.22161 0.22414 0.22669 0.22925 0.23183 0.23442 0.23703
0.23966 0.24231 0.24497 0.24764 0.25032 0.25304 0.25576 0.2585 0.26125 0.26403
0.2668 0.26961 0.27243 0.27526 0.27811 0.28098 0.28386 0.28676 0.28968 0.29261
0.29555 0.29851 0.30149 0.30449 0.3075 0.31052 0.31357 0.31662 0.31971 0.32279
0.3259 0.32903 0.33217 0.33533 0.33851 0.34169 0.3449 0.34812 0.35135 0.3546
0.35789 0.36117 0.36448 0.36779 0.37113 0.37449 0.37786 0.38125 0.38465 0.38807
0.3915 0.39495 0.39841 0.40191 0.4054 0.40893 0.41247}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -217.08 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 217.08 li
297 217.08 li
297 0 li
cp
clp
[1 0 0 1 -9 0 ]ct
0 217.8 mo
325.5 217.8 li
325.5 -7.91998 li
0 -7.91998 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 colr
f
42.06 3.66003 mo
307.98 3.66003 li
307.98 157.92 li
42.06 157.92 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.906 colr
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
42.06 132.18 mo
307.98 132.18 li
42.06 106.5 mo
307.98 106.5 li
42.06 80.76 mo
307.98 80.76 li
42.06 55.08 mo
307.98 55.08 li
42.06 29.4 mo
307.98 29.4 li
42.06 3.66003 mo
307.98 3.66003 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.525 colr
@
42.06 157.92 mo
42.06 3.66003 li
@
38.94 157.92 mo
42.06 157.92 li
38.94 132.18 mo
42.06 132.18 li
38.94 106.5 mo
42.06 106.5 li
38.94 80.76 mo
42.06 80.76 li
38.94 55.08 mo
42.06 55.08 li
38.94 29.4 mo
42.06 29.4 li
38.94 3.66003 mo
42.06 3.66003 li
@
42.06 157.92 mo
307.98 157.92 li
@
2.46 lw
1 lc
56.85 139.89 mo
86.43 132.21 li
115.95 111.63 li
145.47 98.79 li
175.05 93.63 li
204.57 80.79 li
234.09 78.21 li
263.67 67.95 li
293.19 65.37 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
56.8597 142.38 mo
54.3597 139.881 li
56.8597 137.382 li
59.3597 139.881 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
.72 lw
0 lc
56.8597 142.38 mo
54.3597 139.881 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
54.36 139.881 mo
56.86 137.382 li
@
56.8597 137.382 mo
59.3597 139.881 li
@
86.3998 134.673 mo
83.8998 132.174 li
86.3998 129.675 li
88.8998 132.174 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
86.3998 134.673 mo
83.8998 132.174 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
83.9001 132.174 mo
86.4001 129.675 li
@
86.3998 129.675 mo
88.8998 132.174 li
@
115.94 114.121 mo
113.44 111.622 li
115.94 109.123 li
118.44 111.622 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
115.94 114.121 mo
113.44 111.622 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
113.44 111.622 mo
115.94 109.123 li
@
115.94 109.123 mo
118.44 111.622 li
@
145.48 101.275 mo
142.98 98.7763 li
145.48 96.2773 li
147.98 98.7763 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
145.48 101.275 mo
142.98 98.7763 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
142.98 98.7764 mo
145.48 96.2774 li
@
145.48 96.2776 mo
147.98 98.7766 li
@
175.02 96.1372 mo
172.52 93.6382 li
175.02 91.1392 li
177.52 93.6382 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
175.02 96.1372 mo
172.52 93.6382 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
172.52 93.6383 mo
175.02 91.1393 li
@
175.02 91.1395 mo
177.52 93.6385 li
@
204.56 83.2919 mo
202.06 80.7929 li
204.56 78.2939 li
207.06 80.7929 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
204.56 83.2919 mo
202.06 80.7929 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
202.06 80.7931 mo
204.56 78.2941 li
@
204.56 78.2942 mo
207.06 80.7932 li
@
234.1 80.7229 mo
231.6 78.2239 li
234.1 75.7249 li
236.6 78.2239 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
234.1 80.7229 mo
231.6 78.2239 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
231.6 78.2241 mo
234.1 75.7251 li
@
234.1 75.7252 mo
236.6 78.2242 li
@
263.64 70.4467 mo
261.14 67.9477 li
263.64 65.4487 li
266.14 67.9477 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
263.64 70.4467 mo
261.14 67.9477 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
261.14 67.9479 mo
263.64 65.4489 li
@
263.64 65.449 mo
266.14 67.948 li
@
293.18 67.8777 mo
290.68 65.3787 li
293.18 62.8797 li
295.68 65.3787 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
293.18 67.8777 mo
290.68 65.3787 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
290.681 65.3789 mo
293.181 62.8799 li
@
293.18 62.88 mo
295.68 65.379 li
@
2.46 lw
1 lc
56.85 129.63 mo
86.43 119.37 li
115.95 91.05 li
145.47 78.21 li
175.05 67.95 li
204.57 57.63 li
234.09 52.53 li
263.67 31.95 li
293.19 21.69 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
@
54.36 127.14 mo
59.34 127.14 li
59.34 132.12 li
54.36 132.12 li
cp
ef
.72 lw
0 lc
54.36 127.14 mo
59.34 127.14 li
59.34 132.12 li
54.36 132.12 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
83.88 116.82 mo
88.92 116.82 li
88.92 121.86 li
83.88 121.86 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
83.88 116.82 mo
88.92 116.82 li
88.92 121.86 li
83.88 121.86 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
113.46 88.56 mo
118.44 88.56 li
118.44 93.6 li
113.46 93.6 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
113.46 88.56 mo
118.44 88.56 li
118.44 93.6 li
113.46 93.6 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
142.98 75.72 mo
148.02 75.72 li
148.02 80.7 li
142.98 80.7 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
142.98 75.72 mo
148.02 75.72 li
148.02 80.7 li
142.98 80.7 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
172.56 65.46 mo
177.54 65.46 li
177.54 70.44 li
172.56 70.44 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
172.56 65.46 mo
177.54 65.46 li
177.54 70.44 li
172.56 70.44 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
202.08 55.14 mo
207.06 55.14 li
207.06 60.18 li
202.08 60.18 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
202.08 55.14 mo
207.06 55.14 li
207.06 60.18 li
202.08 60.18 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
231.6 50.04 mo
236.64 50.04 li
236.64 55.02 li
231.6 55.02 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
231.6 50.04 mo
236.64 50.04 li
236.64 55.02 li
231.6 55.02 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
261.18 29.46 mo
266.16 29.46 li
266.16 34.44 li
261.18 34.44 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
261.18 29.46 mo
266.16 29.46 li
266.16 34.44 li
261.18 34.44 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
290.7 19.2 mo
295.68 19.2 li
295.68 24.18 li
290.7 24.18 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
ef
290.7 19.2 mo
295.68 19.2 li
295.68 24.18 li
290.7 24.18 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e5b7d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966fdb593710000b18c00001f3068656164e625fe3e00000f640000
0036686865610dad124400000f9c00000024686d74780b0cadc000000fc0
00003c4a6c6f6361019b5f9a00004c0c00003c8c6d617870214303970000
8898000000206e616d6589823d8c000088b8000004c1707265706baf02fe
00008d7c00002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb88951ef0e5f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f03040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
051900610444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099045c00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b4000000>
<00000000000001420000014200000142000001420000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e0000025e0000025e
0000025e0000025e0000025e0000025e0000025e0000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e0000025e0000025e
0000025e0000025e0000025e0000025e0000025e0000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e0000025e0000025e
0000025e0000025e0000025e000002f4000002f4000002f4000002f40000
02f4000002f4000002f4000002f4000002f4000002f4000002f4000002f4
000002f4000002f4000002f4000002f4000002f4000002f4000002f40000
02f4000002f40000044e0000044e0000044e0000044e0000044e0000044e
0000044e0000044e0000044e0000044e0000044e0000044e0000044e0000
044e0000044e0000044e0000044e0000044e0000044e0000054000000540
00000540000006960000069600000696000006960000083a0000083a0000
083a0000083a0000083a0000083a00000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
000009080000090800000908000009080000090800000908000009080000
090800000908000009080000090800000908000009080000090800000908
0000090800000908000009080000090800000a6600000a6600000a660000
0a6600000a6600000a6600000a6600000a6600000a6600000a6600000a66
00000a6600000a6600000a6600000b7e00000b7e00000b7e00000b7e0000
0b7e00000b7e00000b7e00000b7e00000b7e00000b7e00000cac00000cac
00000cac00000cac00000dee00000dee00000dee00000dee00000dee0000
0dee00000dee00000dee00000dee00000dee00000dee00000dee00000dee
00000dee00000dee00000dee00000dee00000dee00000dee00000dee0000
0dee00000dee00000dee00000dee00000dee00000dee00000dee00000dee
00000dee00000dee00000dee00000dee00000dee00000dee00000dee0000
0dee00000dee00000dee00000dee00000dee00000dee00000dee00000dee
00000dee00000dee00000dee00000dee00000dee00000dee00000dee0000
0dee00000dee00000dee00000dee00000dee00000dee00000dee00000dee
00000dee00000dee00000dee00000dee00000dee00000ee000000ee00000
0ee000000ee000000ee000000ee000000ee000000ee000000ee000000ee0
00000ee000000ee000000ee000000ee000000ee000000ee000000ee00000
0ee000000f6600000f6600000f6600000f6600000f6600000f6600000f66
000010880000108800001088000010880000108800001088000010880000
108800001088000010880000108800001088000010880000108800001088
00001088000010880000108800001088000011b6000011b6000011b60000
12a8000012a8000012a8000012a8000012a8000012a8000012a8000012a8
000012a8000012a8000012a8000012a8000012a8000012a8000012a80000
12a8000012a8000012a8000012a8000012a8000012a8000012a8000012a8
000012a8000012a8000012a8000012a8000012a8000012a8000012a80000
12a8000012a8000012a8000012a8000012a8000012a8000012a8000012a8
000012a8000012a8000012a8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c8000013c8000013c8
000013c8000013c8000013c8000013c8000013c8000013c8000013c80000
13c8000013c8000013c8000013c8000013c8000013c80000140e0000140e
0000140e0000140e0000140e0000140e0000140e0000140e0000140e0000
140e0000140e0000140e0000140e0000140e0000140e0000140e0000140e
0000140e0000140e0000140e0000140e0000140e0000140e0000140e0000
140e0000140e0000140e0000140e0000140e0000140e0000140e0000140e
0000140e0000140e0000140e0000140e0000140e0000140e0000140e0000
140e0000140e0000140e0000140e0000140e0000140e0000140e0000140e
0000140e0000140e0000140e0000140e0000140e0000140e0000140e0000
140e0000140e0000140e0000140e0000140e0000140e0000140e0000140e
0000140e0000140e0000140e0000140e0000140e0000140e0000140e0000
140e0000140e0000140e0000140e0000140e0000140e0000140e0000140e
0000140e0000140e0000140e0000140e0000140e0000140e0000140e0000
140e0000140e0000140e0000140e0000156a0000156a000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000018f600001ade00001c6800001dd200001de20000
1f2000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f3000001f3000001f300000
1f3000001f3000001f3000001f3000001f3000001f3000001f3000001f30
00001f3000001f3000001f3000001f3000001f30000100000f2201200010
00c3000700020010002f0065000011900182000400010000000e00ae0000
00030000000000640000000000030000000700fa00640001000000000000
0032015e0001000000000003000e01900001000000000004000e019e0001
000000000006000e01ac0001000000000007007d01ba0003000104090000
006402370003000104090001001c029b0003000104090002000e02b70003
000104090003001c02c50003000104090004001c02e10003000104090006
001c02fd000300010409000700fa031900a9002000320030003000380020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002ea92032303038204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e50594643
574a2b43616c6962726950594643574a2b43616c6962726950594643574a
2b43616c6962726943616c69627269206973206569746865722061207265
67697374657265642074726164656d61726b206f7220612074726164656d
61726b206f66204d6963726f736f667420436f72706f726174696f6e2069
6e2074686520556e697465642053746174657320616e642f6f72206f7468
657220636f756e74726965732e00a9002000320030003000380020004d00
6900630072006f0073006f0066007400200043006f00720070006f007200
6100740069006f006e002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e00500059004600
430057004a002b00430061006c0069006200720069005200650067007500
6c0061007200500059004600430057004a002b00430061006c0069006200
72006900500059004600430057004a002b00430061006c00690062007200
6900500059004600430057004a002b00430061006c006900620072006900
430061006c00690062007200690020006900730020006500690074006800
650072002000610020007200650067006900730074006500720065006400
2000740072006100640065006d00610072006b0020006f00720020006100
2000740072006100640065006d00610072006b0020006f00660020004d00
6900630072006f0073006f0066007400200043006f00720070006f007200
6100740069006f006e00200069006e002000740068006500200055006e00
69007400650064002000530074006100740065007300200061006e006400
2f006f00720020006f007400680065007200200063006f0075006e007400
72006900650073002e000000b2090320b80284b40918014a20b80283b409
18014a20b80282b40918014a20b80281b40918014a20b80280b40918014a
20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20b802
7cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279b409
18014a20b80278b40918014a20b80277b40918014a20b80276b40918014a
20b80275b40918014a20b80274b40918014a20b80273b40918014a20b802
71b40918014a20b80270b40918014a20b8026fb40918014a20b8026eb409
18014a20b8026db40918014a20b8026cb40918014a20b8026bb40918014a
20b8026ab40918014a20b80269b40918014a20b80268b40918014a20b802
67b40918014a20b80266b40918014a20b80265b40918014a20b80264b409
18014a20b80263b40918014a20b80262b40918014a20b80261b40918014a
20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20b802
5db40918014a20b8025cb40918014a20b8025bb40918014a20b8025ab409
18014a20b80259b40918014a20b80258b40918014a20b80257b40918014a
20b80256b40918014a20b80255b40918014a20b80254b40918014a20b802
53b40918014a20b80252b40918014a20b80251b40918014a20b80250b409
18014a20b8024fb40918014a20b8024eb40918014a20b8024db40918014a
20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20b802
49b40918014a20b80248b40918014a20b80247b40918014a20b80246b409
18014a20b80245b40918014a20b80244b40918014a20b80243b40918014a
20b80242b40918014a20b80241b40918014a20b80240b40918014a20b802
3fb40918014a20b8023eb40918014a20b8023db40918014a20b8023cb409
18014a20b8023bb40918014a20b8023ab40918014a20b80239b40918014a
20b80238b40918014a20b80237b40918014a20b80236b40918014a20b802
35b40918014a20b80234b40918014a20b80233b40918014a20b80232b409
18014a20b80231b40918014a20b80230b40918014a20b8022fb40918014a
20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20b802
2bb40918014a20b8022ab40918014a20b80229b40918014a20b80228b409
18014a20b80227b40918014a20b80226b40918014a20b80225b40918014a
20b80224b40918014a20b80223b40918014a20b80222b40918014a20b802
21b40918014a20b80220b40918014a20b8021fb40918014a20b8021eb409
18014a20b8021db40918014a20b8021cb40918014a20b8021bb40918014a
20b8021ab40918014a20b80219b40918014a20b80218b40918014a20b802
17b40918014a20b80216b40918014a20b80215b40918014a20b80214b409
18014a20b80213b40918014a20b80212b40918014a20b80211b40918014a
20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20b802
0db40918014a20b8020cb40918014a20b8020bb40918014a20b8020ab409
18014a20b80209b40918014a20b80208b40918014a20b80207b40918014a
20b80206b40918014a20b80205b40918014a20b80204b40918014a20b802
03b40918014a20b80202b40918014a20b80201b40918014a20b80200b409
18014a20b801ffb40918014a20b801feb40918014a20b801fdb40918014a
20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20b801
f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6b409
18014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918014a
20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20b801
efb40918014a20b801eeb40918014a20b801edb40918014a20b801ecb409
18014a20b801ebb40918014a20b801eab40918014a20b801e9b40918014a
20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20b801
e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2b409
18014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918014a
20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20b801
dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8b409
18014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918014a
20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20b801
d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ceb409
18014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918014a
20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20b801
c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4b409
18014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918014a
20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20b801
bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801bab409
18014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918014a
20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20b801
b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0b409
18014a20b801afb40918014a20b801aeb40918014a20b801adb40918014a
20b801acb40918014a20b801abb40918014a20b801aab40918014a20b801
a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6b409
18014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918014a
20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20b801
9fb40918014a20b8019eb40918014a20b8019db40918014a20b8019cb409
18014a20b8019bb40918014a20b8019ab40918014a20b80199b40918014a
20b80198b40918014a20b80197b40918014a20b80196b40918014a20b801
95b40918014a20b80194b40918014a20b80193b40918014a20b80192b409
18014a20b80191b40918014a20b80190b40918014a20b8018fb40918014a
20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20b801
8bb40918014a20b8018ab40918014a20b80189b40918014a20b80188b409
18014a20b80187b40918014a20b80186b40918014a20b80185b40918014a
20b80184b40918014a20b80183b40918014a20b80182b40918014a20b801
81b40918014a20b80180b40918014a20b8017fb40918014a20b8017eb409
18014a20b8017db40918014a20b8017cb40918014a20b8017bb40918014a
20b8017ab40918014a20b80179b40918014a20b80178b40918014a20b801
77b40918014a20b80176b40918014a20b80175b40918014a20b80174b409
18014a20b80173b40918014a20b80172b40918014a20b80171b40918014a
20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20b801
6db40918014a20b8016cb40918014a20b8016bb40918014a20b8016ab409
18014a20b80169b40918014a20b80168b40918014a20b80167b40918014a
20b80166b40918014a20b80165b40918014a20b80164b40918014a20b801
63b40918014a20b80162b40918014a20b80161b40918014a20b80160b409
18014a20b8015fb40918014a20b8015eb40918014a20b8015db40918014a
20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20b801
59b40918014a20b80158b40918014a20b80157b40918014a20b80156b409
18014a20b80155b40918014a20b80154b40918014a20b80153b40918014a
20b80152b40918014a20b80150b40918014a20b8014fb40918014a20b801
4eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014ab409
18014a20b80149b40918014a20b80148b40918014a20b80147b40918014a
20b80146b40918014a20b80145b40918014a20b80144b40918014a20b801
43b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb80281
b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e
3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411f
b80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411fb802
74b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb80270b2
1d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb21d43
1fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c451fb8
0267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb80263
b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025fb21c
451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c451f
b8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451fb802
56b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb80252b2
1c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c45
1fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b491fb8
0249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245
b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b
491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1f
b8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb802
38b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb80234b2
1b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b
1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8
022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227
b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b
4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1f
b8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb802
1ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b2
1a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f
1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8
020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209
b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205b219
511fb80204b219511fb80203b219501fb80202b219511fb80201b219511f
b80200b219511fb801ffb219511fb801feb219501fb801fdb219511fb801
fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801f8b2
19511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b21853
1fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b218531fb8
01efb218541fb801eeb218541fb801edb218541fb801ecb218531fb801eb
b218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7b218
541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218541f
b801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531fb801
deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801dab2
18531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b21756
1fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b217571fb8
01d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb801cd
b217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9b217
561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217571f
b801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571fb801
c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801bcb2
17571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b21756
1fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b217571fb8
01b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801af
b2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801abb216
5b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1f
b801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801
a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2
163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b
1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b1fb8
0195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb80191
b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018db216
5b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1f
b80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621fb801
84b215621fb80183b215661fb80182b215661fb80181b215551fb80180b2
15451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb21562
1fb8017bb215621fb8017ab215641fb80179b215661fb80178b215661fb8
0177b215661fb80176b215661fb80175b215661fb80174b215661fb80173
b215451fb80172b215621fb80171b215621fb80170b215631fb8016fb215
641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215661f
b8016ab215661fb80169b215621fb80168b215621fb80167b215611fb801
66b215641fb80165b215641fb80164b215661fb80163b215661fb80162b2
15661fb80161b215661fb80160b215661fb8015fb215661fb8015eb21555
1fb8015db215451fb8015cb215451fb8015bb215361fb8015ab215611fb8
0159b215621fb80158b215621fb80157b215631fb80156b215641fb80155
b215661fb80154b215661fb80153b215661fb80152b215661fb80151b214
401fb80150b214551fb8014fb214561fb8014eb214831fb8014db2142d1f
b8014cb214401fb8014bb214401fb8014ab214411fb80149b214401fb801
48b214401fb80147b214411fb80146b2147e1fb80145b214871fb80144b2
147f1fb80143b214801fb80142b212461fb80141b212461fb80140b21246
1fb8013fb212461fb8013eb212441fb8013db212461fb8013cb211591fb8
013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb80137
b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133b211
2c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211571f
b8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1fb801
2ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb80126b2
115b1fb80125b211561fb80124b211561fb80123b211571fb80122b21158
1fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8
011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119
b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115b210
5f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b2105e1f
b80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1fb801
0cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb80108b2
105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2105f
1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f621f
ff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f
641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f641f
f00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f
641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e681f
e10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e
681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261f
d20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d
6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261f
c30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c711f
bc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711fb50c
721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b7a1f
ad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b
7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f
9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b
7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f
8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f8255
805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d40
12060a7c557a557bab7a557955775578ab7755ba028600660285403c5576
ab755504751475747503f47501ab75014475013075010200751075207503
0c7455725573ab7255007250728072b072043bb072e072020072010ab8ff
c0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a0325
1f6938675568ab67556638645565ab645563386255613860555f385d555e
ab5d555c385a555bab5a55593858555703251f5638545555ab5455533851
5552ab51554f384e554e03251f4d384b554cab4b554a38485549ab485547
3846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b
401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f19
7f198f19030f18cf18024018292c460f17cf17df17ef1704134017292e46
0016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b31631
3546b8ffc0404d162326460f15010f151f1502451f15010011e011f01103
15bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e
03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c
5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d3046000301200101
0001100120010308b8ffc0b301151f46b80100b316010501b80190b15453
2b2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b000
555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d0042
1d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db11600
42592b5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e73
742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e7375
5e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002435458
41ff0284006402830064028200640281006402800064027f0064027e0064
027d0064027c0064027b0064027a00640279006402780064027700640276
00640275006402740064027300640271006402700064026f0064026e0064
026d0064026c0064026b0064026a00640269006402680064026700640266
0064026500640264006402630064026200640261006402600064025f0064
025e0064025d0064025c0064025b0064025a006402590064025800640257
006402560064025500640254006402530064025200640251006402500064
024f0064024e0064024d0064024c0064024b0064024a0064024900640248
006402470064024600640245006402440064024300640242006402410064
02400064023f0064023e0064023d0064023c0064023b0064023a00640239
006402380064023700640236006402350064023400640233006402320064
0231006402300064022f0064022e0064022d0064022c0064022b0064022a
006402290064022800640227006402260064022500640224006402230064
022200640221006402200064021f0064021e0064021d0064021c0064021b
0064021a0064021900640218006402170064021600640215006402140064
02130064021200640211006402100064020f0064020e0064020d0064020c
0064020b0064020a00640209006402080064020700640206006402050064
020441ff00640203006402020064020100640200006401ff006401fe0064
01fd006401fc006401fb006401fa006401f9006401f8006401f7006401f6
006401f5006401f4006401f3006401f2006401f1006401f0006401ef0064
01ee006401ed006401ec006401eb006401ea006401e9006401e8006401e7
006401e6006401e5006401e4006401e3006401e2006401e1006401e00064
01df006401de006401dd006401dc006401db006401da006401d9006401d8
006401d7006401d6006401d5006401d4006401d3006401d2006401d10064
01d0006401cf006401ce006401cd006401cc006401cb006401ca006401c9
006401c8006401c7006401c6006401c5006401c4006401c3006401c20064
01c1006401c0006401bf006401be006401bd006401bc006401bb006401ba
006401b9006401b8006401b7006401b6006401b5006401b4006401b30064
01b2006401b1006401b0006401af006401ae006401ad006401ac006401ab
006401aa006401a9006401a8006401a7006401a6006401a5006401a40064
01a3006401a2006401a1006401a00064019f0064019e0064019d0064019c
0064019b0064019a00640199006401980064019700640196006401950064
0194006401930064019200640191006401900064018f0064018e0064018d
0064018c0064018b0064018a006401890064018800640187006401860064
0185006441800184006401830064018200640181006401800064017f0064
017e0064017d0064017c0064017b0064017a006401790064017800640177
006401760064017500640174006401730064017200640171006401700064
016f0064016e0064016d0064016c0064016b0064016a0064016900640168
006401670064016600640165006401640064016300640162006401610064
01600064015f0064015e0064015d0064015c0064015b0064015a00640159
006401580064015700640156006401550064015400640153006401520064
01500064014f0064014e0064014c0064014b0064014a0064014900640148
006401470064014600640145006401440064014300642b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b185f5e00>
[7985 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 6070 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>PBAAAA+Calibri AddT42Char 
2 6390 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>PBAAAA+Calibri AddT42Char 
2 6878 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>PBAAAA+Calibri AddT42Char 
2 7272 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>PBAAAA+Calibri AddT42Char 
2 5134 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>PBAAAA+Calibri AddT42Char 
2 7634 1010 <ffff006bffed03bd0520020603ca0000>PBAAAA+Calibri AddT42Char 
2 7650 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>PBAAAA+Calibri AddT42Char 
2 5482 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>PBAAAA+Calibri AddT42Char 
2 7968 1012 <ffff0052ffed03ba0521020603cc0000>PBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/two 1006 def
/three 1007 def
/four 1008 def
/five 1009 def
/six 1010 def
/seven 1011 def
/eight 1012 def
end
PBAAAA+Calibri /Encoding get
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
pop
end
%ADOEndSubsetFont
/HVDQQN+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/HVDQQN+Calibri*1 
[50{/.notdef}rp /two /three /four /five /six /seven /eight 
199{/.notdef}rp]
HVDQQN+Calibri nf
HVDQQN+Calibri*1 [10.02 0 0 -10.02 0 0 ]msf
27.7289 160.783 mo
(2)sh
27.7289 135.081 mo
(3)sh
27.7289 109.38 mo
(4)sh
27.7289 83.6786 mo
(5)sh
27.7289 57.9774 mo
(6)sh
27.7289 32.2761 mo
(7)sh
27.7289 6.57477 mo
(8)sh
gsave
28.881 191.831 mo
39.233 202.182 li
67.214 174.202 li
56.861 163.85 li
cp
clp
45.663 190.607 mo
45.715 190.659 45.756 190.708 45.783 190.752 cv
45.811 190.796 45.829 190.836 45.837 190.872 cv
45.845 190.908 45.845 190.94 45.837 190.967 cv
45.829 190.995 45.815 191.019 45.796 191.038 cv
42.995 193.839 li
42.975 193.858 42.953 193.871 42.926 193.878 cv
42.9 193.885 42.868 193.885 42.831 193.878 cv
42.794 193.871 42.753 193.854 42.709 193.826 cv
42.665 193.799 42.616 193.759 42.564 193.706 cv
42.514 193.656 42.475 193.609 42.448 193.565 cv
42.42 193.521 42.401 193.481 42.39 193.445 cv
42.379 193.409 42.376 193.376 42.382 193.346 cv
42.387 193.315 42.401 193.289 42.423 193.267 cv
43.542 192.148 li
39.465 188.071 li
39.046 189.724 li
39.021 189.805 38.996 189.863 38.97 189.901 cv
38.943 189.938 38.912 189.957 38.874 189.959 cv
38.837 189.96 38.794 189.943 38.746 189.909 cv
38.698 189.874 38.642 189.825 38.578 189.762 cv
38.531 189.715 38.493 189.673 38.464 189.635 cv
38.435 189.598 38.414 189.564 38.4 189.534 cv
38.386 189.504 38.379 189.472 38.377 189.441 cv
38.376 189.409 38.379 189.372 38.388 189.331 cv
38.831 187.305 li
38.834 187.286 38.841 187.265 38.852 187.243 cv
38.863 187.221 38.878 187.194 38.897 187.164 cv
38.916 187.134 38.942 187.101 38.974 187.067 cv
39.006 187.032 39.046 186.99 39.096 186.94 cv
39.162 186.874 39.22 186.821 39.27 186.783 cv
39.32 186.744 39.362 186.717 39.396 186.702 cv
39.431 186.687 39.46 186.683 39.483 186.69 cv
39.507 186.697 39.527 186.708 39.543 186.725 cv
44.254 191.436 li
45.224 190.466 li
45.246 190.444 45.273 190.43 45.305 190.423 cv
45.336 190.416 45.37 190.418 45.406 190.429 cv
45.442 190.44 45.481 190.46 45.524 190.489 cv
45.567 190.518 45.613 190.557 45.663 190.607 cv
48.618 184.743 mo
48.853 184.978 49.044 185.241 49.192 185.533 cv
49.34 185.824 49.423 186.128 49.441 186.444 cv
49.458 186.76 49.403 187.084 49.275 187.414 cv
49.146 187.744 48.926 188.065 48.614 188.377 cv
48.39 188.601 48.165 188.771 47.939 188.887 cv
47.712 189.003 47.484 189.073 47.255 189.098 cv
47.026 189.123 46.794 189.103 46.561 189.038 cv
46.328 188.973 46.09 188.871 45.848 188.731 cv
45.607 188.592 45.362 188.42 45.113 188.215 cv
44.864 188.011 44.61 187.779 44.351 187.519 cv
44.121 187.29 43.902 187.046 43.692 186.786 cv
43.482 186.526 43.3 186.256 43.145 185.974 cv
42.99 185.692 42.871 185.401 42.789 185.1 cv
42.706 184.799 42.675 184.495 42.697 184.188 cv
42.72 183.882 42.804 183.572 42.95 183.26 cv
43.097 182.948 43.322 182.64 43.626 182.336 cv
43.728 182.234 43.838 182.137 43.955 182.044 cv
44.072 181.952 44.186 181.871 44.295 181.804 cv
44.404 181.736 44.501 181.684 44.587 181.648 cv
44.672 181.612 44.732 181.592 44.767 181.588 cv
44.802 181.584 44.833 181.586 44.86 181.595 cv
44.888 181.603 44.915 181.615 44.941 181.63 cv
44.967 181.645 44.995 181.664 45.024 181.688 cv
45.053 181.711 45.087 181.742 45.125 181.781 cv
45.175 181.831 45.217 181.874 45.252 181.912 cv
45.286 181.949 45.31 181.983 45.322 182.015 cv
45.335 182.047 45.339 182.076 45.335 182.102 cv
45.33 182.128 45.316 182.154 45.291 182.179 cv
45.261 182.209 45.21 182.241 45.138 182.274 cv
45.066 182.307 44.981 182.349 44.883 182.4 cv
44.785 182.451 44.673 182.521 44.547 182.608 cv
44.422 182.695 44.288 182.809 44.148 182.949 cv
43.891 183.206 43.722 183.48 43.642 183.77 cv
43.562 184.06 43.552 184.352 43.611 184.646 cv
43.67 184.94 43.789 185.232 43.965 185.522 cv
44.142 185.812 44.353 186.089 44.599 186.351 cv
44.63 186.238 44.669 186.115 44.717 185.984 cv
44.766 185.853 44.826 185.718 44.9 185.578 cv
44.973 185.439 45.058 185.299 45.156 185.16 cv
45.255 185.02 45.371 184.883 45.507 184.748 cv
45.797 184.457 46.08 184.252 46.358 184.132 cv
46.636 184.012 46.906 183.96 47.168 183.977 cv
47.43 183.993 47.682 184.07 47.924 184.207 cv
48.166 184.344 48.397 184.522 48.618 184.743 cv
47.963 185.531 mo
47.803 185.37 47.642 185.241 47.479 185.141 cv
47.316 185.042 47.151 184.984 46.986 184.967 cv
46.82 184.951 46.65 184.98 46.476 185.054 cv
46.302 185.129 46.124 185.257 45.942 185.439 cv
45.839 185.542 45.746 185.653 45.662 185.773 cv
45.578 185.893 45.504 186.017 45.44 186.144 cv
45.377 186.271 45.323 186.399 45.279 186.529 cv
45.234 186.659 45.201 186.785 45.179 186.906 cv
45.536 187.262 45.857 187.538 46.143 187.733 cv
46.428 187.927 46.687 188.054 46.919 188.112 cv
47.151 188.17 47.363 188.165 47.555 188.097 cv
47.747 188.03 47.93 187.909 48.104 187.735 cv
48.281 187.558 48.401 187.372 48.465 187.175 cv
48.528 186.979 48.547 186.783 48.521 186.585 cv
48.494 186.388 48.432 186.199 48.332 186.019 cv
48.233 185.84 48.11 185.677 47.963 185.531 cv
54.768 181.834 mo
54.79 181.856 54.805 181.881 54.813 181.908 cv
54.821 181.936 54.817 181.969 54.801 182.008 cv
54.784 182.047 54.756 182.093 54.716 182.147 cv
54.676 182.201 54.618 182.265 54.544 182.339 cv
54.447 182.436 54.364 182.511 54.295 182.563 cv
54.226 182.616 54.165 182.646 54.113 182.654 cv
54.06 182.662 54.011 182.662 53.964 182.654 cv
49.311 181.946 li
51.992 184.626 li
52.011 184.646 52.024 184.67 52.031 184.699 cv
52.038 184.728 52.032 184.761 52.014 184.798 cv
51.996 184.836 51.968 184.88 51.93 184.933 cv
51.891 184.985 51.837 185.046 51.768 185.115 cv
51.702 185.182 51.642 185.235 51.588 185.275 cv
51.534 185.315 51.488 185.344 51.451 185.362 cv
51.414 185.38 51.381 185.385 51.352 185.378 cv
51.323 185.371 51.298 185.358 51.279 185.339 cv
46.133 180.193 li
46.111 180.171 46.097 180.146 46.092 180.119 cv
46.086 180.091 46.092 180.058 46.11 180.021 cv
46.128 179.984 46.157 179.938 46.197 179.884 cv
46.237 179.831 46.291 179.771 46.357 179.704 cv
46.426 179.635 46.487 179.581 46.539 179.543 cv
46.592 179.504 46.637 179.476 46.674 179.458 cv
46.711 179.44 46.744 179.434 46.771 179.439 cv
46.799 179.445 46.824 179.458 46.846 179.481 cv
49.228 181.863 li
48.743 177.583 li
48.735 177.541 48.734 177.501 48.739 177.463 cv
48.745 177.424 48.759 177.384 48.781 177.343 cv
48.803 177.301 48.834 177.255 48.874 177.204 cv
48.914 177.153 48.97 177.091 49.042 177.019 cv
49.114 176.948 49.175 176.893 49.226 176.856 cv
49.277 176.818 49.321 176.792 49.359 176.777 cv
49.396 176.762 49.428 176.758 49.454 176.765 cv
49.48 176.772 49.503 176.785 49.522 176.804 cv
49.558 176.84 49.585 176.885 49.603 176.939 cv
49.621 176.993 49.637 177.076 49.651 177.189 cv
49.999 181.092 li
54.457 181.722 li
54.576 181.747 54.653 181.768 54.689 181.784 cv
54.725 181.801 54.751 181.817 54.768 181.834 cv
57.796 175.963 mo
57.965 176.132 58.099 176.308 58.198 176.493 cv
58.297 176.678 58.365 176.866 58.401 177.057 cv
58.437 177.247 58.443 177.44 58.42 177.635 cv
58.396 177.83 58.345 178.024 58.266 178.219 cv
58.188 178.414 58.085 178.604 57.958 178.789 cv
57.831 178.974 57.666 179.167 57.465 179.369 cv
56.064 180.769 li
56.001 180.833 55.919 180.871 55.82 180.885 cv
55.72 180.899 55.617 180.852 55.509 180.744 cv
50.728 175.963 li
50.62 175.855 50.573 175.752 50.587 175.652 cv
50.601 175.553 50.639 175.471 50.703 175.408 cv
51.921 174.19 li
52.241 173.869 52.534 173.637 52.799 173.494 cv
53.065 173.35 53.324 173.268 53.576 173.247 cv
53.829 173.227 54.074 173.266 54.312 173.365 cv
54.549 173.465 54.774 173.621 54.987 173.834 cv
55.114 173.961 55.22 174.097 55.306 174.244 cv
55.392 174.39 55.454 174.542 55.492 174.699 cv
55.531 174.857 55.544 175.019 55.532 175.186 cv
55.519 175.353 55.48 175.52 55.414 175.685 cv
55.588 175.567 55.775 175.48 55.975 175.427 cv
56.175 175.373 56.38 175.355 56.588 175.373 cv
56.797 175.391 57.005 175.448 57.212 175.545 cv
57.419 175.641 57.614 175.781 57.796 175.963 cv
54.324 174.637 mo
54.194 174.507 54.059 174.408 53.918 174.339 cv
53.777 174.27 53.632 174.237 53.481 174.241 cv
53.331 174.245 53.175 174.29 53.012 174.375 cv
52.849 174.46 52.666 174.605 52.462 174.809 cv
51.726 175.545 li
53.462 177.281 li
54.272 176.47 li
54.457 176.286 54.582 176.113 54.646 175.952 cv
54.711 175.79 54.74 175.632 54.733 175.476 cv
54.726 175.32 54.685 175.17 54.61 175.027 cv
54.535 174.883 54.44 174.753 54.324 174.637 cv
57.088 176.754 mo
56.927 176.594 56.761 176.479 56.589 176.408 cv
56.416 176.338 56.239 176.31 56.059 176.325 cv
55.878 176.34 55.692 176.4 55.502 176.505 cv
55.312 176.609 55.105 176.773 54.882 176.996 cv
54.03 177.848 li
55.919 179.738 li
56.953 178.704 li
57.116 178.541 57.238 178.38 57.321 178.22 cv
57.403 178.06 57.453 177.896 57.469 177.728 cv
57.486 177.559 57.464 177.392 57.403 177.227 cv
57.342 177.061 57.237 176.904 57.088 176.754 cv
f
grestore
gsave
58.424 191.831 mo
68.776 202.182 li
96.756 174.202 li
86.404 163.85 li
cp
clp
73.901 189.41 mo
74.147 189.656 74.326 189.92 74.438 190.203 cv
74.549 190.487 74.596 190.779 74.576 191.08 cv
74.557 191.381 74.468 191.687 74.309 191.997 cv
74.15 192.308 73.923 192.611 73.628 192.907 cv
73.448 193.086 73.266 193.24 73.081 193.367 cv
72.896 193.494 72.722 193.598 72.561 193.68 cv
72.399 193.761 72.257 193.82 72.134 193.858 cv
72.011 193.895 71.93 193.914 71.889 193.916 cv
71.849 193.917 71.814 193.914 71.784 193.905 cv
71.753 193.897 71.72 193.883 71.684 193.864 cv
71.648 193.845 71.608 193.817 71.564 193.781 cv
71.52 193.745 71.469 193.698 71.411 193.64 cv
71.311 193.541 71.252 193.462 71.234 193.403 cv
71.215 193.345 71.224 193.297 71.261 193.26 cv
71.286 193.235 71.358 193.207 71.478 193.176 cv
71.597 193.145 71.741 193.096 71.91 193.03 cv
72.078 192.963 72.263 192.873 72.465 192.76 cv
72.666 192.647 72.863 192.494 73.056 192.302 cv
73.243 192.115 73.384 191.927 73.479 191.738 cv
73.573 191.55 73.626 191.364 73.637 191.182 cv
73.648 191 73.618 190.827 73.549 190.661 cv
73.48 190.495 73.376 190.344 73.238 190.206 cv
73.086 190.054 72.919 189.948 72.736 189.887 cv
72.553 189.827 72.358 189.812 72.151 189.842 cv
71.945 189.872 71.732 189.95 71.512 190.075 cv
71.292 190.201 71.073 190.374 70.853 190.593 cv
70.327 191.12 li
70.304 191.143 70.277 191.16 70.246 191.172 cv
70.215 191.183 70.181 191.186 70.143 191.18 cv
70.105 191.173 70.063 191.157 70.017 191.131 cv
69.971 191.105 69.919 191.063 69.861 191.005 cv
69.809 190.953 69.77 190.905 69.743 190.862 cv
69.717 190.819 69.701 190.78 69.696 190.744 cv
69.69 190.708 69.692 190.676 69.702 190.647 cv
69.712 190.618 69.729 190.591 69.754 190.566 cv
70.222 190.098 li
70.404 189.915 70.544 189.728 70.642 189.536 cv
70.74 189.344 70.796 189.154 70.808 188.965 cv
70.821 188.775 70.792 188.592 70.723 188.416 cv
70.654 188.239 70.544 188.075 70.392 187.923 cv
70.281 187.812 70.158 187.724 70.021 187.66 cv
69.884 187.595 69.743 187.561 69.596 187.558 cv
69.45 187.555 69.299 187.588 69.145 187.657 cv
68.99 187.726 68.839 187.834 68.693 187.981 cv
68.533 188.141 68.41 188.312 68.324 188.494 cv
68.239 188.677 68.171 188.848 68.121 189.008 cv
68.072 189.168 68.036 189.307 68.016 189.424 cv
67.995 189.542 67.971 189.614 67.943 189.642 cv
67.924 189.661 67.903 189.675 67.881 189.683 cv
67.859 189.692 67.833 189.69 67.802 189.679 cv
67.772 189.668 67.736 189.646 67.694 189.613 cv
67.653 189.58 67.602 189.533 67.541 189.472 cv
67.5 189.431 67.465 189.393 67.436 189.358 cv
67.407 189.324 67.384 189.291 67.369 189.259 cv
67.354 189.227 67.342 189.196 67.334 189.166 cv
67.326 189.135 67.322 189.094 67.322 189.041 cv
67.322 188.989 67.337 188.898 67.367 188.768 cv
67.398 188.638 67.447 188.49 67.516 188.324 cv
67.585 188.159 67.68 187.983 67.8 187.796 cv
67.92 187.61 68.069 187.428 68.246 187.251 cv
68.494 187.003 68.744 186.816 68.995 186.692 cv
69.247 186.568 69.493 186.501 69.735 186.491 cv
69.977 186.481 70.209 186.526 70.433 186.626 cv
70.657 186.725 70.867 186.873 71.063 187.069 cv
71.231 187.238 71.366 187.416 71.467 187.606 cv
71.568 187.795 71.631 187.988 71.657 188.186 cv
71.684 188.383 71.674 188.583 71.628 188.786 cv
71.583 188.989 71.494 189.188 71.361 189.381 cv
71.37 189.389 li
71.574 189.224 71.789 189.101 72.016 189.021 cv
72.242 188.94 72.466 188.9 72.687 188.9 cv
72.908 188.9 73.123 188.943 73.333 189.029 cv
73.543 189.114 73.733 189.242 73.901 189.41 cv
79.454 186.31 mo
79.504 186.36 79.544 186.407 79.576 186.453 cv
79.608 186.498 79.631 186.541 79.644 186.579 cv
79.658 186.618 79.661 186.654 79.653 186.687 cv
79.644 186.72 79.628 186.749 79.603 186.774 cv
76.641 189.736 li
76.602 189.775 76.563 189.804 76.525 189.823 cv
76.486 189.843 76.445 189.852 76.402 189.85 cv
76.36 189.849 76.313 189.832 76.262 189.801 cv
76.21 189.769 76.155 189.723 76.094 189.662 cv
76.038 189.607 75.992 189.556 75.955 189.51 cv
75.918 189.465 75.891 189.419 75.873 189.373 cv
75.856 189.327 75.842 189.277 75.831 189.224 cv
75.821 189.171 75.815 189.109 75.813 189.039 cv
75.782 186.866 li
75.776 186.364 75.747 185.937 75.694 185.586 cv
75.642 185.235 75.574 184.936 75.489 184.69 cv
75.405 184.443 75.307 184.239 75.198 184.078 cv
75.088 183.917 74.974 183.777 74.855 183.658 cv
74.736 183.539 74.604 183.447 74.457 183.38 cv
74.311 183.314 74.16 183.278 74.005 183.274 cv
73.849 183.269 73.691 183.301 73.53 183.368 cv
73.369 183.435 73.214 183.542 73.066 183.69 cv
72.892 183.864 72.76 184.044 72.668 184.229 cv
72.577 184.414 72.507 184.586 72.458 184.746 cv
72.409 184.905 72.374 185.043 72.351 185.16 cv
72.328 185.277 72.299 185.352 72.265 185.386 cv
72.245 185.406 72.222 185.419 72.195 185.423 cv
72.168 185.428 72.138 185.423 72.103 185.408 cv
72.068 185.393 72.027 185.368 71.98 185.332 cv
71.933 185.296 71.88 185.249 71.822 185.191 cv
71.781 185.15 71.746 185.113 71.719 185.079 cv
71.691 185.046 71.669 185.015 71.654 184.986 cv
71.639 184.957 71.627 184.927 71.619 184.897 cv
71.611 184.867 71.609 184.82 71.613 184.758 cv
71.617 184.696 71.635 184.599 71.667 184.468 cv
71.699 184.337 71.752 184.186 71.826 184.015 cv
71.901 183.843 71.995 183.667 72.11 183.486 cv
72.225 183.305 72.363 183.133 72.526 182.97 cv
72.786 182.711 73.05 182.52 73.318 182.399 cv
73.586 182.277 73.847 182.216 74.103 182.214 cv
74.358 182.213 74.602 182.265 74.834 182.37 cv
75.066 182.475 75.278 182.622 75.468 182.813 cv
75.639 182.984 75.795 183.17 75.934 183.37 cv
76.074 183.571 76.193 183.818 76.293 184.114 cv
76.392 184.41 76.47 184.771 76.527 185.197 cv
76.583 185.624 76.616 186.148 76.624 186.77 cv
76.661 188.506 li
78.994 186.173 li
79.016 186.151 79.044 186.136 79.077 186.128 cv
79.11 186.119 79.147 186.12 79.187 186.13 cv
79.227 186.139 79.269 186.159 79.313 186.19 cv
79.357 186.22 79.404 186.26 79.454 186.31 cv
84.311 181.834 mo
84.333 181.856 84.348 181.881 84.356 181.909 cv
84.365 181.936 84.36 181.97 84.344 182.008 cv
84.327 182.047 84.299 182.093 84.259 182.147 cv
84.219 182.201 84.162 182.265 84.087 182.34 cv
83.99 182.436 83.907 182.511 83.838 182.563 cv
83.769 182.616 83.709 182.646 83.656 182.655 cv
83.604 182.663 83.554 182.663 83.507 182.655 cv
78.854 181.946 li
81.535 184.627 li
81.554 184.646 81.567 184.67 81.574 184.699 cv
81.581 184.728 81.576 184.761 81.558 184.799 cv
81.54 184.836 81.511 184.881 81.473 184.933 cv
81.434 184.986 81.38 185.047 81.311 185.116 cv
81.245 185.182 81.185 185.235 81.131 185.275 cv
81.077 185.315 81.031 185.344 80.994 185.362 cv
80.957 185.38 80.924 185.386 80.895 185.379 cv
80.866 185.372 80.841 185.359 80.822 185.339 cv
75.676 180.194 li
75.654 180.171 75.64 180.147 75.635 180.119 cv
75.629 180.091 75.636 180.059 75.653 180.022 cv
75.671 179.984 75.7 179.939 75.74 179.885 cv
75.781 179.831 75.834 179.771 75.9 179.705 cv
75.969 179.636 76.03 179.582 76.082 179.543 cv
76.135 179.504 76.18 179.476 76.217 179.458 cv
76.254 179.44 76.287 179.434 76.314 179.439 cv
76.342 179.445 76.367 179.459 76.389 179.481 cv
78.771 181.863 li
78.286 177.583 li
78.278 177.542 78.277 177.502 78.282 177.463 cv
78.288 177.424 78.302 177.384 78.324 177.343 cv
78.346 177.302 78.377 177.255 78.417 177.204 cv
78.457 177.153 78.513 177.092 78.585 177.02 cv
78.657 176.948 78.718 176.893 78.769 176.856 cv
78.82 176.819 78.864 176.793 78.902 176.777 cv
78.939 176.762 78.971 176.758 78.997 176.765 cv
79.023 176.772 79.046 176.785 79.065 176.804 cv
79.101 176.84 79.128 176.885 79.146 176.939 cv
79.164 176.993 79.18 177.076 79.194 177.19 cv
79.542 181.093 li
84 181.722 li
84.119 181.747 84.196 181.768 84.232 181.785 cv
84.268 181.801 84.294 181.818 84.311 181.834 cv
87.339 175.963 mo
87.508 176.132 87.642 176.309 87.741 176.494 cv
87.841 176.679 87.908 176.867 87.944 177.057 cv
87.98 177.248 87.986 177.441 87.963 177.635 cv
87.939 177.83 87.888 178.025 87.809 178.219 cv
87.731 178.414 87.628 178.604 87.501 178.789 cv
87.374 178.974 87.209 179.168 87.008 179.369 cv
85.607 180.77 li
85.544 180.833 85.462 180.872 85.363 180.886 cv
85.263 180.899 85.16 180.852 85.052 180.745 cv
80.271 175.963 li
80.163 175.856 80.116 175.752 80.13 175.653 cv
80.144 175.553 80.183 175.472 80.246 175.408 cv
81.464 174.19 li
81.785 173.87 82.077 173.638 82.343 173.494 cv
82.608 173.35 82.867 173.268 83.119 173.248 cv
83.372 173.227 83.617 173.266 83.855 173.366 cv
84.092 173.465 84.317 173.621 84.53 173.834 cv
84.657 173.961 84.764 174.098 84.849 174.244 cv
84.935 174.39 84.997 174.542 85.036 174.7 cv
85.074 174.857 85.087 175.02 85.075 175.187 cv
85.063 175.354 85.023 175.52 84.957 175.686 cv
85.131 175.567 85.318 175.481 85.518 175.427 cv
85.719 175.373 85.923 175.355 86.131 175.373 cv
86.34 175.391 86.548 175.448 86.755 175.545 cv
86.962 175.642 87.157 175.781 87.339 175.963 cv
83.867 174.638 mo
83.737 174.508 83.602 174.408 83.461 174.339 cv
83.321 174.27 83.175 174.237 83.025 174.241 cv
82.874 174.245 82.718 174.29 82.555 174.375 cv
82.392 174.461 82.209 174.605 82.005 174.809 cv
81.269 175.545 li
83.005 177.281 li
83.816 176.471 li
84 176.286 84.125 176.113 84.189 175.952 cv
84.254 175.791 84.283 175.632 84.276 175.476 cv
84.269 175.32 84.228 175.171 84.153 175.027 cv
84.079 174.883 83.983 174.754 83.867 174.638 cv
86.631 176.755 mo
86.471 176.595 86.304 176.479 86.132 176.409 cv
85.959 176.338 85.783 176.31 85.602 176.325 cv
85.421 176.34 85.236 176.4 85.045 176.505 cv
84.855 176.61 84.648 176.774 84.425 176.997 cv
83.573 177.849 li
85.462 179.738 li
86.496 178.704 li
86.659 178.542 86.781 178.38 86.864 178.22 cv
86.947 178.06 86.996 177.896 87.012 177.728 cv
87.029 177.56 87.007 177.393 86.946 177.227 cv
86.885 177.061 86.78 176.904 86.631 176.755 cv
f
grestore
gsave
87.967 191.831 mo
98.32 202.182 li
126.3 174.202 li
115.948 163.85 li
cp
clp
103.419 189.028 mo
103.654 189.263 103.845 189.526 103.993 189.817 cv
104.141 190.109 104.223 190.413 104.241 190.729 cv
104.259 191.045 104.204 191.368 104.076 191.698 cv
103.947 192.028 103.727 192.349 103.415 192.662 cv
103.191 192.885 102.966 193.055 102.74 193.171 cv
102.513 193.287 102.285 193.358 102.056 193.382 cv
101.827 193.407 101.595 193.387 101.362 193.322 cv
101.129 193.258 100.891 193.155 100.649 193.016 cv
100.408 192.876 100.162 192.704 99.9142 192.5 cv
99.6652 192.296 99.4112 192.064 99.1512 191.804 cv
98.9222 191.575 98.7032 191.33 98.4932 191.071 cv
98.2832 190.811 98.1012 190.54 97.9462 190.259 cv
97.7912 189.977 97.6722 189.685 97.5902 189.384 cv
97.5072 189.083 97.4762 188.779 97.4982 188.473 cv
97.5202 188.166 97.6052 187.857 97.7512 187.545 cv
97.8972 187.233 98.1232 186.925 98.4262 186.621 cv
98.5292 186.519 98.6382 186.421 98.7562 186.329 cv
98.8732 186.236 98.9862 186.156 99.0962 186.088 cv
99.2052 186.021 99.3022 185.969 99.3882 185.933 cv
99.4732 185.897 99.5332 185.877 99.5682 185.873 cv
99.6022 185.869 99.6332 185.871 99.6612 185.879 cv
99.6892 185.887 99.7162 185.899 99.7422 185.914 cv
99.7682 185.93 99.7962 185.949 99.8252 185.972 cv
99.8542 185.996 99.8882 186.027 99.9262 186.066 cv
99.9762 186.115 100.018 186.159 100.053 186.196 cv
100.087 186.233 100.111 186.268 100.123 186.3 cv
100.136 186.331 100.14 186.36 100.136 186.387 cv
100.131 186.413 100.117 186.438 100.092 186.463 cv
100.062 186.494 100.011 186.525 99.9392 186.559 cv
99.8672 186.592 99.7822 186.634 99.6842 186.685 cv
99.5862 186.736 99.4742 186.805 99.3482 186.892 cv
99.2232 186.979 99.0892 187.093 98.9482 187.234 cv
98.6922 187.491 98.5232 187.764 98.4432 188.054 cv
98.3632 188.344 98.3532 188.636 98.4122 188.931 cv
98.4712 189.225 98.5892 189.517 98.7662 189.807 cv
98.9432 190.097 99.1542 190.373 99.4002 190.636 cv
99.4302 190.522 99.4702 190.4 99.5182 190.269 cv
99.5672 190.138 99.6272 190.002 99.7002 189.863 cv
99.7742 189.723 99.8592 189.584 99.9572 189.444 cv
100.055 189.305 100.172 189.167 100.307 189.032 cv
100.597 188.742 100.881 188.537 101.159 188.417 cv
101.436 188.297 101.706 188.245 101.969 188.261 cv
102.231 188.278 102.483 188.355 102.725 188.491 cv
102.967 188.628 103.198 188.807 103.419 189.028 cv
102.764 189.815 mo
102.604 189.655 102.443 189.525 102.28 189.426 cv
102.117 189.326 101.952 189.268 101.787 189.252 cv
101.621 189.235 101.451 189.264 101.277 189.339 cv
101.103 189.413 100.925 189.542 100.742 189.724 cv
100.64 189.826 100.547 189.937 100.463 190.058 cv
100.379 190.178 100.305 190.301 100.241 190.428 cv
100.178 190.555 100.124 190.684 100.08 190.814 cv
100.035 190.944 100.002 191.069 99.9802 191.191 cv
100.336 191.547 100.658 191.823 100.943 192.017 cv
101.229 192.212 101.488 192.338 101.72 192.396 cv
101.952 192.454 102.164 192.45 102.356 192.382 cv
102.548 192.314 102.731 192.193 102.905 192.019 cv
103.082 191.843 103.202 191.656 103.266 191.46 cv
103.329 191.264 103.348 191.067 103.322 190.87 cv
103.295 190.672 103.233 190.484 103.133 190.304 cv
103.034 190.125 102.911 189.962 102.764 189.815 cv
108.007 184.863 mo
108.098 184.954 108.156 185.04 108.181 185.12 cv
108.205 185.2 108.193 185.265 108.143 185.315 cv
107.538 185.92 li
108.665 187.047 li
108.687 187.069 108.7 187.093 108.704 187.12 cv
108.708 187.146 108.701 187.179 108.684 187.219 cv
108.666 187.258 108.638 187.303 108.598 187.354 cv
108.558 187.406 108.502 187.467 108.431 187.538 cv
108.363 187.606 108.303 187.66 108.252 187.7 cv
108.201 187.74 108.156 187.768 108.118 187.784 cv
108.08 187.8 108.049 187.805 108.024 187.8 cv
107.998 187.795 107.975 187.781 107.953 187.759 cv
106.826 186.632 li
104.632 188.826 li
104.599 188.858 104.568 188.882 104.538 188.895 cv
104.508 188.909 104.472 188.914 104.433 188.909 cv
104.393 188.905 104.349 188.886 104.3 188.851 cv
104.252 188.816 104.195 188.766 104.128 188.7 cv
104.076 188.647 104.03 188.599 103.992 188.555 cv
103.953 188.511 103.921 188.467 103.894 188.424 cv
103.868 188.382 103.846 188.338 103.828 188.292 cv
103.809 188.247 103.792 188.196 103.775 188.141 cv
102.43 182.974 li
102.422 182.938 102.423 182.898 102.433 182.855 cv
102.443 182.811 102.464 182.763 102.495 182.71 cv
102.526 182.656 102.571 182.597 102.629 182.53 cv
102.686 182.464 102.758 182.389 102.842 182.305 cv
102.935 182.212 103.019 182.134 103.095 182.072 cv
103.171 182.01 103.236 181.963 103.289 181.932 cv
103.342 181.901 103.389 181.883 103.43 181.879 cv
103.47 181.874 103.503 181.884 103.528 181.909 cv
106.95 185.331 li
107.555 184.726 li
107.602 184.679 107.664 184.666 107.741 184.685 cv
107.819 184.704 107.907 184.764 108.007 184.863 cv
103.296 183.102 mo
103.288 183.11 li
104.506 187.776 li
106.237 186.044 li
cp
113.854 181.833 mo
113.876 181.855 113.891 181.88 113.899 181.908 cv
113.907 181.936 113.903 181.969 113.887 182.007 cv
113.87 182.046 113.842 182.092 113.802 182.146 cv
113.762 182.2 113.704 182.264 113.63 182.339 cv
113.533 182.436 113.45 182.51 113.381 182.563 cv
113.312 182.615 113.251 182.645 113.199 182.654 cv
113.146 182.662 113.097 182.662 113.05 182.654 cv
108.397 181.945 li
111.078 184.626 li
111.097 184.645 111.11 184.669 111.117 184.698 cv
111.124 184.727 111.118 184.761 111.1 184.798 cv
111.082 184.835 111.054 184.88 111.015 184.933 cv
110.977 184.985 110.923 185.046 110.854 185.115 cv
110.788 185.181 110.728 185.234 110.674 185.274 cv
110.62 185.314 110.574 185.343 110.537 185.361 cv
110.5 185.379 110.467 185.385 110.438 185.378 cv
110.409 185.371 110.384 185.358 110.365 185.339 cv
105.219 180.193 li
105.197 180.171 105.183 180.146 105.178 180.118 cv
105.172 180.09 105.178 180.058 105.196 180.021 cv
105.214 179.983 105.243 179.938 105.283 179.884 cv
105.323 179.83 105.377 179.77 105.443 179.704 cv
105.512 179.635 105.573 179.581 105.625 179.542 cv
105.678 179.504 105.723 179.475 105.76 179.457 cv
105.797 179.439 105.83 179.433 105.857 179.439 cv
105.885 179.444 105.91 179.458 105.932 179.48 cv
108.314 181.862 li
107.829 177.582 li
107.821 177.541 107.82 177.501 107.825 177.462 cv
107.831 177.424 107.845 177.384 107.867 177.342 cv
107.889 177.301 107.92 177.254 107.96 177.203 cv
108 177.152 108.056 177.091 108.128 177.019 cv
108.199 176.947 108.261 176.893 108.312 176.855 cv
108.363 176.818 108.407 176.792 108.445 176.777 cv
108.482 176.761 108.514 176.757 108.54 176.764 cv
108.566 176.771 108.589 176.784 108.608 176.804 cv
108.644 176.839 108.671 176.884 108.689 176.938 cv
108.707 176.992 108.723 177.076 108.737 177.189 cv
109.085 181.092 li
113.543 181.722 li
113.662 181.746 113.739 181.767 113.775 181.784 cv
113.811 181.8 113.837 181.817 113.854 181.833 cv
116.882 175.963 mo
117.051 176.131 117.185 176.308 117.284 176.493 cv
117.383 176.678 117.451 176.866 117.487 177.056 cv
117.523 177.247 117.529 177.44 117.506 177.634 cv
117.482 177.829 117.431 178.024 117.352 178.219 cv
117.274 178.413 117.171 178.603 117.044 178.788 cv
116.917 178.973 116.752 179.167 116.551 179.368 cv
115.15 180.769 li
115.087 180.832 115.005 180.871 114.906 180.885 cv
114.806 180.899 114.703 180.852 114.595 180.744 cv
109.814 175.963 li
109.706 175.855 109.659 175.751 109.673 175.652 cv
109.687 175.552 109.725 175.471 109.789 175.407 cv
111.007 174.189 li
111.327 173.869 111.62 173.637 111.885 173.493 cv
112.151 173.35 112.41 173.268 112.662 173.247 cv
112.915 173.226 113.16 173.265 113.398 173.365 cv
113.635 173.464 113.86 173.62 114.073 173.833 cv
114.2 173.96 114.306 174.097 114.392 174.243 cv
114.478 174.39 114.54 174.542 114.578 174.699 cv
114.617 174.856 114.63 175.019 114.618 175.186 cv
114.605 175.353 114.566 175.519 114.5 175.685 cv
114.674 175.566 114.861 175.48 115.061 175.426 cv
115.261 175.372 115.466 175.354 115.674 175.372 cv
115.883 175.39 116.091 175.447 116.298 175.544 cv
116.505 175.641 116.7 175.78 116.882 175.963 cv
113.41 174.637 mo
113.28 174.507 113.145 174.408 113.004 174.338 cv
112.863 174.269 112.718 174.237 112.567 174.241 cv
112.417 174.245 112.261 174.289 112.098 174.375 cv
111.935 174.46 111.752 174.605 111.548 174.808 cv
110.812 175.544 li
112.548 177.28 li
113.358 176.47 li
113.543 176.285 113.668 176.112 113.732 175.951 cv
113.797 175.79 113.826 175.631 113.819 175.475 cv
113.812 175.319 113.771 175.17 113.696 175.026 cv
113.621 174.883 113.526 174.753 113.41 174.637 cv
116.174 176.754 mo
116.013 176.594 115.847 176.478 115.675 176.408 cv
115.502 176.337 115.325 176.31 115.145 176.325 cv
114.964 176.34 114.778 176.399 114.588 176.504 cv
114.398 176.609 114.191 176.773 113.968 176.996 cv
113.116 177.848 li
115.005 179.737 li
116.039 178.703 li
116.202 178.541 116.324 178.379 116.407 178.219 cv
116.489 178.06 116.539 177.895 116.555 177.727 cv
116.572 177.559 116.55 177.392 116.489 177.226 cv
116.428 177.061 116.323 176.903 116.174 176.754 cv
f
grestore
gsave
113.211 196.13 mo
123.563 206.482 li
155.842 174.202 li
145.49 163.85 li
cp
clp
130.021 194.878 mo
130.073 194.93 130.114 194.979 130.141 195.023 cv
130.169 195.067 130.187 195.107 130.195 195.143 cv
130.203 195.179 130.203 195.211 130.195 195.238 cv
130.187 195.266 130.173 195.29 130.154 195.309 cv
127.353 198.11 li
127.333 198.129 127.311 198.142 127.284 198.149 cv
127.258 198.156 127.226 198.156 127.189 198.149 cv
127.152 198.142 127.111 198.125 127.067 198.097 cv
127.023 198.07 126.974 198.03 126.922 197.977 cv
126.872 197.927 126.833 197.88 126.806 197.836 cv
126.778 197.792 126.759 197.752 126.748 197.716 cv
126.737 197.68 126.734 197.647 126.74 197.617 cv
126.745 197.586 126.759 197.56 126.781 197.538 cv
127.9 196.419 li
123.823 192.342 li
123.404 193.996 li
123.379 194.076 123.354 194.134 123.328 194.172 cv
123.301 194.209 123.27 194.228 123.232 194.23 cv
123.195 194.231 123.152 194.214 123.104 194.18 cv
123.056 194.145 123 194.096 122.936 194.033 cv
122.889 193.986 122.851 193.944 122.822 193.906 cv
122.793 193.869 122.772 193.835 122.758 193.805 cv
122.744 193.775 122.737 193.743 122.735 193.712 cv
122.734 193.68 122.737 193.643 122.746 193.602 cv
123.189 191.576 li
123.192 191.557 123.199 191.536 123.21 191.514 cv
123.221 191.492 123.236 191.465 123.255 191.435 cv
123.274 191.405 123.3 191.372 123.332 191.338 cv
123.364 191.303 123.404 191.261 123.454 191.211 cv
123.52 191.145 123.578 191.093 123.628 191.054 cv
123.678 191.015 123.72 190.988 123.754 190.973 cv
123.789 190.958 123.818 190.954 123.841 190.961 cv
123.865 190.968 123.885 190.979 123.901 190.996 cv
128.612 195.707 li
129.582 194.737 li
129.604 194.715 129.631 194.701 129.663 194.694 cv
129.694 194.687 129.728 194.689 129.764 194.7 cv
129.8 194.711 129.839 194.731 129.882 194.76 cv
129.925 194.789 129.971 194.828 130.021 194.878 cv
134.269 190.581 mo
134.319 190.63 134.359 190.678 134.391 190.723 cv
134.423 190.769 134.446 190.811 134.459 190.85 cv
134.473 190.888 134.476 190.924 134.468 190.958 cv
134.459 190.991 134.443 191.02 134.418 191.045 cv
131.456 194.007 li
131.417 194.046 131.378 194.075 131.34 194.094 cv
131.301 194.113 131.26 194.122 131.217 194.121 cv
131.174 194.12 131.128 194.103 131.076 194.071 cv
131.025 194.039 130.969 193.993 130.909 193.932 cv
130.853 193.877 130.807 193.827 130.77 193.781 cv
130.733 193.735 130.706 193.689 130.688 193.643 cv
130.67 193.597 130.656 193.548 130.646 193.495 cv
130.636 193.442 130.63 193.38 130.628 193.31 cv
130.597 191.136 li
130.591 190.635 130.562 190.208 130.509 189.857 cv
130.457 189.506 130.389 189.207 130.304 188.96 cv
130.219 188.713 130.122 188.509 130.013 188.348 cv
129.903 188.188 129.789 188.048 129.67 187.929 cv
129.551 187.81 129.419 187.717 129.272 187.651 cv
129.126 187.585 128.975 187.549 128.819 187.545 cv
128.664 187.54 128.506 187.571 128.345 187.638 cv
128.184 187.705 128.029 187.813 127.881 187.961 cv
127.707 188.135 127.574 188.314 127.483 188.5 cv
127.392 188.685 127.322 188.857 127.273 189.016 cv
127.224 189.176 127.188 189.314 127.166 189.43 cv
127.143 189.547 127.114 189.623 127.08 189.657 cv
127.06 189.677 127.037 189.689 127.01 189.694 cv
126.983 189.698 126.952 189.693 126.918 189.678 cv
126.883 189.664 126.842 189.638 126.795 189.602 cv
126.748 189.567 126.695 189.52 126.637 189.462 cv
126.596 189.42 126.561 189.383 126.533 189.35 cv
126.506 189.317 126.484 189.286 126.469 189.257 cv
126.454 189.228 126.442 189.198 126.434 189.168 cv
126.426 189.137 126.424 189.091 126.428 189.029 cv
126.432 188.967 126.45 188.87 126.482 188.739 cv
126.513 188.608 126.567 188.456 126.641 188.285 cv
126.716 188.114 126.81 187.938 126.925 187.757 cv
127.04 187.576 127.178 187.404 127.341 187.241 cv
127.601 186.981 127.865 186.791 128.133 186.669 cv
128.401 186.548 128.662 186.486 128.918 186.485 cv
129.173 186.484 129.417 186.535 129.649 186.64 cv
129.881 186.745 130.092 186.893 130.283 187.084 cv
130.454 187.255 130.61 187.441 130.749 187.641 cv
130.889 187.841 131.008 188.089 131.108 188.385 cv
131.207 188.68 131.285 189.041 131.342 189.468 cv
131.398 189.895 131.431 190.419 131.439 191.04 cv
131.476 192.776 li
133.809 190.444 li
133.831 190.422 133.859 190.407 133.892 190.398 cv
133.925 190.39 133.961 190.391 134.002 190.4 cv
134.042 190.41 134.084 190.43 134.128 190.46 cv
134.172 190.491 134.219 190.531 134.269 190.581 cv
137.609 185.102 mo
137.841 185.334 138.006 185.582 138.104 185.846 cv
138.202 186.11 138.236 186.382 138.204 186.662 cv
138.172 186.942 138.073 187.229 137.908 187.522 cv
137.742 187.815 137.511 188.109 137.216 188.404 cv
136.939 188.681 136.663 188.899 136.387 189.059 cv
136.111 189.219 135.84 189.319 135.575 189.357 cv
135.31 189.396 135.054 189.372 134.808 189.287 cv
134.563 189.201 134.333 189.052 134.121 188.839 cv
133.952 188.671 133.825 188.489 133.739 188.292 cv
133.654 188.096 133.603 187.887 133.588 187.665 cv
133.573 187.442 133.59 187.204 133.638 186.948 cv
133.686 186.693 133.759 186.422 133.855 186.138 cv
133.604 186.218 133.367 186.274 133.145 186.306 cv
132.923 186.338 132.711 186.342 132.511 186.318 cv
132.311 186.295 132.124 186.242 131.952 186.161 cv
131.779 186.079 131.618 185.964 131.469 185.815 cv
131.281 185.627 131.139 185.417 131.042 185.185 cv
130.946 184.953 130.905 184.708 130.92 184.45 cv
130.935 184.191 131.013 183.921 131.154 183.64 cv
131.295 183.358 131.506 183.076 131.788 182.794 cv
132.059 182.524 132.325 182.322 132.588 182.19 cv
132.85 182.057 133.101 181.982 133.342 181.966 cv
133.582 181.949 133.808 181.987 134.021 182.078 cv
134.234 182.169 134.427 182.301 134.601 182.475 cv
134.742 182.616 134.855 182.774 134.939 182.95 cv
135.023 183.125 135.079 183.315 135.107 183.52 cv
135.134 183.724 135.134 183.941 135.107 184.17 cv
135.079 184.399 135.027 184.641 134.949 184.895 cv
135.242 184.796 135.516 184.72 135.772 184.669 cv
136.027 184.618 136.265 184.599 136.486 184.613 cv
136.707 184.627 136.91 184.673 137.095 184.75 cv
137.281 184.827 137.452 184.945 137.609 185.102 cv
133.963 183.246 mo
133.847 183.13 133.722 183.045 133.588 182.991 cv
133.454 182.937 133.315 182.916 133.172 182.927 cv
133.028 182.938 132.882 182.984 132.733 183.064 cv
132.583 183.144 132.436 183.257 132.289 183.403 cv
131.991 183.702 131.833 183.995 131.815 184.284 cv
131.797 184.573 131.905 184.834 132.14 185.069 cv
132.248 185.177 132.367 185.258 132.496 185.314 cv
132.626 185.369 132.772 185.398 132.934 185.403 cv
133.095 185.407 133.275 185.388 133.474 185.347 cv
133.673 185.305 133.898 185.244 134.15 185.164 cv
134.285 184.742 134.34 184.369 134.315 184.046 cv
134.29 183.723 134.173 183.456 133.963 183.246 cv
136.963 185.898 mo
136.836 185.771 136.697 185.679 136.546 185.622 cv
136.396 185.566 136.228 185.54 136.043 185.546 cv
135.858 185.551 135.652 185.583 135.426 185.641 cv
135.199 185.699 134.946 185.776 134.668 185.873 cv
134.579 186.132 134.512 186.371 134.467 186.588 cv
134.421 186.804 134.402 187 134.409 187.176 cv
134.415 187.351 134.448 187.511 134.506 187.654 cv
134.564 187.798 134.654 187.931 134.775 188.052 cv
135.043 188.32 135.342 188.435 135.672 188.398 cv
136.002 188.361 136.35 188.16 136.714 187.795 cv
137.068 187.442 137.261 187.101 137.294 186.772 cv
137.327 186.443 137.217 186.152 136.963 185.898 cv
143.411 181.82 mo
143.433 181.842 143.448 181.867 143.456 181.894 cv
143.465 181.922 143.46 181.955 143.444 181.994 cv
143.427 182.032 143.399 182.079 143.359 182.133 cv
143.319 182.186 143.262 182.251 143.187 182.325 cv
143.09 182.422 143.007 182.497 142.938 182.549 cv
142.869 182.601 142.809 182.632 142.756 182.64 cv
142.704 182.648 142.654 182.648 142.607 182.64 cv
137.954 181.932 li
140.635 184.612 li
140.654 184.632 140.667 184.656 140.674 184.685 cv
140.681 184.714 140.675 184.747 140.658 184.784 cv
140.64 184.822 140.611 184.866 140.573 184.919 cv
140.534 184.971 140.48 185.032 140.411 185.101 cv
140.345 185.167 140.285 185.221 140.231 185.261 cv
140.177 185.301 140.131 185.33 140.094 185.348 cv
140.057 185.366 140.024 185.371 139.995 185.364 cv
139.966 185.357 139.941 185.344 139.922 185.325 cv
134.776 180.179 li
134.754 180.157 134.74 180.132 134.735 180.105 cv
134.729 180.077 134.735 180.044 134.753 180.007 cv
134.771 179.97 134.8 179.924 134.84 179.87 cv
134.881 179.817 134.934 179.756 135 179.69 cv
135.069 179.621 135.13 179.567 135.182 179.529 cv
135.235 179.49 135.28 179.462 135.317 179.444 cv
135.354 179.426 135.387 179.42 135.414 179.425 cv
135.442 179.431 135.467 179.444 135.489 179.466 cv
137.871 181.849 li
137.386 177.569 li
137.378 177.527 137.377 177.487 137.382 177.449 cv
137.388 177.41 137.402 177.37 137.424 177.329 cv
137.446 177.287 137.477 177.241 137.517 177.19 cv
137.557 177.139 137.613 177.077 137.685 177.005 cv
137.757 176.934 137.818 176.879 137.869 176.842 cv
137.92 176.804 137.964 176.778 138.002 176.763 cv
138.039 176.748 138.071 176.744 138.097 176.751 cv
138.123 176.757 138.146 176.771 138.165 176.79 cv
138.201 176.826 138.228 176.871 138.246 176.925 cv
138.264 176.978 138.28 177.062 138.294 177.175 cv
138.642 181.078 li
143.1 181.708 li
143.219 181.733 143.296 181.754 143.332 181.77 cv
143.368 181.787 143.394 181.803 143.411 181.82 cv
146.439 175.949 mo
146.608 176.118 146.742 176.294 146.841 176.479 cv
146.941 176.664 147.008 176.852 147.044 177.043 cv
147.08 177.233 147.086 177.426 147.063 177.621 cv
147.039 177.816 146.988 178.01 146.909 178.205 cv
146.831 178.4 146.728 178.59 146.601 178.775 cv
146.474 178.96 146.309 179.153 146.108 179.355 cv
144.707 180.755 li
144.644 180.819 144.562 180.857 144.463 180.871 cv
144.363 180.885 144.26 180.838 144.152 180.73 cv
139.371 175.949 li
139.263 175.841 139.216 175.738 139.23 175.638 cv
139.244 175.539 139.282 175.457 139.346 175.394 cv
140.564 174.176 li
140.885 173.855 141.177 173.623 141.442 173.48 cv
141.708 173.336 141.967 173.254 142.219 173.233 cv
142.472 173.212 142.717 173.252 142.955 173.351 cv
143.192 173.451 143.417 173.607 143.63 173.819 cv
143.757 173.946 143.863 174.083 143.949 174.23 cv
144.035 174.376 144.097 174.528 144.136 174.685 cv
144.174 174.843 144.187 175.005 144.175 175.172 cv
144.162 175.339 144.123 175.506 144.057 175.671 cv
144.231 175.553 144.418 175.466 144.618 175.412 cv
144.819 175.359 145.023 175.341 145.231 175.359 cv
145.44 175.377 145.648 175.434 145.855 175.531 cv
146.062 175.627 146.257 175.767 146.439 175.949 cv
142.967 174.623 mo
142.837 174.493 142.702 174.394 142.561 174.325 cv
142.42 174.256 142.275 174.223 142.125 174.227 cv
141.974 174.231 141.818 174.276 141.655 174.361 cv
141.492 174.446 141.309 174.591 141.105 174.795 cv
140.369 175.531 li
142.105 177.267 li
142.916 176.456 li
143.1 176.272 143.225 176.099 143.289 175.938 cv
143.354 175.776 143.383 175.618 143.376 175.462 cv
143.369 175.306 143.328 175.156 143.253 175.013 cv
143.179 174.869 143.083 174.739 142.967 174.623 cv
145.731 176.74 mo
145.57 176.58 145.404 176.465 145.232 176.394 cv
145.059 176.324 144.882 176.296 144.702 176.311 cv
144.521 176.326 144.335 176.386 144.145 176.49 cv
143.955 176.595 143.748 176.759 143.525 176.982 cv
142.673 177.834 li
144.562 179.723 li
145.596 178.69 li
145.759 178.527 145.881 178.366 145.964 178.206 cv
146.047 178.046 146.096 177.882 146.112 177.713 cv
146.129 177.545 146.107 177.378 146.046 177.213 cv
145.985 177.047 145.88 176.89 145.731 176.74 cv
f
grestore
gsave
142.754 196.13 mo
153.106 206.482 li
185.386 174.202 li
175.034 163.85 li
cp
clp
159.527 194.865 mo
159.577 194.915 159.617 194.962 159.649 195.008 cv
159.681 195.054 159.704 195.096 159.718 195.134 cv
159.731 195.173 159.734 195.209 159.726 195.242 cv
159.718 195.275 159.701 195.304 159.676 195.329 cv
156.714 198.291 li
156.675 198.33 156.636 198.359 156.598 198.378 cv
156.559 198.398 156.518 198.407 156.476 198.405 cv
156.433 198.404 156.386 198.387 156.335 198.356 cv
156.284 198.324 156.228 198.278 156.167 198.217 cv
156.112 198.162 156.065 198.111 156.028 198.065 cv
155.991 198.02 155.964 197.974 155.946 197.928 cv
155.929 197.882 155.915 197.832 155.904 197.779 cv
155.894 197.726 155.888 197.664 155.886 197.594 cv
155.856 195.421 li
155.849 194.919 155.82 194.493 155.768 194.142 cv
155.715 193.79 155.647 193.491 155.562 193.245 cv
155.478 192.998 155.381 192.794 155.271 192.633 cv
155.161 192.472 155.047 192.332 154.928 192.213 cv
154.809 192.095 154.677 192.002 154.531 191.936 cv
154.384 191.869 154.233 191.834 154.078 191.829 cv
153.922 191.824 153.764 191.856 153.603 191.923 cv
153.442 191.99 153.287 192.097 153.139 192.246 cv
152.965 192.419 152.833 192.599 152.741 192.784 cv
152.65 192.969 152.58 193.142 152.531 193.301 cv
152.483 193.46 152.447 193.598 152.424 193.715 cv
152.401 193.832 152.372 193.907 152.338 193.941 cv
152.318 193.961 152.295 193.974 152.268 193.978 cv
152.241 193.983 152.211 193.978 152.176 193.963 cv
152.141 193.948 152.1 193.923 152.053 193.887 cv
152.006 193.851 151.953 193.804 151.895 193.746 cv
151.854 193.705 151.819 193.668 151.792 193.634 cv
151.764 193.601 151.743 193.57 151.727 193.541 cv
151.712 193.512 151.7 193.483 151.692 193.452 cv
151.684 193.422 151.682 193.376 151.686 193.313 cv
151.69 193.251 151.708 193.155 151.74 193.023 cv
151.772 192.892 151.825 192.741 151.899 192.57 cv
151.974 192.398 152.069 192.222 152.183 192.041 cv
152.298 191.86 152.437 191.689 152.6 191.526 cv
152.859 191.266 153.123 191.075 153.391 190.954 cv
153.659 190.832 153.921 190.771 154.176 190.769 cv
154.432 190.768 154.675 190.82 154.907 190.925 cv
155.139 191.03 155.351 191.178 155.541 191.368 cv
155.712 191.539 155.868 191.725 156.007 191.925 cv
156.147 192.126 156.266 192.374 156.366 192.669 cv
156.465 192.965 156.543 193.326 156.6 193.753 cv
156.656 194.179 156.689 194.703 156.697 195.325 cv
156.734 197.061 li
159.067 194.728 li
159.089 194.706 159.117 194.691 159.15 194.683 cv
159.183 194.674 159.22 194.675 159.26 194.685 cv
159.3 194.694 159.342 194.714 159.386 194.745 cv
159.43 194.775 159.477 194.815 159.527 194.865 cv
162.37 189.188 mo
162.657 189.475 162.865 189.779 162.992 190.099 cv
163.119 190.42 163.171 190.745 163.147 191.075 cv
163.124 191.405 163.03 191.732 162.865 192.057 cv
162.701 192.382 162.47 192.693 162.171 192.991 cv
162.006 193.157 161.836 193.303 161.664 193.428 cv
161.491 193.554 161.33 193.658 161.179 193.739 cv
161.029 193.821 160.899 193.882 160.792 193.924 cv
160.684 193.965 160.61 193.986 160.57 193.988 cv
160.53 193.989 160.498 193.986 160.473 193.977 cv
160.448 193.969 160.42 193.957 160.39 193.94 cv
160.359 193.924 160.325 193.899 160.286 193.865 cv
160.248 193.832 160.203 193.791 160.154 193.741 cv
160.107 193.694 160.067 193.65 160.033 193.609 cv
160 193.567 159.978 193.529 159.965 193.495 cv
159.953 193.46 159.949 193.43 159.953 193.404 cv
159.957 193.377 159.969 193.355 159.988 193.335 cv
160.016 193.308 160.076 193.282 160.168 193.259 cv
160.261 193.235 160.376 193.194 160.514 193.136 cv
160.652 193.078 160.812 192.995 160.993 192.886 cv
161.174 192.777 161.363 192.623 161.562 192.424 cv
161.747 192.239 161.895 192.047 162.006 191.848 cv
162.116 191.649 162.18 191.447 162.198 191.241 cv
162.216 191.035 162.186 190.829 162.107 190.623 cv
162.028 190.418 161.887 190.213 161.682 190.008 cv
161.511 189.837 161.333 189.713 161.148 189.635 cv
160.963 189.558 160.771 189.532 160.572 189.557 cv
160.373 189.581 160.167 189.658 159.953 189.787 cv
159.739 189.915 159.513 190.098 159.275 190.335 cv
159.107 190.504 158.97 190.657 158.865 190.795 cv
158.76 190.933 158.655 191.055 158.55 191.16 cv
158.473 191.237 158.4 191.275 158.331 191.272 cv
158.262 191.269 158.176 191.217 158.074 191.114 cv
155.89 188.931 li
155.799 188.84 155.753 188.751 155.751 188.664 cv
155.75 188.577 155.789 188.493 155.87 188.413 cv
158.244 186.039 li
158.266 186.017 158.293 186.002 158.326 185.993 cv
158.36 185.985 158.396 185.986 158.434 185.998 cv
158.473 186.009 158.515 186.03 158.561 186.062 cv
158.606 186.094 158.655 186.136 158.708 186.188 cv
158.807 186.288 158.871 186.378 158.9 186.46 cv
158.929 186.542 158.919 186.606 158.872 186.654 cv
156.955 188.57 li
158.459 190.074 li
158.538 189.968 158.625 189.864 158.72 189.764 cv
158.814 189.664 158.925 189.55 159.053 189.423 cv
159.348 189.127 159.643 188.906 159.937 188.758 cv
160.231 188.611 160.519 188.53 160.8 188.516 cv
161.082 188.502 161.356 188.553 161.623 188.668 cv
161.889 188.782 162.138 188.956 162.37 189.188 cv
166.804 184.729 mo
167.039 184.964 167.231 185.227 167.378 185.518 cv
167.526 185.809 167.609 186.113 167.627 186.43 cv
167.645 186.746 167.59 187.069 167.461 187.399 cv
167.333 187.729 167.112 188.05 166.8 188.362 cv
166.577 188.586 166.351 188.756 166.125 188.872 cv
165.898 188.988 165.671 189.058 165.441 189.083 cv
165.212 189.108 164.981 189.088 164.747 189.023 cv
164.514 188.958 164.276 188.856 164.035 188.717 cv
163.793 188.577 163.548 188.405 163.299 188.201 cv
163.051 187.996 162.797 187.764 162.537 187.505 cv
162.308 187.275 162.088 187.031 161.878 186.771 cv
161.668 186.512 161.486 186.241 161.331 185.959 cv
161.177 185.678 161.058 185.386 160.975 185.085 cv
160.892 184.784 160.862 184.48 160.884 184.174 cv
160.906 183.867 160.99 183.558 161.137 183.245 cv
161.283 182.933 161.508 182.625 161.812 182.322 cv
161.914 182.219 162.024 182.122 162.141 182.029 cv
162.259 181.937 162.372 181.857 162.481 181.789 cv
162.59 181.721 162.687 181.67 162.773 181.634 cv
162.859 181.598 162.919 181.578 162.953 181.574 cv
162.988 181.57 163.019 181.572 163.047 181.58 cv
163.074 181.588 163.101 181.6 163.127 181.615 cv
163.154 181.63 163.181 181.65 163.21 181.673 cv
163.239 181.697 163.273 181.728 163.312 181.766 cv
163.361 181.816 163.404 181.86 163.438 181.897 cv
163.473 181.934 163.496 181.969 163.509 182 cv
163.521 182.032 163.525 182.061 163.521 182.087 cv
163.517 182.114 163.502 182.139 163.477 182.164 cv
163.447 182.194 163.396 182.226 163.324 182.259 cv
163.252 182.293 163.167 182.335 163.069 182.386 cv
162.971 182.437 162.859 182.506 162.734 182.593 cv
162.608 182.68 162.475 182.794 162.334 182.935 cv
162.077 183.192 161.909 183.465 161.828 183.755 cv
161.748 184.045 161.738 184.337 161.797 184.631 cv
161.857 184.926 161.975 185.218 162.152 185.508 cv
162.328 185.798 162.54 186.074 162.786 186.336 cv
162.816 186.223 162.855 186.101 162.904 185.97 cv
162.952 185.838 163.013 185.703 163.086 185.564 cv
163.159 185.424 163.245 185.285 163.343 185.145 cv
163.441 185.006 163.558 184.868 163.693 184.733 cv
163.983 184.443 164.267 184.238 164.544 184.118 cv
164.822 183.997 165.092 183.946 165.354 183.962 cv
165.617 183.979 165.869 184.055 166.11 184.192 cv
166.352 184.329 166.583 184.508 166.804 184.729 cv
166.15 185.516 mo
165.99 185.356 165.828 185.226 165.665 185.126 cv
165.502 185.027 165.338 184.969 165.172 184.952 cv
165.006 184.936 164.836 184.965 164.662 185.039 cv
164.488 185.114 164.31 185.243 164.128 185.425 cv
164.026 185.527 163.933 185.638 163.848 185.758 cv
163.764 185.878 163.69 186.002 163.627 186.129 cv
163.563 186.256 163.509 186.385 163.465 186.514 cv
163.421 186.644 163.388 186.77 163.366 186.891 cv
163.722 187.248 164.043 187.523 164.329 187.718 cv
164.615 187.913 164.874 188.039 165.106 188.097 cv
165.338 188.155 165.55 188.15 165.742 188.083 cv
165.934 188.015 166.117 187.894 166.291 187.72 cv
166.467 187.543 166.588 187.357 166.651 187.161 cv
166.715 186.965 166.733 186.768 166.707 186.57 cv
166.681 186.373 166.618 186.184 166.519 186.005 cv
166.419 185.825 166.296 185.662 166.15 185.516 cv
172.954 181.819 mo
172.976 181.841 172.991 181.866 173 181.894 cv
173.008 181.921 173.004 181.955 172.987 181.993 cv
172.971 182.032 172.942 182.078 172.902 182.132 cv
172.862 182.186 172.805 182.25 172.73 182.325 cv
172.634 182.421 172.551 182.496 172.482 182.548 cv
172.413 182.601 172.352 182.631 172.299 182.64 cv
172.247 182.648 172.197 182.648 172.15 182.64 cv
167.497 181.931 li
170.178 184.612 li
170.197 184.631 170.21 184.655 170.217 184.684 cv
170.224 184.713 170.219 184.746 170.201 184.784 cv
170.183 184.821 170.155 184.866 170.116 184.918 cv
170.077 184.971 170.023 185.032 169.954 185.101 cv
169.888 185.167 169.828 185.22 169.774 185.26 cv
169.72 185.3 169.675 185.329 169.637 185.347 cv
169.6 185.365 169.567 185.371 169.538 185.364 cv
169.509 185.357 169.485 185.344 169.465 185.324 cv
164.32 180.179 li
164.297 180.156 164.284 180.132 164.278 180.104 cv
164.273 180.076 164.279 180.044 164.297 180.007 cv
164.315 179.969 164.344 179.924 164.384 179.87 cv
164.424 179.816 164.477 179.756 164.543 179.69 cv
164.612 179.621 164.673 179.567 164.726 179.528 cv
164.778 179.489 164.823 179.461 164.86 179.443 cv
164.897 179.425 164.93 179.419 164.958 179.424 cv
164.985 179.43 165.01 179.444 165.032 179.466 cv
167.414 181.848 li
166.93 177.568 li
166.921 177.527 166.92 177.487 166.926 177.448 cv
166.931 177.409 166.945 177.369 166.967 177.328 cv
166.989 177.287 167.02 177.24 167.06 177.189 cv
167.1 177.138 167.156 177.077 167.228 177.005 cv
167.3 176.933 167.361 176.878 167.412 176.841 cv
167.464 176.804 167.508 176.778 167.545 176.762 cv
167.582 176.747 167.614 176.743 167.64 176.75 cv
167.667 176.757 167.689 176.77 167.709 176.789 cv
167.745 176.825 167.772 176.87 167.789 176.924 cv
167.807 176.978 167.823 177.061 167.837 177.175 cv
168.185 181.078 li
172.643 181.707 li
172.762 181.732 172.839 181.753 172.875 181.77 cv
172.911 181.786 172.937 181.803 172.954 181.819 cv
175.982 175.948 mo
176.151 176.117 176.285 176.294 176.384 176.479 cv
176.484 176.664 176.551 176.852 176.587 177.042 cv
176.623 177.233 176.63 177.426 176.606 177.62 cv
176.583 177.815 176.531 178.01 176.453 178.204 cv
176.374 178.399 176.271 178.589 176.144 178.774 cv
176.017 178.959 175.853 179.153 175.651 179.354 cv
174.251 180.755 li
174.187 180.818 174.106 180.857 174.006 180.871 cv
173.907 180.884 173.803 180.837 173.695 180.73 cv
168.914 175.948 li
168.806 175.841 168.759 175.737 168.773 175.638 cv
168.787 175.538 168.826 175.457 168.889 175.393 cv
170.107 174.175 li
170.428 173.855 170.721 173.623 170.986 173.479 cv
171.251 173.335 171.51 173.253 171.763 173.233 cv
172.015 173.212 172.261 173.251 172.498 173.351 cv
172.736 173.45 172.961 173.606 173.173 173.819 cv
173.3 173.946 173.407 174.083 173.492 174.229 cv
173.578 174.375 173.64 174.527 173.679 174.685 cv
173.718 174.842 173.731 175.004 173.718 175.172 cv
173.706 175.339 173.666 175.505 173.6 175.671 cv
173.774 175.552 173.961 175.466 174.162 175.412 cv
174.362 175.358 174.566 175.34 174.775 175.358 cv
174.983 175.376 175.191 175.433 175.398 175.53 cv
175.605 175.627 175.8 175.766 175.982 175.948 cv
172.51 174.623 mo
172.381 174.493 172.245 174.393 172.105 174.324 cv
171.964 174.255 171.818 174.222 171.668 174.226 cv
171.517 174.23 171.361 174.275 171.198 174.36 cv
171.036 174.446 170.852 174.59 170.648 174.794 cv
169.913 175.53 li
171.649 177.266 li
172.459 176.456 li
172.643 176.271 172.768 176.098 172.833 175.937 cv
172.897 175.776 172.926 175.617 172.919 175.461 cv
172.912 175.305 172.871 175.156 172.796 175.012 cv
172.722 174.868 172.626 174.739 172.51 174.623 cv
175.274 176.74 mo
175.114 176.58 174.947 176.464 174.775 176.394 cv
174.602 176.323 174.426 176.295 174.245 176.31 cv
174.064 176.325 173.879 176.385 173.688 176.49 cv
173.498 176.595 173.291 176.759 173.068 176.982 cv
172.216 177.834 li
174.106 179.723 li
175.139 178.689 li
175.302 178.527 175.425 178.365 175.507 178.205 cv
175.59 178.045 175.639 177.881 175.656 177.713 cv
175.672 177.545 175.65 177.378 175.589 177.212 cv
175.528 177.046 175.423 176.889 175.274 176.74 cv
f
grestore
gsave
172.297 196.13 mo
182.65 206.482 li
214.929 174.202 li
204.576 163.85 li
cp
clp
187.628 193.473 mo
187.915 193.76 188.122 194.064 188.249 194.384 cv
188.377 194.705 188.428 195.03 188.405 195.36 cv
188.381 195.69 188.287 196.018 188.123 196.342 cv
187.959 196.667 187.727 196.978 187.429 197.276 cv
187.263 197.442 187.094 197.588 186.922 197.714 cv
186.749 197.839 186.587 197.943 186.437 198.024 cv
186.286 198.106 186.157 198.167 186.049 198.209 cv
185.942 198.25 185.868 198.272 185.828 198.273 cv
185.788 198.274 185.755 198.271 185.73 198.263 cv
185.706 198.254 185.678 198.242 185.648 198.225 cv
185.617 198.209 185.583 198.184 185.544 198.151 cv
185.505 198.118 185.461 198.076 185.411 198.026 cv
185.364 197.979 185.324 197.935 185.291 197.894 cv
185.258 197.852 185.235 197.814 185.223 197.78 cv
185.21 197.745 185.206 197.715 185.21 197.689 cv
185.215 197.662 185.226 197.64 185.246 197.62 cv
185.273 197.593 185.333 197.567 185.426 197.544 cv
185.518 197.52 185.634 197.479 185.772 197.421 cv
185.91 197.363 186.069 197.28 186.25 197.171 cv
186.431 197.062 186.621 196.908 186.82 196.709 cv
187.005 196.524 187.153 196.332 187.263 196.133 cv
187.374 195.934 187.438 195.732 187.456 195.526 cv
187.474 195.32 187.444 195.114 187.365 194.909 cv
187.286 194.703 187.145 194.498 186.94 194.293 cv
186.769 194.122 186.591 193.998 186.406 193.92 cv
186.221 193.843 186.029 193.817 185.83 193.842 cv
185.631 193.867 185.425 193.943 185.21 194.072 cv
184.996 194.2 184.771 194.383 184.533 194.621 cv
184.365 194.789 184.228 194.942 184.123 195.081 cv
184.018 195.219 183.913 195.34 183.808 195.445 cv
183.731 195.522 183.657 195.56 183.588 195.557 cv
183.519 195.554 183.434 195.502 183.331 195.4 cv
181.148 193.216 li
181.057 193.125 181.011 193.036 181.009 192.949 cv
181.008 192.862 181.047 192.778 181.127 192.698 cv
183.501 190.324 li
183.523 190.302 183.551 190.287 183.584 190.279 cv
183.617 190.27 183.653 190.272 183.692 190.283 cv
183.731 190.294 183.773 190.315 183.818 190.347 cv
183.864 190.379 183.913 190.421 183.965 190.473 cv
184.065 190.573 184.129 190.663 184.158 190.745 cv
184.187 190.827 184.177 190.891 184.13 190.939 cv
182.213 192.856 li
183.717 194.36 li
183.796 194.253 183.883 194.149 183.977 194.049 cv
184.072 193.95 184.183 193.836 184.311 193.708 cv
184.606 193.413 184.901 193.191 185.195 193.043 cv
185.489 192.896 185.777 192.815 186.058 192.801 cv
186.34 192.788 186.614 192.838 186.88 192.953 cv
187.147 193.068 187.396 193.241 187.628 193.473 cv
193.392 190.592 mo
193.445 190.645 193.485 190.693 193.512 190.737 cv
193.54 190.782 193.558 190.822 193.566 190.858 cv
193.574 190.894 193.574 190.925 193.566 190.953 cv
193.558 190.981 193.544 191.004 193.525 191.023 cv
190.724 193.824 li
190.705 193.844 190.682 193.857 190.656 193.864 cv
190.629 193.87 190.598 193.87 190.56 193.864 cv
190.523 193.857 190.482 193.839 190.438 193.812 cv
190.394 193.784 190.346 193.744 190.293 193.692 cv
190.243 193.642 190.205 193.595 190.177 193.551 cv
190.149 193.507 190.13 193.466 190.119 193.431 cv
190.108 193.395 190.105 193.362 190.111 193.331 cv
190.116 193.301 190.13 193.275 190.152 193.252 cv
191.271 192.134 li
187.194 188.057 li
186.775 189.71 li
186.751 189.79 186.725 189.849 186.699 189.886 cv
186.673 189.923 186.641 189.943 186.604 189.944 cv
186.566 189.945 186.523 189.929 186.475 189.894 cv
186.427 189.86 186.371 189.811 186.307 189.747 cv
186.26 189.7 186.222 189.658 186.193 189.621 cv
186.164 189.584 186.143 189.55 186.129 189.519 cv
186.115 189.489 186.108 189.458 186.106 189.426 cv
186.105 189.394 186.108 189.358 186.117 189.316 cv
186.56 187.29 li
186.563 187.271 186.57 187.25 186.581 187.228 cv
186.592 187.206 186.607 187.18 186.626 187.149 cv
186.646 187.119 186.671 187.087 186.703 187.052 cv
186.735 187.018 186.775 186.975 186.825 186.926 cv
186.892 186.859 186.95 186.807 186.999 186.768 cv
187.049 186.73 187.091 186.703 187.126 186.688 cv
187.16 186.672 187.189 186.668 187.213 186.675 cv
187.236 186.682 187.256 186.694 187.273 186.71 cv
191.983 191.421 li
192.953 190.452 li
192.975 190.43 193.002 190.415 193.034 190.408 cv
193.066 190.401 193.099 190.403 193.135 190.414 cv
193.171 190.425 193.211 190.445 193.253 190.474 cv
193.296 190.503 193.342 190.543 193.392 190.592 cv
197.64 186.295 mo
197.69 186.345 197.73 186.392 197.762 186.438 cv
197.794 186.483 197.817 186.526 197.831 186.564 cv
197.844 186.603 197.847 186.639 197.839 186.672 cv
197.831 186.705 197.814 186.734 197.789 186.759 cv
194.827 189.721 li
194.788 189.76 194.749 189.789 194.711 189.808 cv
194.672 189.828 194.631 189.837 194.588 189.835 cv
194.546 189.834 194.499 189.817 194.448 189.786 cv
194.397 189.754 194.341 189.708 194.28 189.647 cv
194.225 189.592 194.178 189.541 194.141 189.495 cv
194.104 189.45 194.077 189.404 194.059 189.358 cv
194.042 189.312 194.028 189.262 194.017 189.209 cv
194.007 189.156 194.001 189.094 193.999 189.024 cv
193.969 186.851 li
193.962 186.349 193.933 185.923 193.881 185.572 cv
193.828 185.22 193.76 184.921 193.675 184.675 cv
193.591 184.428 193.493 184.224 193.384 184.063 cv
193.274 183.902 193.16 183.762 193.041 183.643 cv
192.922 183.525 192.79 183.432 192.643 183.366 cv
192.497 183.299 192.346 183.264 192.191 183.259 cv
192.035 183.254 191.877 183.286 191.716 183.353 cv
191.555 183.42 191.4 183.527 191.252 183.676 cv
191.078 183.849 190.946 184.029 190.854 184.214 cv
190.763 184.399 190.693 184.572 190.644 184.731 cv
190.595 184.89 190.56 185.028 190.537 185.145 cv
190.514 185.262 190.485 185.337 190.451 185.371 cv
190.431 185.391 190.408 185.404 190.381 185.408 cv
190.354 185.413 190.324 185.408 190.289 185.393 cv
190.254 185.378 190.213 185.353 190.166 185.317 cv
190.119 185.281 190.066 185.234 190.008 185.176 cv
189.967 185.135 189.932 185.098 189.905 185.064 cv
189.877 185.031 189.856 185 189.84 184.971 cv
189.825 184.942 189.813 184.913 189.805 184.882 cv
189.797 184.852 189.795 184.806 189.799 184.743 cv
189.803 184.681 189.821 184.585 189.853 184.453 cv
189.885 184.322 189.938 184.171 190.012 184 cv
190.087 183.828 190.182 183.652 190.296 183.471 cv
190.411 183.29 190.55 183.119 190.713 182.956 cv
190.972 182.696 191.236 182.505 191.504 182.384 cv
191.772 182.262 192.034 182.201 192.289 182.199 cv
192.545 182.198 192.788 182.25 193.02 182.355 cv
193.252 182.46 193.464 182.608 193.654 182.798 cv
193.825 182.969 193.981 183.155 194.12 183.355 cv
194.26 183.556 194.379 183.804 194.479 184.099 cv
194.578 184.395 194.656 184.756 194.713 185.183 cv
194.769 185.609 194.802 186.133 194.81 186.755 cv
194.847 188.491 li
197.18 186.158 li
197.202 186.136 197.23 186.121 197.263 186.113 cv
197.296 186.104 197.333 186.105 197.373 186.115 cv
197.413 186.124 197.455 186.144 197.499 186.175 cv
197.543 186.205 197.59 186.245 197.64 186.295 cv
202.497 181.819 mo
202.519 181.841 202.534 181.866 202.542 181.894 cv
202.551 181.922 202.547 181.955 202.53 181.993 cv
202.513 182.032 202.485 182.078 202.445 182.132 cv
202.405 182.186 202.348 182.25 202.273 182.325 cv
202.176 182.421 202.094 182.496 202.024 182.549 cv
201.955 182.601 201.895 182.631 201.842 182.64 cv
201.79 182.648 201.74 182.648 201.693 182.64 cv
197.04 181.931 li
199.721 184.612 li
199.74 184.631 199.753 184.655 199.76 184.684 cv
199.767 184.713 199.762 184.746 199.744 184.784 cv
199.726 184.821 199.697 184.866 199.659 184.918 cv
199.62 184.971 199.566 185.032 199.497 185.101 cv
199.431 185.167 199.371 185.22 199.317 185.26 cv
199.263 185.3 199.217 185.329 199.18 185.347 cv
199.143 185.365 199.11 185.371 199.081 185.364 cv
199.052 185.357 199.028 185.344 199.008 185.324 cv
193.862 180.179 li
193.84 180.157 193.826 180.132 193.821 180.104 cv
193.815 180.076 193.822 180.044 193.84 180.007 cv
193.858 179.969 193.887 179.924 193.927 179.87 cv
193.967 179.816 194.02 179.756 194.086 179.69 cv
194.155 179.621 194.216 179.567 194.268 179.528 cv
194.321 179.489 194.366 179.461 194.403 179.443 cv
194.44 179.425 194.473 179.419 194.5 179.425 cv
194.528 179.43 194.553 179.444 194.575 179.466 cv
196.957 181.848 li
196.473 177.568 li
196.464 177.527 196.463 177.487 196.468 177.448 cv
196.474 177.41 196.488 177.37 196.51 177.328 cv
196.532 177.287 196.563 177.24 196.603 177.189 cv
196.643 177.138 196.699 177.077 196.771 177.005 cv
196.843 176.933 196.904 176.879 196.955 176.841 cv
197.006 176.804 197.051 176.778 197.088 176.763 cv
197.125 176.747 197.157 176.743 197.183 176.75 cv
197.209 176.757 197.232 176.77 197.252 176.789 cv
197.287 176.825 197.314 176.87 197.332 176.924 cv
197.35 176.978 197.366 177.062 197.38 177.175 cv
197.728 181.078 li
202.186 181.707 li
202.305 181.732 202.382 181.753 202.418 181.77 cv
202.454 181.786 202.48 181.803 202.497 181.819 cv
205.525 175.949 mo
205.694 176.117 205.828 176.294 205.927 176.479 cv
206.027 176.664 206.094 176.852 206.13 177.042 cv
206.166 177.233 206.172 177.426 206.149 177.62 cv
206.125 177.815 206.074 178.01 205.996 178.205 cv
205.917 178.399 205.814 178.589 205.687 178.774 cv
205.56 178.959 205.395 179.153 205.194 179.354 cv
203.793 180.755 li
203.73 180.818 203.648 180.857 203.549 180.871 cv
203.45 180.885 203.346 180.838 203.238 180.73 cv
198.457 175.949 li
198.349 175.841 198.302 175.737 198.316 175.638 cv
198.33 175.538 198.369 175.457 198.432 175.393 cv
199.65 174.175 li
199.971 173.855 200.263 173.623 200.529 173.479 cv
200.794 173.336 201.053 173.253 201.305 173.233 cv
201.558 173.212 201.803 173.251 202.041 173.351 cv
202.278 173.45 202.504 173.606 202.716 173.819 cv
202.843 173.946 202.95 174.083 203.035 174.229 cv
203.121 174.376 203.183 174.527 203.222 174.685 cv
203.26 174.842 203.273 175.005 203.261 175.172 cv
203.249 175.339 203.209 175.505 203.143 175.671 cv
203.317 175.552 203.504 175.466 203.704 175.412 cv
203.905 175.358 204.109 175.34 204.318 175.358 cv
204.526 175.376 204.734 175.433 204.941 175.53 cv
205.148 175.627 205.343 175.766 205.525 175.949 cv
202.053 174.623 mo
201.923 174.493 201.788 174.393 201.647 174.324 cv
201.507 174.255 201.361 174.223 201.211 174.227 cv
201.06 174.231 200.904 174.275 200.741 174.361 cv
200.578 174.446 200.395 174.59 200.191 174.794 cv
199.456 175.53 li
201.192 177.266 li
202.002 176.456 li
202.186 176.271 202.311 176.098 202.376 175.937 cv
202.44 175.776 202.469 175.617 202.462 175.461 cv
202.455 175.305 202.414 175.156 202.339 175.012 cv
202.265 174.869 202.169 174.739 202.053 174.623 cv
204.817 176.74 mo
204.657 176.58 204.49 176.464 204.318 176.394 cv
204.145 176.323 203.969 176.296 203.788 176.31 cv
203.607 176.326 203.422 176.385 203.231 176.49 cv
203.041 176.595 202.834 176.759 202.611 176.982 cv
201.759 177.834 li
203.648 179.723 li
204.682 178.689 li
204.845 178.527 204.967 178.365 205.05 178.205 cv
205.133 178.045 205.182 177.881 205.199 177.713 cv
205.215 177.545 205.193 177.378 205.132 177.212 cv
205.071 177.046 204.966 176.889 204.817 176.74 cv
f
grestore
gsave
207.592 190.377 mo
217.945 200.729 li
244.471 174.202 li
234.12 163.85 li
cp
clp
224.371 189.157 mo
224.423 189.209 224.464 189.258 224.491 189.302 cv
224.519 189.346 224.537 189.386 224.545 189.422 cv
224.553 189.458 224.553 189.49 224.545 189.517 cv
224.537 189.545 224.523 189.569 224.504 189.588 cv
221.703 192.389 li
221.683 192.408 221.661 192.421 221.634 192.428 cv
221.608 192.435 221.576 192.435 221.539 192.428 cv
221.502 192.421 221.461 192.404 221.417 192.376 cv
221.373 192.349 221.324 192.309 221.272 192.256 cv
221.222 192.206 221.183 192.159 221.156 192.115 cv
221.128 192.071 221.109 192.031 221.098 191.995 cv
221.087 191.959 221.084 191.926 221.09 191.896 cv
221.095 191.865 221.109 191.839 221.131 191.817 cv
222.25 190.698 li
218.173 186.621 li
217.754 188.274 li
217.729 188.355 217.704 188.413 217.678 188.451 cv
217.651 188.488 217.62 188.507 217.582 188.509 cv
217.545 188.51 217.502 188.493 217.454 188.459 cv
217.406 188.424 217.35 188.375 217.286 188.312 cv
217.239 188.265 217.201 188.223 217.172 188.185 cv
217.143 188.148 217.122 188.114 217.108 188.084 cv
217.094 188.054 217.087 188.022 217.085 187.991 cv
217.084 187.959 217.087 187.922 217.096 187.881 cv
217.539 185.855 li
217.542 185.836 217.549 185.815 217.56 185.793 cv
217.571 185.771 217.586 185.744 217.605 185.714 cv
217.624 185.684 217.65 185.651 217.682 185.617 cv
217.714 185.582 217.754 185.54 217.804 185.49 cv
217.87 185.424 217.928 185.372 217.978 185.333 cv
218.028 185.294 218.07 185.267 218.104 185.252 cv
218.139 185.237 218.168 185.233 218.191 185.24 cv
218.215 185.247 218.235 185.258 218.251 185.275 cv
222.962 189.986 li
223.932 189.016 li
223.954 188.994 223.981 188.98 224.013 188.973 cv
224.044 188.966 224.078 188.968 224.114 188.979 cv
224.15 188.99 224.189 189.01 224.232 189.039 cv
224.275 189.068 224.321 189.107 224.371 189.157 cv
231.531 182.345 mo
231.554 182.367 231.567 182.392 231.572 182.42 cv
231.578 182.448 231.571 182.481 231.552 182.519 cv
231.533 182.557 231.505 182.601 231.468 182.652 cv
231.431 182.703 231.377 182.764 231.306 182.836 cv
231.24 182.901 231.181 182.954 231.127 182.994 cv
231.073 183.034 231.028 183.063 230.991 183.08 cv
230.954 183.097 230.922 183.103 230.894 183.098 cv
230.866 183.093 230.841 183.079 230.819 183.057 cv
226.149 178.388 li
226.141 178.396 li
228.942 184.976 li
228.953 185.003 228.958 185.031 228.956 185.06 cv
228.955 185.089 228.945 185.123 228.925 185.162 cv
228.906 185.201 228.878 185.242 228.843 185.286 cv
228.807 185.33 228.761 185.38 228.706 185.435 cv
228.648 185.493 228.595 185.54 228.548 185.576 cv
228.501 185.612 228.459 185.639 228.422 185.657 cv
228.385 185.675 228.352 185.685 228.323 185.686 cv
228.294 185.687 228.268 185.683 228.246 185.672 cv
221.749 182.788 li
221.745 182.792 li
226.415 187.461 li
226.437 187.484 226.45 187.509 226.456 187.537 cv
226.461 187.564 226.454 187.597 226.435 187.636 cv
226.416 187.674 226.388 187.719 226.349 187.771 cv
226.31 187.824 226.256 187.886 226.184 187.957 cv
226.116 188.025 226.056 188.078 226.003 188.117 cv
225.951 188.156 225.906 188.184 225.87 188.201 cv
225.833 188.218 225.801 188.224 225.775 188.217 cv
225.748 188.211 225.724 188.196 225.702 188.174 cv
220.772 183.244 li
220.656 183.128 220.604 183.014 220.616 182.903 cv
220.627 182.791 220.671 182.698 220.747 182.622 cv
221.185 182.184 li
221.274 182.094 221.361 182.024 221.445 181.973 cv
221.529 181.923 221.614 181.89 221.701 181.876 cv
221.787 181.861 221.875 181.864 221.963 181.886 cv
222.052 181.908 222.147 181.943 222.247 181.992 cv
227.662 184.342 li
227.682 184.321 li
225.408 178.856 li
225.356 178.742 225.319 178.638 225.298 178.544 cv
225.276 178.449 225.27 178.363 225.279 178.285 cv
225.288 178.207 225.311 178.134 225.349 178.065 cv
225.387 177.997 225.442 177.927 225.512 177.857 cv
225.971 177.398 li
226.013 177.356 226.059 177.322 226.109 177.297 cv
226.159 177.272 226.211 177.259 226.264 177.258 cv
226.317 177.258 226.372 177.269 226.429 177.292 cv
226.486 177.316 226.543 177.356 226.601 177.414 cv
cp
235.062 175.956 mo
235.23 176.124 235.364 176.301 235.464 176.486 cv
235.563 176.671 235.631 176.859 235.667 177.049 cv
235.702 177.24 235.709 177.433 235.685 177.627 cv
235.662 177.822 235.611 178.017 235.532 178.212 cv
235.453 178.406 235.35 178.596 235.223 178.781 cv
235.096 178.966 234.932 179.16 234.73 179.361 cv
233.33 180.762 li
233.266 180.825 233.185 180.864 233.085 180.878 cv
232.986 180.892 232.882 180.845 232.775 180.737 cv
227.993 175.956 li
227.886 175.848 227.839 175.744 227.852 175.645 cv
227.866 175.545 227.905 175.464 227.968 175.4 cv
229.187 174.182 li
229.507 173.862 229.8 173.63 230.065 173.486 cv
230.33 173.343 230.589 173.26 230.842 173.24 cv
231.095 173.219 231.34 173.258 231.577 173.358 cv
231.815 173.457 232.04 173.613 232.253 173.826 cv
232.38 173.953 232.486 174.09 232.572 174.236 cv
232.657 174.383 232.719 174.534 232.758 174.692 cv
232.797 174.849 232.81 175.012 232.797 175.179 cv
232.785 175.346 232.746 175.512 232.679 175.678 cv
232.853 175.559 233.04 175.473 233.241 175.419 cv
233.441 175.365 233.645 175.347 233.854 175.365 cv
234.062 175.383 234.27 175.44 234.477 175.537 cv
234.685 175.634 234.879 175.773 235.062 175.956 cv
231.59 174.63 mo
231.46 174.5 231.325 174.4 231.184 174.331 cv
231.043 174.262 230.897 174.23 230.747 174.234 cv
230.597 174.238 230.44 174.282 230.277 174.368 cv
230.115 174.453 229.932 174.597 229.728 174.801 cv
228.992 175.537 li
230.728 177.273 li
231.538 176.463 li
231.723 176.278 231.847 176.105 231.912 175.944 cv
231.977 175.783 232.005 175.624 231.998 175.468 cv
231.991 175.312 231.95 175.163 231.876 175.019 cv
231.801 174.876 231.706 174.746 231.59 174.63 cv
234.353 176.747 mo
234.193 176.587 234.027 176.471 233.854 176.401 cv
233.682 176.33 233.505 176.303 233.324 176.318 cv
233.143 176.333 232.958 176.392 232.768 176.497 cv
232.577 176.602 232.371 176.766 232.147 176.989 cv
231.295 177.841 li
233.185 179.73 li
234.218 178.696 li
234.381 178.534 234.504 178.372 234.586 178.212 cv
234.669 178.052 234.719 177.888 234.735 177.72 cv
234.751 177.552 234.729 177.385 234.668 177.219 cv
234.607 177.053 234.502 176.896 234.353 176.747 cv
f
grestore
gsave
237.136 190.377 mo
247.487 200.729 li
274.015 174.202 li
263.663 163.85 li
cp
clp
253.877 189.145 mo
253.927 189.195 253.967 189.242 253.999 189.288 cv
254.031 189.334 254.054 189.376 254.068 189.414 cv
254.081 189.453 254.084 189.489 254.076 189.522 cv
254.068 189.555 254.051 189.584 254.026 189.609 cv
251.064 192.571 li
251.025 192.61 250.986 192.639 250.948 192.658 cv
250.909 192.678 250.868 192.687 250.826 192.685 cv
250.783 192.684 250.736 192.667 250.685 192.636 cv
250.634 192.604 250.578 192.558 250.517 192.497 cv
250.462 192.442 250.415 192.391 250.378 192.345 cv
250.341 192.3 250.314 192.254 250.296 192.208 cv
250.279 192.162 250.265 192.112 250.254 192.059 cv
250.244 192.006 250.238 191.944 250.236 191.874 cv
250.206 189.701 li
250.199 189.199 250.17 188.773 250.118 188.422 cv
250.065 188.07 249.997 187.771 249.912 187.525 cv
249.828 187.278 249.731 187.074 249.621 186.913 cv
249.511 186.752 249.397 186.612 249.278 186.493 cv
249.159 186.375 249.027 186.282 248.881 186.216 cv
248.734 186.149 248.583 186.114 248.428 186.109 cv
248.272 186.104 248.114 186.136 247.953 186.203 cv
247.792 186.27 247.637 186.377 247.489 186.526 cv
247.315 186.699 247.183 186.879 247.091 187.064 cv
247 187.249 246.93 187.422 246.881 187.581 cv
246.833 187.74 246.797 187.878 246.774 187.995 cv
246.751 188.112 246.722 188.187 246.688 188.221 cv
246.668 188.241 246.645 188.254 246.618 188.258 cv
246.591 188.263 246.561 188.258 246.526 188.243 cv
246.491 188.228 246.45 188.203 246.403 188.167 cv
246.356 188.131 246.303 188.084 246.245 188.026 cv
246.204 187.985 246.169 187.948 246.142 187.914 cv
246.114 187.881 246.093 187.85 246.077 187.821 cv
246.062 187.792 246.05 187.763 246.042 187.732 cv
246.034 187.702 246.032 187.656 246.036 187.593 cv
246.04 187.531 246.058 187.435 246.09 187.303 cv
246.122 187.172 246.175 187.021 246.249 186.85 cv
246.324 186.678 246.419 186.502 246.533 186.321 cv
246.648 186.14 246.787 185.969 246.95 185.806 cv
247.209 185.546 247.473 185.355 247.741 185.234 cv
248.009 185.112 248.271 185.051 248.526 185.049 cv
248.782 185.048 249.025 185.1 249.257 185.205 cv
249.489 185.31 249.701 185.458 249.891 185.648 cv
250.062 185.819 250.218 186.005 250.357 186.205 cv
250.497 186.406 250.616 186.654 250.716 186.949 cv
250.815 187.245 250.893 187.606 250.95 188.033 cv
251.006 188.459 251.039 188.983 251.047 189.605 cv
251.084 191.341 li
253.417 189.008 li
253.439 188.986 253.467 188.971 253.5 188.963 cv
253.533 188.954 253.57 188.955 253.61 188.965 cv
253.65 188.974 253.692 188.994 253.736 189.025 cv
253.78 189.055 253.827 189.095 253.877 189.145 cv
261.075 182.345 mo
261.097 182.367 261.11 182.392 261.116 182.42 cv
261.121 182.448 261.114 182.481 261.095 182.519 cv
261.076 182.557 261.048 182.602 261.011 182.653 cv
260.974 182.704 260.92 182.765 260.849 182.836 cv
260.783 182.901 260.724 182.954 260.67 182.994 cv
260.616 183.034 260.571 183.063 260.534 183.08 cv
260.497 183.098 260.465 183.104 260.437 183.099 cv
260.409 183.093 260.384 183.08 260.362 183.058 cv
255.693 178.388 li
255.684 178.397 li
258.485 184.976 li
258.496 185.004 258.501 185.032 258.5 185.061 cv
258.498 185.09 258.488 185.124 258.469 185.162 cv
258.449 185.201 258.422 185.242 258.386 185.287 cv
258.35 185.331 258.304 185.381 258.249 185.436 cv
258.191 185.494 258.139 185.541 258.092 185.577 cv
258.045 185.613 258.003 185.64 257.965 185.657 cv
257.928 185.675 257.895 185.685 257.866 185.687 cv
257.837 185.688 257.811 185.683 257.789 185.672 cv
251.293 182.788 li
251.288 182.792 li
255.958 187.462 li
255.98 187.484 255.994 187.509 255.999 187.537 cv
256.004 187.565 255.997 187.598 255.978 187.636 cv
255.96 187.674 255.931 187.719 255.892 187.772 cv
255.854 187.824 255.799 187.886 255.728 187.957 cv
255.659 188.025 255.599 188.079 255.547 188.118 cv
255.494 188.156 255.45 188.184 255.413 188.201 cv
255.376 188.219 255.345 188.224 255.318 188.218 cv
255.292 188.211 255.267 188.197 255.245 188.174 cv
250.315 183.244 li
250.199 183.128 250.147 183.014 250.159 182.903 cv
250.171 182.792 250.215 182.698 250.29 182.622 cv
250.728 182.185 li
250.818 182.095 250.904 182.025 250.988 181.974 cv
251.072 181.923 251.157 181.891 251.244 181.876 cv
251.33 181.861 251.418 181.865 251.507 181.886 cv
251.596 181.908 251.69 181.943 251.79 181.993 cv
257.205 184.342 li
257.226 184.321 li
254.951 178.856 li
254.899 178.743 254.862 178.639 254.841 178.544 cv
254.819 178.45 254.813 178.363 254.822 178.285 cv
254.831 178.207 254.855 178.134 254.893 178.066 cv
254.931 177.997 254.985 177.928 255.055 177.858 cv
255.514 177.399 li
255.556 177.357 255.602 177.323 255.652 177.297 cv
255.703 177.272 255.754 177.259 255.807 177.259 cv
255.86 177.258 255.915 177.27 255.972 177.293 cv
256.029 177.316 256.086 177.357 256.144 177.415 cv
cp
264.605 175.956 mo
264.773 176.125 264.907 176.301 265.007 176.486 cv
265.106 176.671 265.174 176.859 265.21 177.05 cv
265.246 177.24 265.252 177.433 265.228 177.628 cv
265.205 177.823 265.154 178.017 265.075 178.212 cv
264.996 178.407 264.894 178.597 264.766 178.782 cv
264.639 178.967 264.475 179.16 264.273 179.362 cv
262.873 180.762 li
262.81 180.826 262.728 180.864 262.629 180.878 cv
262.529 180.892 262.426 180.845 262.318 180.737 cv
257.537 175.956 li
257.429 175.848 257.382 175.745 257.396 175.645 cv
257.41 175.546 257.448 175.464 257.512 175.401 cv
258.73 174.183 li
259.05 173.862 259.343 173.63 259.608 173.487 cv
259.873 173.343 260.132 173.261 260.385 173.24 cv
260.638 173.219 260.883 173.259 261.12 173.358 cv
261.358 173.458 261.583 173.614 261.796 173.826 cv
261.923 173.953 262.029 174.09 262.115 174.237 cv
262.2 174.383 262.263 174.535 262.301 174.692 cv
262.34 174.85 262.353 175.012 262.341 175.179 cv
262.328 175.346 262.289 175.513 262.223 175.678 cv
262.397 175.56 262.584 175.473 262.784 175.419 cv
262.984 175.366 263.189 175.348 263.397 175.366 cv
263.606 175.384 263.814 175.441 264.021 175.538 cv
264.228 175.634 264.423 175.774 264.605 175.956 cv
261.133 174.63 mo
261.003 174.5 260.868 174.401 260.727 174.332 cv
260.586 174.263 260.441 174.23 260.29 174.234 cv
260.14 174.238 259.983 174.283 259.821 174.368 cv
259.658 174.453 259.475 174.598 259.271 174.802 cv
258.535 175.538 li
260.271 177.274 li
261.081 176.463 li
261.266 176.279 261.391 176.106 261.455 175.944 cv
261.52 175.783 261.549 175.625 261.542 175.469 cv
261.534 175.313 261.494 175.163 261.419 175.02 cv
261.344 174.876 261.249 174.746 261.133 174.63 cv
263.896 176.747 mo
263.736 176.587 263.57 176.472 263.397 176.401 cv
263.225 176.331 263.048 176.303 262.867 176.318 cv
262.687 176.333 262.501 176.393 262.311 176.497 cv
262.121 176.602 261.914 176.766 261.691 176.989 cv
260.839 177.841 li
262.728 179.73 li
263.762 178.697 li
263.924 178.534 264.047 178.373 264.13 178.213 cv
264.212 178.053 264.262 177.889 264.278 177.72 cv
264.295 177.552 264.272 177.385 264.211 177.22 cv
264.151 177.054 264.046 176.897 263.896 176.747 cv
f
grestore
gsave
266.679 190.377 mo
277.031 200.729 li
303.558 174.202 li
293.206 163.85 li
cp
clp
282.43 187.699 mo
282.52 187.79 282.578 187.876 282.603 187.956 cv
282.628 188.036 282.615 188.101 282.566 188.151 cv
281.961 188.756 li
283.089 189.882 li
283.111 189.905 283.123 189.929 283.128 189.955 cv
283.13 189.982 283.124 190.015 283.106 190.055 cv
283.089 190.094 283.06 190.139 283.02 190.19 cv
282.98 190.241 282.925 190.303 282.853 190.374 cv
282.785 190.442 282.727 190.496 282.675 190.536 cv
282.623 190.576 282.579 190.604 282.542 190.62 cv
282.503 190.636 282.471 190.641 282.447 190.636 cv
282.421 190.631 282.397 190.617 282.375 190.595 cv
281.248 189.468 li
279.055 191.662 li
279.022 191.694 278.99 191.718 278.96 191.731 cv
278.93 191.745 278.895 191.75 278.855 191.745 cv
278.815 191.741 278.771 191.722 278.723 191.687 cv
278.675 191.652 278.617 191.602 278.551 191.536 cv
278.498 191.483 278.453 191.435 278.414 191.391 cv
278.376 191.346 278.343 191.303 278.317 191.26 cv
278.29 191.218 278.268 191.173 278.25 191.128 cv
278.232 191.083 278.214 191.032 278.198 190.977 cv
276.852 185.81 li
276.844 185.774 276.845 185.734 276.855 185.69 cv
276.866 185.647 276.886 185.599 276.918 185.545 cv
276.949 185.492 276.993 185.433 277.051 185.366 cv
277.109 185.3 277.18 185.225 277.266 185.141 cv
277.357 185.048 277.442 184.97 277.518 184.908 cv
277.594 184.846 277.658 184.799 277.712 184.768 cv
277.766 184.737 277.813 184.719 277.852 184.714 cv
277.893 184.71 277.925 184.72 277.951 184.745 cv
281.372 188.167 li
281.977 187.562 li
282.024 187.515 282.087 187.502 282.164 187.521 cv
282.241 187.54 282.33 187.6 282.43 187.699 cv
277.718 185.938 mo
277.71 185.946 li
278.928 190.612 li
280.66 188.88 li
cp
290.617 182.345 mo
290.639 182.367 290.654 182.392 290.658 182.42 cv
290.663 182.448 290.656 182.481 290.638 182.519 cv
290.619 182.557 290.591 182.602 290.555 182.653 cv
290.516 182.704 290.462 182.765 290.391 182.836 cv
290.326 182.901 290.266 182.954 290.212 182.994 cv
290.158 183.034 290.113 183.063 290.076 183.08 cv
290.04 183.098 290.007 183.104 289.979 183.099 cv
289.951 183.093 289.926 183.08 289.904 183.058 cv
285.236 178.388 li
285.227 178.397 li
288.027 184.976 li
288.039 185.004 288.043 185.032 288.042 185.061 cv
288.042 185.09 288.03 185.124 288.011 185.162 cv
287.992 185.201 287.964 185.242 287.928 185.287 cv
287.892 185.331 287.848 185.381 287.792 185.436 cv
287.733 185.494 287.681 185.541 287.634 185.577 cv
287.587 185.613 287.546 185.64 287.507 185.657 cv
287.47 185.675 287.438 185.685 287.408 185.686 cv
287.379 185.688 287.353 185.683 287.331 185.672 cv
280.835 182.788 li
280.831 182.792 li
285.5 187.462 li
285.522 187.484 285.536 187.509 285.542 187.537 cv
285.546 187.565 285.539 187.598 285.521 187.636 cv
285.503 187.674 285.473 187.719 285.435 187.772 cv
285.396 187.824 285.341 187.886 285.27 187.957 cv
285.202 188.025 285.141 188.079 285.089 188.117 cv
285.037 188.156 284.992 188.184 284.955 188.201 cv
284.919 188.219 284.887 188.224 284.861 188.218 cv
284.835 188.211 284.81 188.197 284.787 188.174 cv
279.857 183.244 li
279.741 183.128 279.689 183.014 279.701 182.903 cv
279.714 182.791 279.757 182.698 279.833 182.622 cv
280.27 182.185 li
280.361 182.095 280.447 182.025 280.531 181.974 cv
280.615 181.923 280.701 181.89 280.786 181.876 cv
280.872 181.861 280.96 181.865 281.049 181.886 cv
281.138 181.908 281.232 181.943 281.332 181.993 cv
286.747 184.342 li
286.768 184.321 li
284.493 178.856 li
284.441 178.743 284.405 178.639 284.383 178.544 cv
284.362 178.45 284.355 178.363 284.365 178.285 cv
284.373 178.207 284.397 178.134 284.435 178.066 cv
284.473 177.997 284.527 177.928 284.598 177.858 cv
285.056 177.399 li
285.098 177.357 285.145 177.323 285.195 177.297 cv
285.245 177.272 285.297 177.259 285.35 177.259 cv
285.402 177.258 285.457 177.27 285.514 177.293 cv
285.572 177.316 285.629 177.357 285.688 177.415 cv
cp
294.147 175.956 mo
294.316 176.125 294.451 176.301 294.549 176.486 cv
294.648 176.671 294.716 176.859 294.753 177.05 cv
294.788 177.24 294.794 177.433 294.771 177.628 cv
294.747 177.823 294.697 178.017 294.617 178.212 cv
294.539 178.407 294.436 178.597 294.309 178.782 cv
294.182 178.967 294.017 179.16 293.816 179.362 cv
292.415 180.762 li
292.352 180.826 292.27 180.864 292.171 180.878 cv
292.072 180.892 291.968 180.845 291.861 180.737 cv
287.079 175.956 li
286.971 175.848 286.924 175.745 286.938 175.645 cv
286.952 175.546 286.99 175.464 287.055 175.401 cv
288.272 174.183 li
288.592 173.862 288.885 173.63 289.15 173.487 cv
289.417 173.343 289.675 173.261 289.927 173.24 cv
290.18 173.219 290.425 173.259 290.663 173.358 cv
290.9 173.458 291.125 173.614 291.339 173.826 cv
291.465 173.953 291.572 174.09 291.658 174.237 cv
291.743 174.383 291.805 174.535 291.844 174.692 cv
291.882 174.85 291.895 175.012 291.883 175.179 cv
291.87 175.346 291.831 175.513 291.766 175.678 cv
291.939 175.56 292.126 175.473 292.326 175.419 cv
292.526 175.366 292.731 175.348 292.939 175.366 cv
293.148 175.384 293.356 175.441 293.563 175.538 cv
293.77 175.634 293.965 175.774 294.147 175.956 cv
290.675 174.63 mo
290.546 174.5 290.41 174.401 290.27 174.332 cv
290.128 174.263 289.983 174.23 289.833 174.234 cv
289.682 174.238 289.526 174.283 289.363 174.368 cv
289.201 174.453 289.017 174.598 288.813 174.802 cv
288.077 175.538 li
289.813 177.274 li
290.624 176.463 li
290.809 176.279 290.934 176.106 290.997 175.944 cv
291.063 175.783 291.091 175.625 291.085 175.469 cv
291.077 175.313 291.036 175.163 290.961 175.019 cv
290.886 174.876 290.792 174.746 290.675 174.63 cv
293.439 176.747 mo
293.279 176.587 293.112 176.472 292.94 176.401 cv
292.767 176.331 292.59 176.303 292.41 176.318 cv
292.229 176.333 292.043 176.393 291.853 176.497 cv
291.663 176.602 291.456 176.766 291.233 176.989 cv
290.382 177.841 li
292.27 179.73 li
293.305 178.697 li
293.467 178.534 293.589 178.373 293.672 178.213 cv
293.755 178.053 293.805 177.889 293.82 177.72 cv
293.837 177.552 293.815 177.385 293.754 177.22 cv
293.693 177.054 293.589 176.897 293.439 176.747 cv
f
grestore
%ADOBeginSubsetFont: HIBBAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc13ba13000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c7966a9549f150000a4300000020268656164e606fe47000010480000
0036686865610d8d122a0000108000000024686d7478cec5ef7f000010a4
00003c4a6c6f6361001c67aa00004cf000003c8c6d6178701c1103500000
897c000000206e616d655ae6a08f0000899c000004f870726570c7f0742e
00008e940000159c676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e10002ff4000acff00000009000000004d53202000200000
feff0600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
000000059eb85822b4525f0f3cf50019080000000000bbeb7ccc00000000
c5229872fbdafd8d09ec07c5000100090002000100000000000100000600
fe0001c40aa0fbdafa8609ec000100000000000000000000000000000f03
040e0000000000000000000001cf000004d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001704d9001704d9001704d90017
0634ffd30634ffd3047c008d043c004f043c004f043c004f043c004f043c
004f043c004f050b008d050b008d051d000f051d000f03e7008d03e7003f
03e7008d03e7003f03e7003c03e7004d03e7005503e7007503e7008d03e7
008d03ac008d0519004905190049051900490519004905190049050c008d
050c008d054300100222008d0222ff5a022200260222ff440222ff480222
ff4e0222ff5b0222ff80022200220222001e04c9008d02a6000302a6ffaf
0460008d0460008d0362008d036200720371008d0362008d03760015047e
008d06fe008d0545008d0545008d0545008d0545008d0545008d0521008d
056900500569005005690050056900500569005005690050056900500569
005005690050057200500572005006fe00500442008d0442008d057d0050
0481008d0481008d0481006a0481008d03c8003f03c8003f03c8001f03c8
002303c8003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c
0539008c0539008c0539008c0539008c0539008c0539008c0539008c0539
008c0539008c0539008c04bb00160740002b0740002b0740002b0740002b
0740002b04680021042800100428001004280010042800100428001003d3
003303d3003303d3001e03d300330447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a058f
ffe2058fffe20438008603cb005a03cb005a03cb005a03cb005a03cb005a
03cb005a049100860491008104a6002604a60026038f0086038f0024038f
0086038f0020038f0020038f001d038f0030038f003f038f0086038f0086
03580086049c0058049c0058049c0058049c0058049c0058049c0086049c
008604c10034021000860210ff600210001f0210ff540210ff410210ff53
0210ff650210ff7b0210001802100016046f0086026900000269ffa10405
00860405008602fc008602fc0085030d008602fc0086030c002c04150086
0648008604c7008604c7008604c7008604c7008604c700860497008604da
005504da005504da005504da005504da005504da005504da005504da0055
04da005504e4005504e40055062e005503fd008603fd008604de00550425
0086042500860425005a04250086036f0043036f0043036f0001036f0006
036f0043036f0043037b001b037b0008037b001b037b001b04ac008404ac
008404ac008404ac008404ac008404ac008404ac008404ac008404ac0084
04ac008404ac00840435001b068a002b068a002b068a002b068a002b068a
002b0404002603cd000b03cd000b03cd000b03cd000b03cd000b038f003e
038f003e038f0016038f003e03f3004703f3004703f3004703f3004703f3
003703f3004703f3004703f3004703f3004703f3004703f3004706330047
06330047044b007e03590048035900480359003b03590048035900480359
0048077d004807080048060e0048060e0048044b004b04c6004b048d004b
044b004c0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0288001906c200190909001904ce0019
06c2001909090019046f0019046f0019046f0019046f0019048100190481
00190481001904810019046f0019046f001906b6001906b6001906b60019
06b6001906c8001906c8001906c8001906c8001906b6001906b60019046f
0019046f001906b60019064d001908950019046f0019046f001904ea0019
046f001906b60019051600190516001905450019075e001903cb001b03cb
001b03cb001b03cb001b03cb001b044b004b044b004b044b004b044b004b
044b004b044b007e044bff9f0461fff901f7006b01f7ff7801f7001a01f7
ff6301f7ff3701f7ff7601f7ff6d01f7ff7301f7000801f7007e0403006b
043a006e020bffdb020bffdb020bff6d03d7007e03d7007e03d7007e01f7
007e01f700320273007e01f7003f021c00140361007e0682007e044b007e
044b007e044b007e044b0063044b007e04faff96044b007e044d0048044d
0048044d0048044d0048044d0048044d0048044d0048044d0048044d0048
045a0048045a004806be0048044b007e044b007e044b004b02d8007e02d8
007e02d8fff202d8005703310049033100490331ffff0331000003310049
0331004905d4004905d400490470007f0211007e02c6001702e8001702c6
001702d6001b0510001704af001704af001704af001704af001704af0017
04af001704af001704af001704af001704af001705400017078a00170728
001707280017072800170728001707280017072800170728001707280017
0728001707280017044b0079044b0079044b0079044b0079044b005e044b
0079044b0079044b0079044b0079044b0079044b007903c9001605f60023
05f6002305f6002305f6002305f6002303ad002003ca001603ca001603ca
001603ca001603ca0016032e0045032e0045032e0003032e004503540066
037b005503a5005002bf003602f5005a0244003802f5003a02c7003a01d0
001c029c001802fb005a017a004f0184ffd902c0005a0176005a046c005a
02f9005a02f5003902f5005a02f5003a0200005a023a003c01fa001c02fb
005a02a50019041b002002a9002002a60017023a00340267000002840000
02a000000000fcfe0000fce3026800000284000002a000000000fcfe0000
fce20336000003690000039b00000000fc980000fc640336000003690000
039b00000000fc960000fc6501fc0000038e000003920000039600000000
fc6b0000fc6803510000030f0000036d0000038800000000fc890000fc6d
031f000003470000036e00000000fca10000fc7a03140000031c00000324
00000000fca80000fc9f029f000002a3000002a800000000fce20000fcde
02cf000002c2000002b5000003e3000004150000044500000000fc400000
fc0f01e2000001f7000001e2000001e200000000fd430000fd43026d0066
0000fd60028600660000fd5502020067022c000004d9001704d9ff72047c
008d0347008d049f002b03e7008d03e7fe9d03d30033050c008d050cfe7a
056900500222008d0222fe930222ff4f0460008d04c0001a06fe008d0545
008d03f0004d056900500569ff0f050c008d0442008d03c2004a03f6000c
042800100428fe4d04280010066900000468002106760077057200490572
fef30447000a0447000a0438008603120086040e0021038f0086038f0086
038f003e049c0086049c008604f6005502100086021000100210ff520405
0086041e00110648008604c700860393005704da005504da0055049c0086
03fd0086037a004e037b001b03cd000b03cd000b03cd000b05bb00000404
002605d8006e04e1005504e1005504ba004c04ba004c045d007e04520052
03bd000c0443000003a9004703a9004702ea0040045a007e045a007e045c
0050048f0004024a0079024a0000024aff7d024aff1d03d7007e03e40000
0482007e03c500160315003e031e0044044d0048044d004804a20020043e
0064045b0046034100490324000204630074046300740463007304630028
0598004205980044039b000905e7007605be004f05be004f028900000000
fd0403f400000000fc360224007d0224007d0224007d0235003602100054
0210005404d900170472008e047c008d0375008d0375008d0379008d0562
000a03e7008d03e7003f03e7004c06a9003a03db003e0537008d0537008d
0537008d0222008d0222ff4e02a600030481008d0481008d0508000a072a
000a06fe008d050c008d072c008d0569005005690050050a008d0442008d
043c004f03c8003f03f6000c046100080461000804e5001605ca00000468
00210543008d0507008d048e004d072d008d076a008d051d000c0663008d
046d008d044f0048044f004f074f008d049800400516000c050f000c051a
00000447000a041c0088043800860321008603210086033a008604b6000b
038f0086038f0024038f001e05d800310396004a04b0008604b0008604b0
0086021000860210ff5302690000040c0086040c00860461000306480086
049c008604da005504d700550497008603fd008603cb005a036f0043037b
001b03d6001703d60017045a001a054300000404002604ba008604900086
04320051066f008606960086049c001805d700860419008603e6005d03ee
0055068800860432004a048a001d0490001d0481000006430003066c0086
03f30047044200000443000003f5007e02d6007e02d6007e02f0007e01f7
ff6d04a80019044b004b0407004a0407004a0407004a05e50030036a003a
0474007e047400700474007e01f7006b01f7ff76020bffdb03f5007e03f5
007e043500140636001205b5004c045d007e065a007e044d004804490048
0446007e044b0079044b007e0359004803310049031e00090682007e03ca
001603ca001603f900160567004203ad0020047f007e044c007e03e80030
061b007e0650007e0477000905b2007e03f5007e037f003f0380004a0606
007e03fc002b046dfff90461fff90441001103a2000003a2000003a20000
0000fc950000fc95029b00e6029b009b029b009b03b5007303b5005303b5
0053040a0058026900cf02690091035e006d035500450210001702350036
023500a00223007d05b1007c0210006b021000170210006b02100017037b
0064037b001b037b0064037b001b02100017037b001b02c1005802c100a9
02c1005802c100a9044f0059044f0097044f0059044f009703700002033f
002003cd017003fc01870370001c033f003d0273003b0273003b03fcfff5
03fcfff5073e0083073e0083073e0083073e008303fcfff903fc00940224
007d0224007d027e006b027e00610299009d0299005702c0003602c00069
0259006d025900630277009202770065027e006b027e00610299009d0299
005702c0003602c0006903fc008603fc006003fc006103fc005604c80052
045d005703fc001e03fc003901de00790382007905a30000057600000841
000007300000074400000730000006ad009e06ad009e040e006905c30032
05d9004f02bd000003fc002104b6003c040e002003fc0049040e00520458
004c03fc00a903fc0044040e004c03fc0063044d0015040e001d03df002d
039f005503f8004f039f0054039f000506350039085e008d03fc001c073f
00860437001a04a8004e02de001903f2004f03f000430460001e03e9004f
0442006603be002f0440004d04420047040e0039040e0094040e0058040e
0055040e001a040e0060040e0054040e0051040e003d040e004204740058
02ad001c03a000510385004d03d30024038a005f03ce0058035f002503d4
003a03dc0046039f0037039f0079039f0050039f0053039f002d039f0062
039f0045039f0047039f0038039f003804a8004e02de001903f2004f03f0
00430444001e03e9004f0442006603be002f0440004d04420047040e0039
040e0094040e0058040e0055040e0024040e0060040e0054040e0051040e
003d040e0042032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c70047032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c7004702b5002f02050025027000300274002302750010026a0031
027a002a0261001d028b001e026e001b02b5002f02050025027000300274
002302750010026a0031027a002a0261001d028b001e026e001b02d8ff2e
032c003805870038059400380543003805940038055a00380592003805fa
004205fa0042059d003b05eb003b05e8003b0607002305b1004405e80044
0570002c05d50039087e0039057c004607ed004603fc003403fc003703fc
005403fc002203fc005303fc005403fc005103fc004403fc006603fc0045
03fc005503fc005603fc002f05e9002c0439002206b40059044c004c0301
000e03fcfffe049f002b057200490482007e064200530467005304450036
073e0092073e0087073e00b6073e00b606b7007606b7010806b7007606b7
01080a7b00920626007d0466002801da000001da00000466000004660000
0466ffdb0466ffde04660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601a8
04d9001704d9001704d9001704d9000504d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001703e7008d03e7008d03e70047
03e7ffe803e7ffbd03e7ffdd03e7ffdd03e700460222002c022200880569
0050056900500569005005690050056900500569005005690050061e0050
05940050059400500594005005940050059400500539008c0539008c0617
008c0617008c0617008c0617008c0617008c0617008c0428001004280010
0428001003f3004703f3004703f3ffca03f3ff9a03f3ffca03f3ffc503f3
004703f3ffc503f3ffc903f3ffc803f3ffc503f300470407004a0407004a
040700300407ffdb0407ffb60407ffd90407ffd90407004a01f7001c01f7
006b044d0048044d0048044dfff2044dffd2044dffef044dfff2044d0048
051000480510004805100048051000480510004805100048044b0079044b
0079052e0079052e0079052e0079052e0079052e005e052e007903ca0016
03ca001603ca0016048d004b046600380447000a0447000a0447ffe80447
ffc30447ffe80447ffe80447000a0447fff10447fff20447fff20447ffef
0447000a038f0086038f0086038f0000038fffa8038fff83038fffa8038f
ffa8038f00410210001c0210007f04da005504da005504da003e04da0019
04da003e04da003804da0055058b0055058b0055058b0055058b0055058b
0055058b005504ac008404ac0084058a0084058a0084058a0084058a0084
058a0084058a008403cd000b03cd000b03cd000b01da0000046600000466
ffdb04660000046600000466000004660000046600000466000004c10066
0540008d0545008d0536008d04b5008604c3008604b5008603f6000c02c6
0017037b001b01f70008046f0019046f0019046f001906b6001906b60019
06b6001903130018030a007803160054036b007802b7007802920078037c
00550367007801b000780205002802f4007802670078049a007803920078
03a1005502f4007803a10055030d00780288003a02b0001e0378006e0313
001804a1002802c9001802ac0011025d001b0000fdfc0000fdfc0466010c
0466010c0466007e0466007e03c1000003c10000030c0000030c0000030c
0000030c0000022c0000022c000001ff000001ff000001ff000001ff0000
0000fcff0000fcff02aa006902aa006902aa009802aa009801ce000002aa
008202aa008202aa008202aa0082027f0050027f006a0324ffeb02910084
0466010c02aa001402aa0013033600000336000003140000030c0000038e
0000031f000003fcfff903fcfff9038e0000038e00000000fedd0000fe4a
0000fdfa0000fdfa0000fe290000fe290000fdae0000fdae01ce000002aa
00140291008302aa001502aa000002aa0000039a0000039a00000000fdfd
0000fdfd0000fd090000fd090000fd090000fd0902aa000002aa000003fc
fff90466007e02aa0098038e0000038e0000038e0000038e0000038e0000
038e000004010014040101470000000002aa000002aa000001ce000001ce
0000030c0000030c000002aa000002aa00c802aa00c803f100c801ce0000
01ce000001e2000001e2000002aa00a003b1008402aa000002aa0000075c
003c075c0000075c0000075c0000075c0000075c003f06d2000006d20000
075c0000075c0000075c004001df002001df002001e7002401e7002400f8
002f00f8002f02070022020700220209003702090037019d0028019d0028
020700230207002302090039020900390309003803090038015f003d015f
003d015200100152001001c3000601c3000601bf000801bf000803270025
0327002503270025032700250000ff9203bd0000041a0000041a00000416
ffe40416ffe4041a000b041a000b041a000b041a000b0401ffff0401ffff
0401ffff0401ffff015f003d02aa000001ce000003f100c8055800190472
008e049300140433003104db004f051d000f05e700190472003b03e7005b
0543005003f1005503acffd60573004904ba00110266008d026800110464
008d071c008c0545ffd605690050066a004f051e00190481008d03cf003f
03c2004a045c001903f6000c057200490539008c0465001003d3003303eb
003e03f10046040e004e08de008d0839008d0629008d056d008d07eb008d
0750008d04d900170222ff43056900500539008c0539008c0539008c0539
008c0539008c04d9001704d900170634ffd3052900490519004904600073
056900500569005003eb000008c5008d0839008d051900490714008d04e6
008d0545008d04d9ffed04d9001703e7ffcd03e700550222feac0222ff5c
0569003b056900500481ffbf04810078053900390539008c03eb003e050c
008d0523008d0439004603ec003304d9001703e7008d0569005005690050
05690050056900500428001004d9ffde0446ffda03850011040affab0382
003b0496000b055e000f04c0001a03e8ff9102c30003050f004f049d000f
04b4000704d90017047c008d047c008d047c008d043c004f050b008d050b
008d050b008d050b008d050b008d03e7007a03e7007a03e7008203e7003e
03e7008003ac008d05190049050c008d050c008d050c008d050c0015050c
008d0222ff460222ff7e0460008d0460008d0460008d0362008d03620035
036200600362006606fe008d06fe008d06fe008d0545008d0545008d0545
008d0545008d056900500569005005690050056900500442008d0442008d
0481008d0481008d0481008d0481008d03c8003f03c8003f03c8003f03c8
003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c0539008c
0539008c0539008c0539008c04bb001604bb00160740002b0740002b0468
0021046800210428001003d3003303d3003303d300330390002403e40012
046300110481008d0562008d04cc008d03f50033043c003003ac004903e9
008d04920029044b007e045ffffb03b60048044b004b0443004a0288fff8
066e007e044b007e03d7007e0281001b03e40005044b007e05870048044b
007e033a004602ed001702c60017041c0014032e004503d5003e03740026
0362003d0779004b0402007e0656007e03f3004701f7ff61044d0048044b
0079044b0079044b0079044b0079044b00790407005103f3004703f30047
063300470474ffde03cb001b03d70042044d0048044d004803a9001c020b
ff6b0779004b03cb001b044b007e03f3ffc003f300470407ffe30407004a
01f7fecf01f7ff73044dffee044d004802d8ff7402d80011044b0000044b
007903a9002a044b005104db004b041f0048033a004503f300470407004a
044d0048044d0048044d0048044d004803ca001602a4007804fc007e02cf
0017069d004b069f004b0362ffe103310049032e0045037a003b03fb0030
0260000502600005044b004b0308001003f2000c03910035040e00580325
003c021d009903d9009904b30098029b00e603f30047044b007e044b007e
044b007e03590048044b004b044b004b044b004b044b004b044b004b0407
004a0407004a0407004a040700480407004a0288001903cb001b044b007e
044b007e044b0067044bffff044b007e01f7ff3501f7ff3501f7ff6903d7
007e03d7007e03d7006b01f7007201f7ff6d01f7ff6d01f7ff620682007e
0682007e0682007e044b007e044b007e044b007e044b007e044d0048044d
0048044d0048044d0048044b007e044b007e02d8007e02d8007302d8000d
02d8fffa033100490331004903310049033100030331004902c6001702c6
001702c6ffde02c6ffde044b0079044b004d044b0079044b005a044b0079
03c9001603c9001605f6002305f6002303ad002003ad002003ca0016032e
0001032e0045032e0008044b007e02c6ffa805f6002303ca001603f30047
021100490290002403f3001a02f9ff970488007e042d007e033d004503f4
00170363003802ee0027034e007e0599004204f60005041c0088042b000a
03cb00400429005a049f0019054f0005041c0041038f006204d200550396
00540358ffd304bb0058042b00140278008602fcffed0405008606900082
04c7ffd304da00550622005504bb000504250086036f0045037a004e03d9
0005037b001b04e1005504ac008403f9000b038f003e038a004b038a0055
0385004108030086088f008d05b300860617008d06cf00860768008d0447
000a0210ff4704aa005504ac008404ac008404ac008404ac008404ac0084
0447000a0447000a055cffe2049c0058049c00580405004804da005504da
0055038a000008030086088f008d049c005806b3008604a0008604c70086
0447ffc50447000a038fff9d038f004d0210feb20210ff7004da000904da
00550425ff9a0425006904acfff704ac0084038a004b049c008604c30086
04060056038f003e0447000a038f008604da005504da005504da005504da
005503cd000b0447000a03cb005402fc0000037b001b033300320438001e
04ac00000435001b038f00180269000004ad00550425000003cdfff3039f
00500333001e023000a0040600a004a90064026900cf0447000a04380086
043800860438007803cb005a049100860491008604910086049100860491
0086038f0029038f002e038f0050038f001e038f004603580086049c0058
049c0086049c0086049c0086049c0009049c00860210ff3e0210ff550405
0086040500860405008602fc008602fc000002fc002802fc001e06480086
064800860648008604c7008604c7008604c7008604c7008604da005504da
005504da005504da005503fd008603fd008604250086042500860425005c
04250086036f0043036f0043036f002c036ffff7036f0043037b001b037b
001b037b001b037b001b04ac008404ac008404ac008404ac008404ac0084
0435001b0435001b068a002b068a002b040400260404002603cd000b038f
000f038f003e038f0038049c0086037b000a068a002b03cd000b0447000a
02fc00000355ff9c03fd000004250086052f0086044700860390003e03cb
00400358004e040a0086047f0019047f001904c40019047f0019046f0019
046f0019047f0019049600190496001906b5001906b5001906d6001906b5
001906b6001906b6001906b5001906d2001904ce001904ad001704af0017
04af001704af001704af001704af001704af001704af001704af00170727
001707280017072800170728001707280017072800170728001707280017
0728001703f3007d044b004b044c007f044b007e0363003803880048044b
004b0461004b040700510407005105240054036a0042036a003a044f003a
043700480255000c045e004b044a004b044a004803d4001203e0000c044b
0079044b007d044b007e026b0010026b0010024a007901f7007e03270013
033800130204007904ab007e06820079068200790682007e044bffc7044b
007e0468007e0449004805c1004805a700440598004202d8001d02d8001d
02d9001d02d8007e02d8007e02a0007902a0001603ea007e03ea007e0331
004901eeffc20246ffee01eeffc2029fffae02c6003802c6002604b10010
04ad00520441007403c9001605f6002303ca001603b4000e0338004503d5
004503a9002a03ae002a0382003b038200480382003b03590048052d0050
03f5007e0437004204540048045d007e02a4ffaf03d7001c033c007e0460
004b0382003b0382004806b4004b06fd004b075b004b0522001704060017
059f00170662001904f4007a04be007e0433002c03ef0057045dffd3045e
ffd30427000a0577ffda063300510425000a03bb005a0462008604620012
03600086036a003a01f7006a026d001c03e2008602fa002005b5004c0474
007e04a8005703bb0044048a004e0489004e0528000806be005203b90044
044d0048044d004803db008603f6003403f600860355001b04860082046f
004e05e300440497006204090019063b0026036e003e035c003a03310041
03f40012030c008603eb000a0475008603db008605a40072044a00180313
00180417000a030a00780327001e036b007802b7007802b70046037c0055
0367007801b000780205002802f4007802670078049a007803920078038d
007803a1005502f9004c02f40078030d007802b0001e0378006e04a10028
02bf003602ac004702f5003a042c003602f5005a02f5003a02c7003a02b8
002e027b003802770038029c0018017a004f02c0005a046c005a02f9005a
02f500390244002a02e6003902e6003902f5005a01fa001c02fb005a02db
0044046c005a02a5001902a7001c02f2005a027e001002dc003703d1004d
02c2002f017a004f0200005a02fb005a02a5001902f2005a027e001002ed
005203d1004d02c2002f069b007904df000e04da004b032d000e07730014
0552001404bc000703660014033d001403ec0014032d00140370001403cb
001b032d006403e2003606af0017026c0013029d00130474000104e20012
04d40012044b007e04ae004b02a8001905b5004b046b007e0247007306d7
007e04a0007e044b007e02d8007303ad0049036cffc203d30016042e0020
0352004504b8004704d2004b046a004b0411004a03880042036a003a0411
00510276006b0363003801eeffc204c80079038b004002e5004e02440038
026e003802e000390277003401d0001c01c1fffb029c001802fb005a01f7
001401b20052017a005c01f80014022d000001bc005c01b3005c0248005c
046c005a046c005a032c0000032c005a0322006402f5003903b70039023a
003c020a000c0213001c035700160330004102eb005202e4005202c10017
023a0034029e003402ca003402a200300316004002fb005a02fb005a0184
ffd90200005a01f60022020c002202b4005a041b002002a6001701c40035
034300280210006b021000170210006a01ce000001ce00000299004b0299
005e03fc004403fc0066044b0032044b0032025100000268000002670000
02510000032700000267000002680000023900980239009801ce000001ce
000002aa008202aa008202aa008202aa008202aa001e02aa009302aa0016
0176005a023a003c02a900200299005e0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203360000049a0084037b001b02aa008502aa008502aa00c802aa
00c8029f00660267000003c1004703e30000038e0000023500a002aa0000
02aa000002aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402bf003602b8003a02f50039
02a9002002c7003d01d9000001d9000001d9000001d90000028900000289
00000289000002890000038e0000038e0000032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
ffff0324ffff03f4000003f4000003f4000003f400000324000003240000
031f00000314000001ff000001d90000031f0000031f0000031f0000031f
00000314000003140000031400000314000003f4000003f4000003f40000
03f40000027f006a027f006a05690050043c004f0456003a043c004f0456
003a042f0008042ffe46042f000803ac008d05690050046b000c05be008d
04cc000c0433004f0442008d044a0054039400480394003c04b8001204d7
002606c50019043a0060043efff00359004803630038035900480363002e
05a1004603920079044d004803c7000c04ee007e04d0000e03470049020b
ffdb045fffab04e4002604d7005503cb005a03cb004003cb005a03cb003d
040a001e040afe33040a001e0358008604c4005004540032055400860474
00370407005503fd008604d9ff9404d9fe4e04d9fe2604d9feed04d9ff9e
04d9fe5904d9fe3004d9feec04d9ff5004d9ff2604d9001704d9001704d9
001704d9ff9404d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe30
04d9feec06a4001706a4ff9406a4fe5806a4fe3006a4feed06a4ff9406a4
fe5906a4fe3006a4feec03e7feba04eafe7404eafe6c03e7feba04eafe74
04eafe6b03e7fe6703e7fe5d050cfeba060ffe74060ffe6d05c7fece050c
feba060ffe74060ffe6d05c7fecc050cfe68050cfe5c050c008d050cfeba
060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c05c7fecc06c2
008d06c2feba07c5fe7407c5fe6c077dfecd06c2feba07c5fe7407c5fe6c
077dfecc0222feba0325fe740325fe6d02ddfecd0222feba0325fe740325
fe6d0222fecc0222fe670222fe5d0222ff5b0222ff800569fede0636fe74
0636fe420569fede0636fe730636fe440569fe9b0569fe5e0442feba0428
fe620591fe740591fe9c0591ff230428fe000428fe1c0428001004280010
0572ff05063efe91063efe5a05f3fed50572fefc063efe91063efe5b05fa
fed40572feb10572fe7a057200490572ff05063efe7c063efe5005fafecf
0572fef1063efe7f063efe5005fafece074400490744ff050810fe7c0810
fe5007ccfecf0744fef10810fe7f0810fe5007ccfece04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c03a9004703a9004703a9004503a9004703a9004703a9004703a90047
03a90047045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a007e045a007e045a007e045a005d045a007e045a007e045a007e
045a007e045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a005d024a000b024aff86024aff83024aff6c024a000a024aff86
024aff86024aff69024aff14024aff14024aff60024affef024aff7b024a
ff32024aff69024aff68044d0048044d0048044d0048044d0048044d0048
044d0048044d0048044d0048043e0064043e006404630074046300740463
007404630074046300740463007404630074046300740463000804630009
04630074046300740463007404630053046300710463007405be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f05be004f
05be004f05be004f05be004f05be004f05be004f05be004f05be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a0447
000a0447000a0447000a0447000a0447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a060c000a0616
000a0616000a0616000a0616000a0616000a0616000a0616000a0616000a
038f0086038f0059038f0041038f0086038f0059038f0041038f0086038f
006f049c0086049c0086049c0086049c0086049c0086049c0086049c0086
049c0086049c0086049c0086049c0086049c0086049c0086049c0086049c
0086049c0086049c0086049c0086049c0086049c0086064a008606590086
065900860659008606590086065900860659008606590086065900860210
00250210ff8b0210ff720210ff7b0210001a0210ff8b0210ff720210ff70
0210ff0e0210ff0f0210ff77021000090210ffa00210ff420210ff660210
ff7b04da005504da005504da005504da005504da005504da005504da0055
04da005503fd008603fd008603cd000b040a001e03cd000b040a001e03cd
000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a001e
03cd000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a
001e03cd000b040a001e03cd000b040a001e03cd000b040a001e04e10055
04e1005504e1005504e1005504e1005504e1005504e1005504e1005504e1
005504e1005504e1005504e1005504e1005504e1005504e1005504e10055
04e1005504e1005504e1005504e100550696005506a0005506a0005506a0
005506a0005506a0005506a0005506a0005506a0005504d9001704d9ff94
04d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe3004d9feec050c
008d050cfeba060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c
05c7fecc057200490572ff05063efe7c063efe500572fe470572fef1063e
fe7f063efe500572fe4606a4001706a4ff9406a4fe5806a4fe3006a4feed
06a4ff9406a4fe5906a4fe3006a4feec06c2008d06c2feba07c5fe7407c5
fe6c077dfecd06c2feba07c5fe7407c5fe6c077dfecc074400490744ff05
0810fe7c0810fe5007ccfecf0744fef10810fe7f0810fe5007ccfece01d9
000001d900000289000002890000039a0000032900000329000003240000
03290000032900000324ffff03f4000003f400000324000001d90000031f
0000031400000232009d01ef009d01ef009d01ef009d0588008d048b000f
0442008d03870010046f008d071a003a03db003e04f4008d04b3008d049c
0010052b000c0562008d05d2008d0758008d05470050043c004f03f6000c
042800100428001004d700210605000c04cb004d048e004d048e008d063d
001e063d001e0222008d06a9003a04ac008d0558000a050c008d055d008d
048e004d074f008d04d9001704d900170634ffd303e70045054300500543
005006a9003a03db000b03eb003e0537008d0537008d0569005005690050
05690050044f0026046100080461000804610008048e004d036a008d0663
008d0387001004c7002004680021046d00280689003c0600002904360029
0710000a0714008d052600490513000c03f100550544000a04b6007e0407
000c044b007e0306001003a7007e063e0030036a003a044b007e043b007e
04170010048d000c0494007e04f5007e05f4007e0483004803590048031d
000903cf001003cf00100402002004e60009043e004e0406004e0406007e
050500160505001605e500300410007e04770014045c007e049e007e0406
004e05e1000f0222008d03f3000d03f30047063300470407003504070051
0407005105e50030036afffd03a9002a0474007e0474007e044d0048044d
0048044d0048037ffffb03ca001603ca001603ca001603e8002602d6007e
05b2007e0306001003fe002003ad0020044b004b063b004b0573002a03ca
002a063000140657007e045d004804850009036a0042046e001404f90086
0419000003fd00860321ffff04420086062200310396004a04380086043e
0086040c000004a9001b04d0008605390086068e008604d1005503cb005a
037b001b03cd000b03cd000b045a0026054f00190465005104320051045c
008605e1002005e100200210008605d800310440008604aa0003049c0086
04e6008604320051069300860447000a0447000a058fffe2038f004e04c7
005004c7005005d8003103960003038a004b04b0008604b0008604da0055
04d7005504d7005503e6001e03d6001703d6001703d600170432004e0321
008605d7008603210000045b0026040400260419003805fc00380580004a
0417004a063400030670008604c400580486001b03960053049200030400
000008000000040000000800000002af00000200000001550000040e0000
01bc00000199000001000000000000000000ffdc0000ff25040e0024040e
002403d9009903fefff90210006a037b006401b700280343002804c50028
04b200e603fcfffa0290003a052b0050045a004f043c004f03b60010040e
00600682007e05830020075c008d061b008d0799002c061d0098047c0012
03f6000c08ee001e047dfffb04bb002004e1004904fa002804270024043c
004f0635003906210034057800e6059d00e603fc0053070100bc03fc0056
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff60711008a045d003f047c008d040e003f04a60016055800560407000e
0682007904390048042bfffc035c003503ce000604510059033a00100327
000003270000032700000254000002540000025400000254000002aaff65
02aaff6504e0004607f4000a07e2fff70798ffe307920056063f008d0535
000a0728002905d2002007a8008d03f2000a0676007704e5001608ca0050
05b9005007920056079200560424004f05c100230539007e0495000e064f
007e0502001c06ba007e0366000c05e7007603f9ffd307a8004804b00048
065c004b05c100230342004906c3005505f600860497000a066300860552
003107000086038c000a05d8006e0470001a087a00550527005506c30055
06c3005503cb005a03c7009602aa00cf040e005b0000ffdc0000fe5101cf
0000025900a501c70000017a004f030cff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bd000002aaff65
055001c4027f006303240000039a0000025600000289001e000000d40000
00de0284001e032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000036d00000000000004150000031c0000036d0000
036d00000392000003470000034700000392000003920000035400000369
0000000000840000003f0000fffa00000075000000750000007500000075
000000750594fe6e0594fe910594ff15042ffe04042ffe15042f0008042f
00080447000a0447000a0447000a060c000a060c000a060c000a049c0086
049c0086049c0086064a0086064a0086064a008603cdffec03cdffec03cd
000b04e1005504e1005504e1005506a0005506a0005506a000550000fd7a
0000fd4f0000fd5a0000fd5a0000fbfe0000fc010000fbdc0000fbda0000
fbfe0000fbfc0000fbfe0000fbfc0000fbff0000fbff0000fc000000fc00
0000fc000000fc000000fbfd0000fbfd0000fda80000fc2e0000fc2e0000
fd0a0000fd0a0000fc7d0000fc7e0000fbe30000fbe30000fcac0000fcac
0000fcaa0000fca90000fd4f0000fd4f0000fd340000fd340000fd330000
fd330000fd470000fd470000fd760000fd760000fd450000fd600000fd60
0000fd600000fd600000fd340000fd6d0000fc8a0000fd6e0000fd0a0000
fcf10000fcf10000fc970000fc990000fca90000fca90000fc700000fca3
0000fc2e0000fc2f0000fc6d0000fc6d0000fd530000fcf10000fd6d0000
fcf30000fcde0000fcde0000fc660000fc650000fcdd0000fcdd0000fc2e
0000fc7e0000fd760000fc700000fc700000fc6b0000fc6b0000fc700000
fc710000fc460000fd7a0000fced0000fce70000fd450000fd450000fca8
0000fca80000fcde0000fd9f0000fdaf0000fcfb0000fd530000fd530000
fd420000fd420000fd7e0000fcde0000fcde0000fcde0000fc8f0000fc53
0000fc530000fc530000fc530000fc920000fc980000fc980000fc530000
fc530000fcbf0000fd650000fd650000fd620000fd620000fde60000fde6
0000fd510000fd510000fd630000fd630000fd800000fd7f0000fd510000
fd510000fd6a0000fd6a0000fce90000fce90000fdc00000fdc00000fd8a
0000fd8a0000fd570000fd570000fd5b0000fd5b0000fcc30000fcc30000
fcc30000fcc30000fc720000fc3c0000fc3c0000fc010000fc010000fc4e
0000fc4e0000fc130000fc130000fc0e0000fc0e0000fc4a0000fc4a0000
fdb50000fcd10000fd9f0000fcf60000fd4c0000fd4c0000fd470000fd47
0000fd2f0000fd2f0000fccd0000fccd0000fc700000fc710000fcb20000
fcb20000fc960000fc970000fca50000fca50000fcb20000fcb20000fc96
0000fc950000fc9f0000fc9f0000fc380000fc380000fc380000fc380000
fc9f0000fc9f0000fca30000fca90000fd470000fd4c0000fca40000fca4
0000fca40000fca40000fca90000fca80000fcaa0000fcaa0000fc380000
fc380000fc380000fc380000fd6d0000fd6d0000fc9f0000fca40000fca4
0000fd050000fd050000fd0d0000fd0d0000fc430000fc43042ffe62040a
000a040a000a040a001e01f70072044b004b044b004b044b004b044b004b
046f001906b600190aa000b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b4000000>
<000000000000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c00000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
000002020000020200000202000002020000020200000202000002020000
020200000202000002020000020200000202000002020000020200000202
0000020200000202000002020000020200000202000100000f2201200010
00bd000700020010002f006000000c630141000400010000000e00ae0000
00030000000000640000000000030000000700fa00640001000000000000
0032015e0001000000000003001301900001000000000004001301a30001
000000000006001301b60001000000000007007d01c90003000104090000
006402460003000104090001002602aa0003000104090002000e02d00003
000104090003002602de0003000104090004002603040003000104090006
0026032a000300010409000700fa035000a9002000320030003000380020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002ea92032303038204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e4b545359
45542b43616c696272692d426f6c644b54535945542b43616c696272692d
426f6c644b54535945542b43616c696272692d426f6c6443616c69627269
20697320656974686572206120726567697374657265642074726164656d
61726b206f7220612074726164656d61726b206f66204d6963726f736f66
7420436f72706f726174696f6e20696e2074686520556e69746564205374
6174657320616e642f6f72206f7468657220636f756e74726965732e00a9
002000320030003000380020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e004b00540053005900450054002b00430061006c0069
006200720069002d0042006f006c00640052006500670075006c00610072
004b00540053005900450054002b00430061006c0069006200720069002d
0042006f006c0064004b00540053005900450054002b00430061006c0069
006200720069002d0042006f006c0064004b00540053005900450054002b
00430061006c0069006200720069002d0042006f006c006400430061006c
006900620072006900200069007300200065006900740068006500720020
006100200072006500670069007300740065007200650064002000740072
006100640065006d00610072006b0020006f007200200061002000740072
006100640065006d00610072006b0020006f00660020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e00200069006e002000740068006500200055006e006900740065
0064002000530074006100740065007300200061006e0064002f006f0072
0020006f007400680065007200200063006f0075006e0074007200690065
0073002eb10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802
f6b21e2c1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b2
1e2c1fb802f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b
1fb802edb21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb8
02e9b21e2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5
b21e2c1fb802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d
121fb802e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1f
b802dcb21d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802
d8b21d2f1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b2
1d2f1fb802d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f
1fb802cfb21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d121fb8
02cbb21d121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7
b21d2f1fb802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d
2f1fb802c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121f
b802beb21d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802
bab21d2f1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b2
1d2f1fb802b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f
1fb802b1b21c321fb802b0b21c321fb802afb21c331fb802aeb21c331fb8
02adb21c331fb802acb21c331fb802abb21c331fb802aab21c311fb802a9
b21c311fb802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5b21c
321fb802a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c331f
b802a0b21c331fb8029fb21c331fb8029eb21c331fb8029db21c331fb802
9cb21c311fb8029bb21c311fb8029ab21c321fb80299b21c321fb80298b2
1c321fb80297b21c321fb80296b21c321fb80295b21c331fb80294b21c33
1fb80293b21c331fb80292b21c331fb80291b21c331fb80290b21c331fb8
028fb21c331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8028b
b21c321fb8028ab21c321fb80289b21c321fb80288b21c331fb80287b21c
331fb80286b21c331fb80285b21c331fb80284b21c331fb80283b21c331f
b80282b21b341fb80281b21b341fb80280b21b341fb8027fb21b341fb802
7eb21b341fb8027db21b341fb8027cb21b341fb8027bb21b341fb8027ab2
1b341fb80279b21b341fb80278b21b341fb80277b21b341fb80276b21b34
1fb80275b21b341fb80274b21b341fb80273b21b341fb80272b21b341fb8
0271b21b341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8026d
b21a351fb8026cb21a351fb8026bb21a351fb8026ab21a351fb80269b21a
351fb80268b21a351fb80267b21a351fb80266b21a351fb80265b21a351f
b80264b21a351fb80263b21a351fb80262b21a351fb80261b21a351fb802
60b21a351fb8025fb21a351fb8025eb21a351fb8025db21a351fb8025cb2
1a351fb8025bb21a351fb8025ab21a351fb80259b219371fb80258b21937
1fb80257b219371fb80256b219371fb80255b219371fb80254b219371fb8
0253b219371fb80252b219371fb80251b219371fb80250b219371fb8024f
b219371fb8024eb219371fb8024db219371fb8024cb219371fb8024bb219
371fb8024ab219371fb80249b219371fb80248b219371fb80247b219371f
b80246b219371fb80245b219371fb80244b219371fb80243b219371fb802
42b219371fb80241b219371fb80240b219371fb8023fb219371fb8023eb2
19371fb8023db219371fb8023cb219371fb8023bb219371fb8023ab21937
1fb80239b218391fb80238b218391fb80237b218391fb80236b218391fb8
0235b218391fb80234b218391fb80233b218391fb80232b218391fb80231
b218391fb80230b218391fb80301b2182e1fb8022fb218391fb8022eb218
391fb8022db218391fb8022cb218391fb8022bb218391fb8022ab218391f
b80229b218391fb80228b218391fb80227b218391fb80226b218391fb802
25b2173b1fb80224b2173b1fb80223b217321fb80222b2173a1fb80221b2
173b1fb80220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b
1fb8021cb2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b1fb8
0218b2173b1fb80217b2173b1fb80216b2173b1fb80215b217321fb80214
b2173a1fb80213b2173b1fb80212b2173b1fb80211b2173b1fb80210b217
3b1fb8020fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb2173b1f
b8020bb2173b1fb8020ab2173b1fb80209b217321fb80208b217321fb802
07b2173b1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb80203b2
173b1fb80202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2173b
1fb801feb2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b1fb8
01fab2173b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb801f6
b2173a1fb801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2b217
3b1fb801f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb2173b1f
b801edb2173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1fb801
e9b2173b1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801e5b2
16231fb801e4b216371fb801e3b216371fb801e2b216381fb801e1b21638
1fb801e0b216431fb801dfb216441fb801deb216441fb801ddb216441fb8
01dcb216451fb801dbb216461fb801dab216461fb801d9b216461fb801d8
b216231fb801d7b216231fb801d6b216381fb801d5b216431fb801d4b216
431fb801d3b216431fb801d2b216441fb801d1b216461fb801d0b216461f
b801cfb216461fb801ceb216461fb801cdb216461fb801ccb216461fb801
cbb216431fb801cab216231fb801c9b216231fb801c8b216371fb801c7b2
16371fb801c6b216381fb801c5b216421fb801c4b216431fb801c3b21644
1fb801c2b216451fb801c1b216461fb801c0b216461fb801bfb216461fb8
01beb216461fb801bdb216461fb801bcb216461fb801bbb216461fb801ba
b216371fb801b9b216381fb801b8b216421fb801b7b216431fb801b6b216
431fb801b5b216431fb801b4b216441fb801b3b216441fb801b2b216441f
b801b1b216451fb801b0b216451fb801afb216451fb801aeb216461fb801
adb216461fb801acb216461fb801abb216461fb801aab216461fb801a9b2
15341fb801a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2154e
1fb801a4b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d1fb8
01a0b2154e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8019c
b215401fb8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198b215
4f1fb80197b2154f1fb80196b215501fb80195b215521fb80194b215521f
b80193b215521fb80192b215411fb80191b2154f1fb80190b215501fb801
8fb215501fb8018eb215511fb8018db215521fb8018cb215521fb8018bb2
15521fb8018ab214581fb80189b214591fb80188b2145c1fb80187b2145d
1fb80186b2144a1fb80185b2145b1fb80184b2145c1fb80183b214591fb8
0182b2145d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c4e1f
c10c4e1fc00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561fae0b
561fad0b561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b561f
a60b561fa50b561fa40b561fa30b561fa20b561fa10b561fa00b561f9f0b
561f9e0a681f9a0a681f990a681f980a681f970a681f960a681f950a681f
940a681f930a681f920a681f910a681f9009681f8f09681f8e09681f8d09
681f8c09681f410902fc02fa0056001f02fb02fa0068001f017fb213321f
b8017eb212371fb80174b212371fb80173b211421fb80172b211421fb801
71b211421fb80170b211421fb8016fb211421fb8016eb211421fb8016db2
11421fb8016cb211421fb8016bb211421fb8016ab211421fb8013cb21142
1fb8013bb210421fb8013ab210421fb80139b210421fb80138b210421fb8
0137b210421fb80136b210421fb80135b210421fb80134b210421fb80133
b210421fb80132b20f451fb80131b20f451fb80130b20f451fb80112b20f
451fb80111b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451f
b8010db20e481fb8010cb20e481fb8010bb20e481fb8010ab20e481fb801
09b20e481fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a
1fed0d4a1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd
0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b56
1fbd0b561fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213
321fb8017ab211401fb80179b211421fb80178b211421fb80177b211421f
b80176b211421fb80175b211421fb80143b211421fb80142b210421fb801
41b210421fb80140b210421fb8013fb210421fb8013eb210421fb8013db2
0f451fb80115b20f451fb80114b20f451fb80113b20f451fb903030302b2
401fa4be030200b4030200c4030200030300b213321fb8017bb213321fb8
0153b212371fb80152b211401fb80151b211401fb80150b211401fb8014f
b211401fb8014eb211401fb8014db211401fb8014cb211401fb8014bb211
401fb8014ab211401fb80149b211401fb80148b211401fb80147b211401f
b80146b211401fb80145b211401fb80144b211401fb80122b211401fb801
21b210421fb80120b210421fb8011fb210421fb8011eb210421fb8011db2
10421fb8011cb210421fb8011bb210421fb8011ab210421fb80119b21042
1fb80118b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f45
1ffb0f451ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff4
0e481ff30d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a
1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc9
0c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e
1fb70b561fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fdb212
371fb8017db212371fb8017cb212371fb80169b2112e1fb80168b2112e1f
b80167b211401fb80166b211401fb80165b211401fb80164b211401fb801
63b211401fb80162b211401fb80161b211401fb80160b211401fb8015fb2
11401fb8015eb211401fb8015db211401fb8015cb211401fb8015bb21140
1fb8015ab211401fb80159b211401fb80158b211401fb80157b211401fb8
0156b211401fb80155b211401fb80154b211401fb8012fb211401fb8012e
b210421fb8012db210421fb8012cb210421fb8012bb210421fb8012ab210
421fb80129b210421fb80128b210421fb80127b210421fb80126b210421f
b80125b20f451fb80124b20f451fb80123b20f451fb80105b20f451fb801
04b20f451fb80103b20f451fb80102b20f451fb80101b20e481fb8010040
a20e481fff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c
4e1fd20c4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f
84032e1f83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d
030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948
775578ab77550b77010c764875555475e475f47503147554756475747594
75d475e47507a475b475c47503b8ffc0401275383b468075907502147574
75020075010fb8ffc04021750b0e467448725573ab725504723472023bf4
7201e07201023072015072607202b8ffc0b372242846b8ffc0403572161a
461072307240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f
6f02af6fbf6f02406f090d466e486d55df6d0100bc02ff001002ff00c002
ffb2030a6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e675568
ab6755662e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a
555bab5a55592e58555703251f562e545555ab5455532e515552ab51554f
2e4e554e03251f4d2e4b554cab4b554a2e485549ab4855504801472e4655
4503361f001f01001e01001e701e801ef01e040b601d701d02701de01df0
1d03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f
198f199f19af19050f198f199f19030c7012801202701180110230114011
d011e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01
af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f
0d40472f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f
0c5f0c039f0c01400c262946ef0aff0a02400a242746ef09ff0902ff0901
0003012001010001100120010308b8ffc0b301151f46b80100b316010501
b80190b154532b2b4bb807ff524bb008505bb00188b02553b00188b04051
5ab00688b000555a5b58b101018e59b101024354b0144b515a58b101018e
59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358
b0001db1160042592b5e73757373742b732b73742b2b73745e732b5e7374
757374755e73747573015e7374737475757473745e737473002b2b732b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b73
74752b2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b
5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[515 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 316 655 <00010002ffed031a03c00036002eb90007025e400923142314002c000429
b80120b232480cb80148b11c4d003fed3fed32012f2f1239392f2fed3130
0114062321060615141e0233323633321e02151406070e0323222e043534
3e023723222635343e023321321e02031a1413fef204050c19271c2c320a
040a07050c0b051e2d3b203554412d1d0e02040504c9131305090f0a02ca
090f0a050359372f38803b607c471c110513241e2d2f0b050d0b07142c48
688d5a1f4a4e52262f371d27190a0a192700>HIBBAA+Calibri-Bold AddT42Char 
2 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>HIBBAA+Calibri-Bold AddT42Char 
HIBBAA+Calibri-Bold /CharStrings get begin
/g655 655 def
end
HIBBAA+Calibri-Bold /Encoding get
dup 32 /g655 put
pop
end
%ADOEndSubsetFont
/HVDQQO+Calibri-Bold /HIBBAA+Calibri-Bold findfont ct_VMDictPut
/HVDQQO+Calibri-Bold*1 
[32{/.notdef}rp /g655 223{/.notdef}rp]
HVDQQO+Calibri-Bold nf
HVDQQO+Calibri-Bold*1 [0 -18 -18 0 0 0 ]msf
18.66 126.807 mo
( )sh
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc13ba13000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c7966613144040000a43000001b4c68656164e606fe47000010480000
0036686865610d8d122a0000108000000024686d7478cec5ef7f000010a4
00003c4a6c6f6361017e5f1000004cf000003c8c6d6178701c1103500000
897c000000206e616d6541b2982e0000899c000004f870726570c7f0742e
00008e940000159c676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e10002ff4000acff00000009000000004d53202000200000
feff0600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
000000059eb8c517ca715f0f3cf50019080000000000bbeb7ccc00000000
c5229872fbdafd8d09ec07c5000100090002000100000000000100000600
fe0001c40aa0fbdafa8609ec000100000000000000000000000000000f03
040e0000000000000000000001cf000004d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001704d9001704d9001704d90017
0634ffd30634ffd3047c008d043c004f043c004f043c004f043c004f043c
004f043c004f050b008d050b008d051d000f051d000f03e7008d03e7003f
03e7008d03e7003f03e7003c03e7004d03e7005503e7007503e7008d03e7
008d03ac008d0519004905190049051900490519004905190049050c008d
050c008d054300100222008d0222ff5a022200260222ff440222ff480222
ff4e0222ff5b0222ff80022200220222001e04c9008d02a6000302a6ffaf
0460008d0460008d0362008d036200720371008d0362008d03760015047e
008d06fe008d0545008d0545008d0545008d0545008d0545008d0521008d
056900500569005005690050056900500569005005690050056900500569
005005690050057200500572005006fe00500442008d0442008d057d0050
0481008d0481008d0481006a0481008d03c8003f03c8003f03c8001f03c8
002303c8003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c
0539008c0539008c0539008c0539008c0539008c0539008c0539008c0539
008c0539008c0539008c04bb00160740002b0740002b0740002b0740002b
0740002b04680021042800100428001004280010042800100428001003d3
003303d3003303d3001e03d300330447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a058f
ffe2058fffe20438008603cb005a03cb005a03cb005a03cb005a03cb005a
03cb005a049100860491008104a6002604a60026038f0086038f0024038f
0086038f0020038f0020038f001d038f0030038f003f038f0086038f0086
03580086049c0058049c0058049c0058049c0058049c0058049c0086049c
008604c10034021000860210ff600210001f0210ff540210ff410210ff53
0210ff650210ff7b0210001802100016046f0086026900000269ffa10405
00860405008602fc008602fc0085030d008602fc0086030c002c04150086
0648008604c7008604c7008604c7008604c7008604c700860497008604da
005504da005504da005504da005504da005504da005504da005504da0055
04da005504e4005504e40055062e005503fd008603fd008604de00550425
0086042500860425005a04250086036f0043036f0043036f0001036f0006
036f0043036f0043037b001b037b0008037b001b037b001b04ac008404ac
008404ac008404ac008404ac008404ac008404ac008404ac008404ac0084
04ac008404ac00840435001b068a002b068a002b068a002b068a002b068a
002b0404002603cd000b03cd000b03cd000b03cd000b03cd000b038f003e
038f003e038f0016038f003e03f3004703f3004703f3004703f3004703f3
003703f3004703f3004703f3004703f3004703f3004703f3004706330047
06330047044b007e03590048035900480359003b03590048035900480359
0048077d004807080048060e0048060e0048044b004b04c6004b048d004b
044b004c0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0288001906c200190909001904ce0019
06c2001909090019046f0019046f0019046f0019046f0019048100190481
00190481001904810019046f0019046f001906b6001906b6001906b60019
06b6001906c8001906c8001906c8001906c8001906b6001906b60019046f
0019046f001906b60019064d001908950019046f0019046f001904ea0019
046f001906b60019051600190516001905450019075e001903cb001b03cb
001b03cb001b03cb001b03cb001b044b004b044b004b044b004b044b004b
044b004b044b007e044bff9f0461fff901f7006b01f7ff7801f7001a01f7
ff6301f7ff3701f7ff7601f7ff6d01f7ff7301f7000801f7007e0403006b
043a006e020bffdb020bffdb020bff6d03d7007e03d7007e03d7007e01f7
007e01f700320273007e01f7003f021c00140361007e0682007e044b007e
044b007e044b007e044b0063044b007e04faff96044b007e044d0048044d
0048044d0048044d0048044d0048044d0048044d0048044d0048044d0048
045a0048045a004806be0048044b007e044b007e044b004b02d8007e02d8
007e02d8fff202d8005703310049033100490331ffff0331000003310049
0331004905d4004905d400490470007f0211007e02c6001702e8001702c6
001702d6001b0510001704af001704af001704af001704af001704af0017
04af001704af001704af001704af001704af001705400017078a00170728
001707280017072800170728001707280017072800170728001707280017
0728001707280017044b0079044b0079044b0079044b0079044b005e044b
0079044b0079044b0079044b0079044b0079044b007903c9001605f60023
05f6002305f6002305f6002305f6002303ad002003ca001603ca001603ca
001603ca001603ca0016032e0045032e0045032e0003032e004503540066
037b005503a5005002bf003602f5005a0244003802f5003a02c7003a01d0
001c029c001802fb005a017a004f0184ffd902c0005a0176005a046c005a
02f9005a02f5003902f5005a02f5003a0200005a023a003c01fa001c02fb
005a02a50019041b002002a9002002a60017023a00340267000002840000
02a000000000fcfe0000fce3026800000284000002a000000000fcfe0000
fce20336000003690000039b00000000fc980000fc640336000003690000
039b00000000fc960000fc6501fc0000038e000003920000039600000000
fc6b0000fc6803510000030f0000036d0000038800000000fc890000fc6d
031f000003470000036e00000000fca10000fc7a03140000031c00000324
00000000fca80000fc9f029f000002a3000002a800000000fce20000fcde
02cf000002c2000002b5000003e3000004150000044500000000fc400000
fc0f01e2000001f7000001e2000001e200000000fd430000fd43026d0066
0000fd60028600660000fd5502020067022c000004d9001704d9ff72047c
008d0347008d049f002b03e7008d03e7fe9d03d30033050c008d050cfe7a
056900500222008d0222fe930222ff4f0460008d04c0001a06fe008d0545
008d03f0004d056900500569ff0f050c008d0442008d03c2004a03f6000c
042800100428fe4d04280010066900000468002106760077057200490572
fef30447000a0447000a0438008603120086040e0021038f0086038f0086
038f003e049c0086049c008604f6005502100086021000100210ff520405
0086041e00110648008604c700860393005704da005504da0055049c0086
03fd0086037a004e037b001b03cd000b03cd000b03cd000b05bb00000404
002605d8006e04e1005504e1005504ba004c04ba004c045d007e04520052
03bd000c0443000003a9004703a9004702ea0040045a007e045a007e045c
0050048f0004024a0079024a0000024aff7d024aff1d03d7007e03e40000
0482007e03c500160315003e031e0044044d0048044d004804a20020043e
0064045b0046034100490324000204630074046300740463007304630028
0598004205980044039b000905e7007605be004f05be004f028900000000
fd0403f400000000fc360224007d0224007d0224007d0235003602100054
0210005404d900170472008e047c008d0375008d0375008d0379008d0562
000a03e7008d03e7003f03e7004c06a9003a03db003e0537008d0537008d
0537008d0222008d0222ff4e02a600030481008d0481008d0508000a072a
000a06fe008d050c008d072c008d0569005005690050050a008d0442008d
043c004f03c8003f03f6000c046100080461000804e5001605ca00000468
00210543008d0507008d048e004d072d008d076a008d051d000c0663008d
046d008d044f0048044f004f074f008d049800400516000c050f000c051a
00000447000a041c0088043800860321008603210086033a008604b6000b
038f0086038f0024038f001e05d800310396004a04b0008604b0008604b0
0086021000860210ff5302690000040c0086040c00860461000306480086
049c008604da005504d700550497008603fd008603cb005a036f0043037b
001b03d6001703d60017045a001a054300000404002604ba008604900086
04320051066f008606960086049c001805d700860419008603e6005d03ee
0055068800860432004a048a001d0490001d0481000006430003066c0086
03f30047044200000443000003f5007e02d6007e02d6007e02f0007e01f7
ff6d04a80019044b004b0407004a0407004a0407004a05e50030036a003a
0474007e047400700474007e01f7006b01f7ff76020bffdb03f5007e03f5
007e043500140636001205b5004c045d007e065a007e044d004804490048
0446007e044b0079044b007e0359004803310049031e00090682007e03ca
001603ca001603f900160567004203ad0020047f007e044c007e03e80030
061b007e0650007e0477000905b2007e03f5007e037f003f0380004a0606
007e03fc002b046dfff90461fff90441001103a2000003a2000003a20000
0000fc950000fc95029b00e6029b009b029b009b03b5007303b5005303b5
0053040a0058026900cf02690091035e006d035500450210001702350036
023500a00223007d05b1007c0210006b021000170210006b02100017037b
0064037b001b037b0064037b001b02100017037b001b02c1005802c100a9
02c1005802c100a9044f0059044f0097044f0059044f009703700002033f
002003cd017003fc01870370001c033f003d0273003b0273003b03fcfff5
03fcfff5073e0083073e0083073e0083073e008303fcfff903fc00940224
007d0224007d027e006b027e00610299009d0299005702c0003602c00069
0259006d025900630277009202770065027e006b027e00610299009d0299
005702c0003602c0006903fc008603fc006003fc006103fc005604c80052
045d005703fc001e03fc003901de00790382007905a30000057600000841
000007300000074400000730000006ad009e06ad009e040e006905c30032
05d9004f02bd000003fc002104b6003c040e002003fc0049040e00520458
004c03fc00a903fc0044040e004c03fc0063044d0015040e001d03df002d
039f005503f8004f039f0054039f000506350039085e008d03fc001c073f
00860437001a04a8004e02de001903f2004f03f000430460001e03e9004f
0442006603be002f0440004d04420047040e0039040e0094040e0058040e
0055040e001a040e0060040e0054040e0051040e003d040e004204740058
02ad001c03a000510385004d03d30024038a005f03ce0058035f002503d4
003a03dc0046039f0037039f0079039f0050039f0053039f002d039f0062
039f0045039f0047039f0038039f003804a8004e02de001903f2004f03f0
00430444001e03e9004f0442006603be002f0440004d04420047040e0039
040e0094040e0058040e0055040e0024040e0060040e0054040e0051040e
003d040e0042032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c70047032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c7004702b5002f02050025027000300274002302750010026a0031
027a002a0261001d028b001e026e001b02b5002f02050025027000300274
002302750010026a0031027a002a0261001d028b001e026e001b02d8ff2e
032c003805870038059400380543003805940038055a00380592003805fa
004205fa0042059d003b05eb003b05e8003b0607002305b1004405e80044
0570002c05d50039087e0039057c004607ed004603fc003403fc003703fc
005403fc002203fc005303fc005403fc005103fc004403fc006603fc0045
03fc005503fc005603fc002f05e9002c0439002206b40059044c004c0301
000e03fcfffe049f002b057200490482007e064200530467005304450036
073e0092073e0087073e00b6073e00b606b7007606b7010806b7007606b7
01080a7b00920626007d0466002801da000001da00000466000004660000
0466ffdb0466ffde04660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601a8
04d9001704d9001704d9001704d9000504d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001703e7008d03e7008d03e70047
03e7ffe803e7ffbd03e7ffdd03e7ffdd03e700460222002c022200880569
0050056900500569005005690050056900500569005005690050061e0050
05940050059400500594005005940050059400500539008c0539008c0617
008c0617008c0617008c0617008c0617008c0617008c0428001004280010
0428001003f3004703f3004703f3ffca03f3ff9a03f3ffca03f3ffc503f3
004703f3ffc503f3ffc903f3ffc803f3ffc503f300470407004a0407004a
040700300407ffdb0407ffb60407ffd90407ffd90407004a01f7001c01f7
006b044d0048044d0048044dfff2044dffd2044dffef044dfff2044d0048
051000480510004805100048051000480510004805100048044b0079044b
0079052e0079052e0079052e0079052e0079052e005e052e007903ca0016
03ca001603ca0016048d004b046600380447000a0447000a0447ffe80447
ffc30447ffe80447ffe80447000a0447fff10447fff20447fff20447ffef
0447000a038f0086038f0086038f0000038fffa8038fff83038fffa8038f
ffa8038f00410210001c0210007f04da005504da005504da003e04da0019
04da003e04da003804da0055058b0055058b0055058b0055058b0055058b
0055058b005504ac008404ac0084058a0084058a0084058a0084058a0084
058a0084058a008403cd000b03cd000b03cd000b01da0000046600000466
ffdb04660000046600000466000004660000046600000466000004c10066
0540008d0545008d0536008d04b5008604c3008604b5008603f6000c02c6
0017037b001b01f70008046f0019046f0019046f001906b6001906b60019
06b6001903130018030a007803160054036b007802b7007802920078037c
00550367007801b000780205002802f4007802670078049a007803920078
03a1005502f4007803a10055030d00780288003a02b0001e0378006e0313
001804a1002802c9001802ac0011025d001b0000fdfc0000fdfc0466010c
0466010c0466007e0466007e03c1000003c10000030c0000030c0000030c
0000030c0000022c0000022c000001ff000001ff000001ff000001ff0000
0000fcff0000fcff02aa006902aa006902aa009802aa009801ce000002aa
008202aa008202aa008202aa0082027f0050027f006a0324ffeb02910084
0466010c02aa001402aa0013033600000336000003140000030c0000038e
0000031f000003fcfff903fcfff9038e0000038e00000000fedd0000fe4a
0000fdfa0000fdfa0000fe290000fe290000fdae0000fdae01ce000002aa
00140291008302aa001502aa000002aa0000039a0000039a00000000fdfd
0000fdfd0000fd090000fd090000fd090000fd0902aa000002aa000003fc
fff90466007e02aa0098038e0000038e0000038e0000038e0000038e0000
038e000004010014040101470000000002aa000002aa000001ce000001ce
0000030c0000030c000002aa000002aa00c802aa00c803f100c801ce0000
01ce000001e2000001e2000002aa00a003b1008402aa000002aa0000075c
003c075c0000075c0000075c0000075c0000075c003f06d2000006d20000
075c0000075c0000075c004001df002001df002001e7002401e7002400f8
002f00f8002f02070022020700220209003702090037019d0028019d0028
020700230207002302090039020900390309003803090038015f003d015f
003d015200100152001001c3000601c3000601bf000801bf000803270025
0327002503270025032700250000ff9203bd0000041a0000041a00000416
ffe40416ffe4041a000b041a000b041a000b041a000b0401ffff0401ffff
0401ffff0401ffff015f003d02aa000001ce000003f100c8055800190472
008e049300140433003104db004f051d000f05e700190472003b03e7005b
0543005003f1005503acffd60573004904ba00110266008d026800110464
008d071c008c0545ffd605690050066a004f051e00190481008d03cf003f
03c2004a045c001903f6000c057200490539008c0465001003d3003303eb
003e03f10046040e004e08de008d0839008d0629008d056d008d07eb008d
0750008d04d900170222ff43056900500539008c0539008c0539008c0539
008c0539008c04d9001704d900170634ffd3052900490519004904600073
056900500569005003eb000008c5008d0839008d051900490714008d04e6
008d0545008d04d9ffed04d9001703e7ffcd03e700550222feac0222ff5c
0569003b056900500481ffbf04810078053900390539008c03eb003e050c
008d0523008d0439004603ec003304d9001703e7008d0569005005690050
05690050056900500428001004d9ffde0446ffda03850011040affab0382
003b0496000b055e000f04c0001a03e8ff9102c30003050f004f049d000f
04b4000704d90017047c008d047c008d047c008d043c004f050b008d050b
008d050b008d050b008d050b008d03e7007a03e7007a03e7008203e7003e
03e7008003ac008d05190049050c008d050c008d050c008d050c0015050c
008d0222ff460222ff7e0460008d0460008d0460008d0362008d03620035
036200600362006606fe008d06fe008d06fe008d0545008d0545008d0545
008d0545008d056900500569005005690050056900500442008d0442008d
0481008d0481008d0481008d0481008d03c8003f03c8003f03c8003f03c8
003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c0539008c
0539008c0539008c0539008c04bb001604bb00160740002b0740002b0468
0021046800210428001003d3003303d3003303d300330390002403e40012
046300110481008d0562008d04cc008d03f50033043c003003ac004903e9
008d04920029044b007e045ffffb03b60048044b004b0443004a0288fff8
066e007e044b007e03d7007e0281001b03e40005044b007e05870048044b
007e033a004602ed001702c60017041c0014032e004503d5003e03740026
0362003d0779004b0402007e0656007e03f3004701f7ff61044d0048044b
0079044b0079044b0079044b0079044b00790407005103f3004703f30047
063300470474ffde03cb001b03d70042044d0048044d004803a9001c020b
ff6b0779004b03cb001b044b007e03f3ffc003f300470407ffe30407004a
01f7fecf01f7ff73044dffee044d004802d8ff7402d80011044b0000044b
007903a9002a044b005104db004b041f0048033a004503f300470407004a
044d0048044d0048044d0048044d004803ca001602a4007804fc007e02cf
0017069d004b069f004b0362ffe103310049032e0045037a003b03fb0030
0260000502600005044b004b0308001003f2000c03910035040e00580325
003c021d009903d9009904b30098029b00e603f30047044b007e044b007e
044b007e03590048044b004b044b004b044b004b044b004b044b004b0407
004a0407004a0407004a040700480407004a0288001903cb001b044b007e
044b007e044b0067044bffff044b007e01f7ff3501f7ff3501f7ff6903d7
007e03d7007e03d7006b01f7007201f7ff6d01f7ff6d01f7ff620682007e
0682007e0682007e044b007e044b007e044b007e044b007e044d0048044d
0048044d0048044d0048044b007e044b007e02d8007e02d8007302d8000d
02d8fffa033100490331004903310049033100030331004902c6001702c6
001702c6ffde02c6ffde044b0079044b004d044b0079044b005a044b0079
03c9001603c9001605f6002305f6002303ad002003ad002003ca0016032e
0001032e0045032e0008044b007e02c6ffa805f6002303ca001603f30047
021100490290002403f3001a02f9ff970488007e042d007e033d004503f4
00170363003802ee0027034e007e0599004204f60005041c0088042b000a
03cb00400429005a049f0019054f0005041c0041038f006204d200550396
00540358ffd304bb0058042b00140278008602fcffed0405008606900082
04c7ffd304da00550622005504bb000504250086036f0045037a004e03d9
0005037b001b04e1005504ac008403f9000b038f003e038a004b038a0055
0385004108030086088f008d05b300860617008d06cf00860768008d0447
000a0210ff4704aa005504ac008404ac008404ac008404ac008404ac0084
0447000a0447000a055cffe2049c0058049c00580405004804da005504da
0055038a000008030086088f008d049c005806b3008604a0008604c70086
0447ffc50447000a038fff9d038f004d0210feb20210ff7004da000904da
00550425ff9a0425006904acfff704ac0084038a004b049c008604c30086
04060056038f003e0447000a038f008604da005504da005504da005504da
005503cd000b0447000a03cb005402fc0000037b001b033300320438001e
04ac00000435001b038f00180269000004ad00550425000003cdfff3039f
00500333001e023000a0040600a004a90064026900cf0447000a04380086
043800860438007803cb005a049100860491008604910086049100860491
0086038f0029038f002e038f0050038f001e038f004603580086049c0058
049c0086049c0086049c0086049c0009049c00860210ff3e0210ff550405
0086040500860405008602fc008602fc000002fc002802fc001e06480086
064800860648008604c7008604c7008604c7008604c7008604da005504da
005504da005504da005503fd008603fd008604250086042500860425005c
04250086036f0043036f0043036f002c036ffff7036f0043037b001b037b
001b037b001b037b001b04ac008404ac008404ac008404ac008404ac0084
0435001b0435001b068a002b068a002b040400260404002603cd000b038f
000f038f003e038f0038049c0086037b000a068a002b03cd000b0447000a
02fc00000355ff9c03fd000004250086052f0086044700860390003e03cb
00400358004e040a0086047f0019047f001904c40019047f0019046f0019
046f0019047f0019049600190496001906b5001906b5001906d6001906b5
001906b6001906b6001906b5001906d2001904ce001904ad001704af0017
04af001704af001704af001704af001704af001704af001704af00170727
001707280017072800170728001707280017072800170728001707280017
0728001703f3007d044b004b044c007f044b007e0363003803880048044b
004b0461004b040700510407005105240054036a0042036a003a044f003a
043700480255000c045e004b044a004b044a004803d4001203e0000c044b
0079044b007d044b007e026b0010026b0010024a007901f7007e03270013
033800130204007904ab007e06820079068200790682007e044bffc7044b
007e0468007e0449004805c1004805a700440598004202d8001d02d8001d
02d9001d02d8007e02d8007e02a0007902a0001603ea007e03ea007e0331
004901eeffc20246ffee01eeffc2029fffae02c6003802c6002604b10010
04ad00520441007403c9001605f6002303ca001603b4000e0338004503d5
004503a9002a03ae002a0382003b038200480382003b03590048052d0050
03f5007e0437004204540048045d007e02a4ffaf03d7001c033c007e0460
004b0382003b0382004806b4004b06fd004b075b004b0522001704060017
059f00170662001904f4007a04be007e0433002c03ef0057045dffd3045e
ffd30427000a0577ffda063300510425000a03bb005a0462008604620012
03600086036a003a01f7006a026d001c03e2008602fa002005b5004c0474
007e04a8005703bb0044048a004e0489004e0528000806be005203b90044
044d0048044d004803db008603f6003403f600860355001b04860082046f
004e05e300440497006204090019063b0026036e003e035c003a03310041
03f40012030c008603eb000a0475008603db008605a40072044a00180313
00180417000a030a00780327001e036b007802b7007802b70046037c0055
0367007801b000780205002802f4007802670078049a007803920078038d
007803a1005502f9004c02f40078030d007802b0001e0378006e04a10028
02bf003602ac004702f5003a042c003602f5005a02f5003a02c7003a02b8
002e027b003802770038029c0018017a004f02c0005a046c005a02f9005a
02f500390244002a02e6003902e6003902f5005a01fa001c02fb005a02db
0044046c005a02a5001902a7001c02f2005a027e001002dc003703d1004d
02c2002f017a004f0200005a02fb005a02a5001902f2005a027e001002ed
005203d1004d02c2002f069b007904df000e04da004b032d000e07730014
0552001404bc000703660014033d001403ec0014032d00140370001403cb
001b032d006403e2003606af0017026c0013029d00130474000104e20012
04d40012044b007e04ae004b02a8001905b5004b046b007e0247007306d7
007e04a0007e044b007e02d8007303ad0049036cffc203d30016042e0020
0352004504b8004704d2004b046a004b0411004a03880042036a003a0411
00510276006b0363003801eeffc204c80079038b004002e5004e02440038
026e003802e000390277003401d0001c01c1fffb029c001802fb005a01f7
001401b20052017a005c01f80014022d000001bc005c01b3005c0248005c
046c005a046c005a032c0000032c005a0322006402f5003903b70039023a
003c020a000c0213001c035700160330004102eb005202e4005202c10017
023a0034029e003402ca003402a200300316004002fb005a02fb005a0184
ffd90200005a01f60022020c002202b4005a041b002002a6001701c40035
034300280210006b021000170210006a01ce000001ce00000299004b0299
005e03fc004403fc0066044b0032044b0032025100000268000002670000
02510000032700000267000002680000023900980239009801ce000001ce
000002aa008202aa008202aa008202aa008202aa001e02aa009302aa0016
0176005a023a003c02a900200299005e0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203360000049a0084037b001b02aa008502aa008502aa00c802aa
00c8029f00660267000003c1004703e30000038e0000023500a002aa0000
02aa000002aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402bf003602b8003a02f50039
02a9002002c7003d01d9000001d9000001d9000001d90000028900000289
00000289000002890000038e0000038e0000032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
ffff0324ffff03f4000003f4000003f4000003f400000324000003240000
031f00000314000001ff000001d90000031f0000031f0000031f0000031f
00000314000003140000031400000314000003f4000003f4000003f40000
03f40000027f006a027f006a05690050043c004f0456003a043c004f0456
003a042f0008042ffe46042f000803ac008d05690050046b000c05be008d
04cc000c0433004f0442008d044a0054039400480394003c04b8001204d7
002606c50019043a0060043efff00359004803630038035900480363002e
05a1004603920079044d004803c7000c04ee007e04d0000e03470049020b
ffdb045fffab04e4002604d7005503cb005a03cb004003cb005a03cb003d
040a001e040afe33040a001e0358008604c4005004540032055400860474
00370407005503fd008604d9ff9404d9fe4e04d9fe2604d9feed04d9ff9e
04d9fe5904d9fe3004d9feec04d9ff5004d9ff2604d9001704d9001704d9
001704d9ff9404d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe30
04d9feec06a4001706a4ff9406a4fe5806a4fe3006a4feed06a4ff9406a4
fe5906a4fe3006a4feec03e7feba04eafe7404eafe6c03e7feba04eafe74
04eafe6b03e7fe6703e7fe5d050cfeba060ffe74060ffe6d05c7fece050c
feba060ffe74060ffe6d05c7fecc050cfe68050cfe5c050c008d050cfeba
060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c05c7fecc06c2
008d06c2feba07c5fe7407c5fe6c077dfecd06c2feba07c5fe7407c5fe6c
077dfecc0222feba0325fe740325fe6d02ddfecd0222feba0325fe740325
fe6d0222fecc0222fe670222fe5d0222ff5b0222ff800569fede0636fe74
0636fe420569fede0636fe730636fe440569fe9b0569fe5e0442feba0428
fe620591fe740591fe9c0591ff230428fe000428fe1c0428001004280010
0572ff05063efe91063efe5a05f3fed50572fefc063efe91063efe5b05fa
fed40572feb10572fe7a057200490572ff05063efe7c063efe5005fafecf
0572fef1063efe7f063efe5005fafece074400490744ff050810fe7c0810
fe5007ccfecf0744fef10810fe7f0810fe5007ccfece04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c03a9004703a9004703a9004503a9004703a9004703a9004703a90047
03a90047045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a007e045a007e045a007e045a005d045a007e045a007e045a007e
045a007e045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a005d024a000b024aff86024aff83024aff6c024a000a024aff86
024aff86024aff69024aff14024aff14024aff60024affef024aff7b024a
ff32024aff69024aff68044d0048044d0048044d0048044d0048044d0048
044d0048044d0048044d0048043e0064043e006404630074046300740463
007404630074046300740463007404630074046300740463000804630009
04630074046300740463007404630053046300710463007405be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f05be004f
05be004f05be004f05be004f05be004f05be004f05be004f05be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a0447
000a0447000a0447000a0447000a0447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a060c000a0616
000a0616000a0616000a0616000a0616000a0616000a0616000a0616000a
038f0086038f0059038f0041038f0086038f0059038f0041038f0086038f
006f049c0086049c0086049c0086049c0086049c0086049c0086049c0086
049c0086049c0086049c0086049c0086049c0086049c0086049c0086049c
0086049c0086049c0086049c0086049c0086049c0086064a008606590086
065900860659008606590086065900860659008606590086065900860210
00250210ff8b0210ff720210ff7b0210001a0210ff8b0210ff720210ff70
0210ff0e0210ff0f0210ff77021000090210ffa00210ff420210ff660210
ff7b04da005504da005504da005504da005504da005504da005504da0055
04da005503fd008603fd008603cd000b040a001e03cd000b040a001e03cd
000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a001e
03cd000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a
001e03cd000b040a001e03cd000b040a001e03cd000b040a001e04e10055
04e1005504e1005504e1005504e1005504e1005504e1005504e1005504e1
005504e1005504e1005504e1005504e1005504e1005504e1005504e10055
04e1005504e1005504e1005504e100550696005506a0005506a0005506a0
005506a0005506a0005506a0005506a0005506a0005504d9001704d9ff94
04d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe3004d9feec050c
008d050cfeba060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c
05c7fecc057200490572ff05063efe7c063efe500572fe470572fef1063e
fe7f063efe500572fe4606a4001706a4ff9406a4fe5806a4fe3006a4feed
06a4ff9406a4fe5906a4fe3006a4feec06c2008d06c2feba07c5fe7407c5
fe6c077dfecd06c2feba07c5fe7407c5fe6c077dfecc074400490744ff05
0810fe7c0810fe5007ccfecf0744fef10810fe7f0810fe5007ccfece01d9
000001d900000289000002890000039a0000032900000329000003240000
03290000032900000324ffff03f4000003f400000324000001d90000031f
0000031400000232009d01ef009d01ef009d01ef009d0588008d048b000f
0442008d03870010046f008d071a003a03db003e04f4008d04b3008d049c
0010052b000c0562008d05d2008d0758008d05470050043c004f03f6000c
042800100428001004d700210605000c04cb004d048e004d048e008d063d
001e063d001e0222008d06a9003a04ac008d0558000a050c008d055d008d
048e004d074f008d04d9001704d900170634ffd303e70045054300500543
005006a9003a03db000b03eb003e0537008d0537008d0569005005690050
05690050044f0026046100080461000804610008048e004d036a008d0663
008d0387001004c7002004680021046d00280689003c0600002904360029
0710000a0714008d052600490513000c03f100550544000a04b6007e0407
000c044b007e0306001003a7007e063e0030036a003a044b007e043b007e
04170010048d000c0494007e04f5007e05f4007e0483004803590048031d
000903cf001003cf00100402002004e60009043e004e0406004e0406007e
050500160505001605e500300410007e04770014045c007e049e007e0406
004e05e1000f0222008d03f3000d03f30047063300470407003504070051
0407005105e50030036afffd03a9002a0474007e0474007e044d0048044d
0048044d0048037ffffb03ca001603ca001603ca001603e8002602d6007e
05b2007e0306001003fe002003ad0020044b004b063b004b0573002a03ca
002a063000140657007e045d004804850009036a0042046e001404f90086
0419000003fd00860321ffff04420086062200310396004a04380086043e
0086040c000004a9001b04d0008605390086068e008604d1005503cb005a
037b001b03cd000b03cd000b045a0026054f00190465005104320051045c
008605e1002005e100200210008605d800310440008604aa0003049c0086
04e6008604320051069300860447000a0447000a058fffe2038f004e04c7
005004c7005005d8003103960003038a004b04b0008604b0008604da0055
04d7005504d7005503e6001e03d6001703d6001703d600170432004e0321
008605d7008603210000045b0026040400260419003805fc00380580004a
0417004a063400030670008604c400580486001b03960053049200030400
000008000000040000000800000002af00000200000001550000040e0000
01bc00000199000001000000000000000000ffdc0000ff25040e0024040e
002403d9009903fefff90210006a037b006401b700280343002804c50028
04b200e603fcfffa0290003a052b0050045a004f043c004f03b60010040e
00600682007e05830020075c008d061b008d0799002c061d0098047c0012
03f6000c08ee001e047dfffb04bb002004e1004904fa002804270024043c
004f0635003906210034057800e6059d00e603fc0053070100bc03fc0056
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff60711008a045d003f047c008d040e003f04a60016055800560407000e
0682007904390048042bfffc035c003503ce000604510059033a00100327
000003270000032700000254000002540000025400000254000002aaff65
02aaff6504e0004607f4000a07e2fff70798ffe307920056063f008d0535
000a0728002905d2002007a8008d03f2000a0676007704e5001608ca0050
05b9005007920056079200560424004f05c100230539007e0495000e064f
007e0502001c06ba007e0366000c05e7007603f9ffd307a8004804b00048
065c004b05c100230342004906c3005505f600860497000a066300860552
003107000086038c000a05d8006e0470001a087a00550527005506c30055
06c3005503cb005a03c7009602aa00cf040e005b0000ffdc0000fe5101cf
0000025900a501c70000017a004f030cff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bd000002aaff65
055001c4027f006303240000039a0000025600000289001e000000d40000
00de0284001e032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000036d00000000000004150000031c0000036d0000
036d00000392000003470000034700000392000003920000035400000369
0000000000840000003f0000fffa00000075000000750000007500000075
000000750594fe6e0594fe910594ff15042ffe04042ffe15042f0008042f
00080447000a0447000a0447000a060c000a060c000a060c000a049c0086
049c0086049c0086064a0086064a0086064a008603cdffec03cdffec03cd
000b04e1005504e1005504e1005506a0005506a0005506a000550000fd7a
0000fd4f0000fd5a0000fd5a0000fbfe0000fc010000fbdc0000fbda0000
fbfe0000fbfc0000fbfe0000fbfc0000fbff0000fbff0000fc000000fc00
0000fc000000fc000000fbfd0000fbfd0000fda80000fc2e0000fc2e0000
fd0a0000fd0a0000fc7d0000fc7e0000fbe30000fbe30000fcac0000fcac
0000fcaa0000fca90000fd4f0000fd4f0000fd340000fd340000fd330000
fd330000fd470000fd470000fd760000fd760000fd450000fd600000fd60
0000fd600000fd600000fd340000fd6d0000fc8a0000fd6e0000fd0a0000
fcf10000fcf10000fc970000fc990000fca90000fca90000fc700000fca3
0000fc2e0000fc2f0000fc6d0000fc6d0000fd530000fcf10000fd6d0000
fcf30000fcde0000fcde0000fc660000fc650000fcdd0000fcdd0000fc2e
0000fc7e0000fd760000fc700000fc700000fc6b0000fc6b0000fc700000
fc710000fc460000fd7a0000fced0000fce70000fd450000fd450000fca8
0000fca80000fcde0000fd9f0000fdaf0000fcfb0000fd530000fd530000
fd420000fd420000fd7e0000fcde0000fcde0000fcde0000fc8f0000fc53
0000fc530000fc530000fc530000fc920000fc980000fc980000fc530000
fc530000fcbf0000fd650000fd650000fd620000fd620000fde60000fde6
0000fd510000fd510000fd630000fd630000fd800000fd7f0000fd510000
fd510000fd6a0000fd6a0000fce90000fce90000fdc00000fdc00000fd8a
0000fd8a0000fd570000fd570000fd5b0000fd5b0000fcc30000fcc30000
fcc30000fcc30000fc720000fc3c0000fc3c0000fc010000fc010000fc4e
0000fc4e0000fc130000fc130000fc0e0000fc0e0000fc4a0000fc4a0000
fdb50000fcd10000fd9f0000fcf60000fd4c0000fd4c0000fd470000fd47
0000fd2f0000fd2f0000fccd0000fccd0000fc700000fc710000fcb20000
fcb20000fc960000fc970000fca50000fca50000fcb20000fcb20000fc96
0000fc950000fc9f0000fc9f0000fc380000fc380000fc380000fc380000
fc9f0000fc9f0000fca30000fca90000fd470000fd4c0000fca40000fca4
0000fca40000fca40000fca90000fca80000fcaa0000fcaa0000fc380000
fc380000fc380000fc380000fd6d0000fd6d0000fc9f0000fca40000fca4
0000fd050000fd050000fd0d0000fd0d0000fc430000fc43042ffe62040a
000a040a000a040a001e01f70072044b004b044b004b044b004b044b004b
046f001906b600190aa000b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b4000000>
<000000000000013c0000013c0000013c0000013c0000029a0000029a0000
029a0000029a0000029a0000029a0000029a0000029a0000029a0000029a
0000029a0000029a0000029a0000029a000003c0000003c0000003c00000
03c0000003c0000003c0000003c0000003c0000003c0000003c0000003c0
000003c0000003c0000003c0000003c0000003c0000003c0000003c00000
03c0000003c0000003c0000003c0000003c0000003c0000003c0000003c0
000003c0000003c0000003c0000003c0000003c0000003c0000003c00000
03c0000003c0000003c0000003c0000003c0000003c0000003c0000003c0
000003c0000003c0000003c0000003c0000003c0000003c0000003c00000
03c0000003c0000005480000054800000548000005480000054800000548
000005480000054800000548000005480000054800000548000005480000
054800000548000005480000054800000548000005480000054800000548
00000548000006aa000006aa000006aa000006aa00000822000008220000
0822000008220000082200000822000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e0000008e0000008e0000008e00000
08e0000008e0000008e0000008e0000008e0000008e0000008e0000008e0
000008e0000008e0000008e0000008e000000ab800000ab800000ab80000
0ab800000ab800000ab800000ab800000ab800000ab800000ab800000ab8
00000ab800000ab800000ab800000be400000be400000be400000be40000
0be400000be400000be400000be400000be400000be400000be400000be4
00000be400000be400000d7c00000d7c00000d7c00000d7c00000d7c0000
0d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c
00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c0000
0d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c
00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c0000
0d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c
00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c00000d7c0000
0f8800000f8800000f8800000f8800000f8800000f8800000f8800000f88
00000f8800000f8800000f8800000f8800000f8800001032000010320000
103200001032000010320000103200001032000010320000103200001032
000010320000103200001032000010320000103200001032000010320000
1032000010320000103200001032000010320000103200001032000011b6
000012c4000012c4000012c4000012c4000012c4000012c4000012c40000
13aa000013aa000013aa000013aa000013aa000013aa000013aa000013aa
000013aa000013aa000013aa000013aa000014ee000014ee000014ee0000
15ec000015ec000015ec000015ec00001792000017920000179200001792
000017920000179200001792000017920000179200001792000018c00000
18c0000018c0000018c0000018c0000018c0000018c0000018c0000018c0
000018c0000018c0000018c0000018c0000018c0000018c0000018c00000
18c0000018c0000018c0000018c0000018c0000018c0000018c0000018c0
000018c0000018c0000018c0000018c0000018c0000018c0000018c00000
18c0000018c0000018c0000018c0000018c0000018c0000018c0000018c0
000018c0000018c0000018c0000018c0000018c0000018c0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019a0000019a0
000019a0000019a0000019a0000019a0000019a0000019a0000019a00000
19a0000019a0000019a0000019a0000019a0000019a0000019ea000019ea
000019ea000019ea000019ea000019ea000019ea000019ea00001a2c0000
1a2c00001a2c00001a2c00001abc00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c0000
1b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c00001b4c
00001b4c00001b4c00001b4c00001b4c00001b4c000100000f2201200010
00bd000700020010002f006000000c630141000400010000000e00ae0000
00030000000000640000000000030000000700fa00640001000000000000
0032015e0001000000000003001301900001000000000004001301a30001
000000000006001301b60001000000000007007d01c90003000104090000
006402460003000104090001002602aa0003000104090002000e02d00003
000104090003002602de0003000104090004002603040003000104090006
0026032a000300010409000700fa035000a9002000320030003000380020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002ea92032303038204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e484d4547
4f5a2b43616c696272692d426f6c64484d45474f5a2b43616c696272692d
426f6c64484d45474f5a2b43616c696272692d426f6c6443616c69627269
20697320656974686572206120726567697374657265642074726164656d
61726b206f7220612074726164656d61726b206f66204d6963726f736f66
7420436f72706f726174696f6e20696e2074686520556e69746564205374
6174657320616e642f6f72206f7468657220636f756e74726965732e00a9
002000320030003000380020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0048004d00450047004f005a002b00430061006c0069
006200720069002d0042006f006c00640052006500670075006c00610072
0048004d00450047004f005a002b00430061006c0069006200720069002d
0042006f006c00640048004d00450047004f005a002b00430061006c0069
006200720069002d0042006f006c00640048004d00450047004f005a002b
00430061006c0069006200720069002d0042006f006c006400430061006c
006900620072006900200069007300200065006900740068006500720020
006100200072006500670069007300740065007200650064002000740072
006100640065006d00610072006b0020006f007200200061002000740072
006100640065006d00610072006b0020006f00660020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e00200069006e002000740068006500200055006e006900740065
0064002000530074006100740065007300200061006e0064002f006f0072
0020006f007400680065007200200063006f0075006e0074007200690065
0073002eb10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802
f6b21e2c1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b2
1e2c1fb802f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b
1fb802edb21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb8
02e9b21e2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5
b21e2c1fb802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d
121fb802e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1f
b802dcb21d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802
d8b21d2f1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b2
1d2f1fb802d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f
1fb802cfb21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d121fb8
02cbb21d121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7
b21d2f1fb802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d
2f1fb802c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121f
b802beb21d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802
bab21d2f1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b2
1d2f1fb802b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f
1fb802b1b21c321fb802b0b21c321fb802afb21c331fb802aeb21c331fb8
02adb21c331fb802acb21c331fb802abb21c331fb802aab21c311fb802a9
b21c311fb802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5b21c
321fb802a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c331f
b802a0b21c331fb8029fb21c331fb8029eb21c331fb8029db21c331fb802
9cb21c311fb8029bb21c311fb8029ab21c321fb80299b21c321fb80298b2
1c321fb80297b21c321fb80296b21c321fb80295b21c331fb80294b21c33
1fb80293b21c331fb80292b21c331fb80291b21c331fb80290b21c331fb8
028fb21c331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8028b
b21c321fb8028ab21c321fb80289b21c321fb80288b21c331fb80287b21c
331fb80286b21c331fb80285b21c331fb80284b21c331fb80283b21c331f
b80282b21b341fb80281b21b341fb80280b21b341fb8027fb21b341fb802
7eb21b341fb8027db21b341fb8027cb21b341fb8027bb21b341fb8027ab2
1b341fb80279b21b341fb80278b21b341fb80277b21b341fb80276b21b34
1fb80275b21b341fb80274b21b341fb80273b21b341fb80272b21b341fb8
0271b21b341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8026d
b21a351fb8026cb21a351fb8026bb21a351fb8026ab21a351fb80269b21a
351fb80268b21a351fb80267b21a351fb80266b21a351fb80265b21a351f
b80264b21a351fb80263b21a351fb80262b21a351fb80261b21a351fb802
60b21a351fb8025fb21a351fb8025eb21a351fb8025db21a351fb8025cb2
1a351fb8025bb21a351fb8025ab21a351fb80259b219371fb80258b21937
1fb80257b219371fb80256b219371fb80255b219371fb80254b219371fb8
0253b219371fb80252b219371fb80251b219371fb80250b219371fb8024f
b219371fb8024eb219371fb8024db219371fb8024cb219371fb8024bb219
371fb8024ab219371fb80249b219371fb80248b219371fb80247b219371f
b80246b219371fb80245b219371fb80244b219371fb80243b219371fb802
42b219371fb80241b219371fb80240b219371fb8023fb219371fb8023eb2
19371fb8023db219371fb8023cb219371fb8023bb219371fb8023ab21937
1fb80239b218391fb80238b218391fb80237b218391fb80236b218391fb8
0235b218391fb80234b218391fb80233b218391fb80232b218391fb80231
b218391fb80230b218391fb80301b2182e1fb8022fb218391fb8022eb218
391fb8022db218391fb8022cb218391fb8022bb218391fb8022ab218391f
b80229b218391fb80228b218391fb80227b218391fb80226b218391fb802
25b2173b1fb80224b2173b1fb80223b217321fb80222b2173a1fb80221b2
173b1fb80220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b
1fb8021cb2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b1fb8
0218b2173b1fb80217b2173b1fb80216b2173b1fb80215b217321fb80214
b2173a1fb80213b2173b1fb80212b2173b1fb80211b2173b1fb80210b217
3b1fb8020fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb2173b1f
b8020bb2173b1fb8020ab2173b1fb80209b217321fb80208b217321fb802
07b2173b1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb80203b2
173b1fb80202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2173b
1fb801feb2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b1fb8
01fab2173b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb801f6
b2173a1fb801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2b217
3b1fb801f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb2173b1f
b801edb2173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1fb801
e9b2173b1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801e5b2
16231fb801e4b216371fb801e3b216371fb801e2b216381fb801e1b21638
1fb801e0b216431fb801dfb216441fb801deb216441fb801ddb216441fb8
01dcb216451fb801dbb216461fb801dab216461fb801d9b216461fb801d8
b216231fb801d7b216231fb801d6b216381fb801d5b216431fb801d4b216
431fb801d3b216431fb801d2b216441fb801d1b216461fb801d0b216461f
b801cfb216461fb801ceb216461fb801cdb216461fb801ccb216461fb801
cbb216431fb801cab216231fb801c9b216231fb801c8b216371fb801c7b2
16371fb801c6b216381fb801c5b216421fb801c4b216431fb801c3b21644
1fb801c2b216451fb801c1b216461fb801c0b216461fb801bfb216461fb8
01beb216461fb801bdb216461fb801bcb216461fb801bbb216461fb801ba
b216371fb801b9b216381fb801b8b216421fb801b7b216431fb801b6b216
431fb801b5b216431fb801b4b216441fb801b3b216441fb801b2b216441f
b801b1b216451fb801b0b216451fb801afb216451fb801aeb216461fb801
adb216461fb801acb216461fb801abb216461fb801aab216461fb801a9b2
15341fb801a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2154e
1fb801a4b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d1fb8
01a0b2154e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8019c
b215401fb8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198b215
4f1fb80197b2154f1fb80196b215501fb80195b215521fb80194b215521f
b80193b215521fb80192b215411fb80191b2154f1fb80190b215501fb801
8fb215501fb8018eb215511fb8018db215521fb8018cb215521fb8018bb2
15521fb8018ab214581fb80189b214591fb80188b2145c1fb80187b2145d
1fb80186b2144a1fb80185b2145b1fb80184b2145c1fb80183b214591fb8
0182b2145d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c4e1f
c10c4e1fc00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561fae0b
561fad0b561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b561f
a60b561fa50b561fa40b561fa30b561fa20b561fa10b561fa00b561f9f0b
561f9e0a681f9a0a681f990a681f980a681f970a681f960a681f950a681f
940a681f930a681f920a681f910a681f9009681f8f09681f8e09681f8d09
681f8c09681f410902fc02fa0056001f02fb02fa0068001f017fb213321f
b8017eb212371fb80174b212371fb80173b211421fb80172b211421fb801
71b211421fb80170b211421fb8016fb211421fb8016eb211421fb8016db2
11421fb8016cb211421fb8016bb211421fb8016ab211421fb8013cb21142
1fb8013bb210421fb8013ab210421fb80139b210421fb80138b210421fb8
0137b210421fb80136b210421fb80135b210421fb80134b210421fb80133
b210421fb80132b20f451fb80131b20f451fb80130b20f451fb80112b20f
451fb80111b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451f
b8010db20e481fb8010cb20e481fb8010bb20e481fb8010ab20e481fb801
09b20e481fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a
1fed0d4a1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd
0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b56
1fbd0b561fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213
321fb8017ab211401fb80179b211421fb80178b211421fb80177b211421f
b80176b211421fb80175b211421fb80143b211421fb80142b210421fb801
41b210421fb80140b210421fb8013fb210421fb8013eb210421fb8013db2
0f451fb80115b20f451fb80114b20f451fb80113b20f451fb903030302b2
401fa4be030200b4030200c4030200030300b213321fb8017bb213321fb8
0153b212371fb80152b211401fb80151b211401fb80150b211401fb8014f
b211401fb8014eb211401fb8014db211401fb8014cb211401fb8014bb211
401fb8014ab211401fb80149b211401fb80148b211401fb80147b211401f
b80146b211401fb80145b211401fb80144b211401fb80122b211401fb801
21b210421fb80120b210421fb8011fb210421fb8011eb210421fb8011db2
10421fb8011cb210421fb8011bb210421fb8011ab210421fb80119b21042
1fb80118b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f45
1ffb0f451ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff4
0e481ff30d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a
1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc9
0c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e
1fb70b561fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fdb212
371fb8017db212371fb8017cb212371fb80169b2112e1fb80168b2112e1f
b80167b211401fb80166b211401fb80165b211401fb80164b211401fb801
63b211401fb80162b211401fb80161b211401fb80160b211401fb8015fb2
11401fb8015eb211401fb8015db211401fb8015cb211401fb8015bb21140
1fb8015ab211401fb80159b211401fb80158b211401fb80157b211401fb8
0156b211401fb80155b211401fb80154b211401fb8012fb211401fb8012e
b210421fb8012db210421fb8012cb210421fb8012bb210421fb8012ab210
421fb80129b210421fb80128b210421fb80127b210421fb80126b210421f
b80125b20f451fb80124b20f451fb80123b20f451fb80105b20f451fb801
04b20f451fb80103b20f451fb80102b20f451fb80101b20e481fb8010040
a20e481fff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c
4e1fd20c4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f
84032e1f83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d
030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948
775578ab77550b77010c764875555475e475f47503147554756475747594
75d475e47507a475b475c47503b8ffc0401275383b468075907502147574
75020075010fb8ffc04021750b0e467448725573ab725504723472023bf4
7201e07201023072015072607202b8ffc0b372242846b8ffc0403572161a
461072307240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f
6f02af6fbf6f02406f090d466e486d55df6d0100bc02ff001002ff00c002
ffb2030a6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e675568
ab6755662e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a
555bab5a55592e58555703251f562e545555ab5455532e515552ab51554f
2e4e554e03251f4d2e4b554cab4b554a2e485549ab4855504801472e4655
4503361f001f01001e01001e701e801ef01e040b601d701d02701de01df0
1d03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f
198f199f19af19050f198f199f19030c7012801202701180110230114011
d011e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01
af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f
0d40472f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f
0c5f0c039f0c01400c262946ef0aff0a02400a242746ef09ff0902ff0901
0003012001010001100120010308b8ffc0b301151f46b80100b316010501
b80190b154532b2b4bb807ff524bb008505bb00188b02553b00188b04051
5ab00688b000555a5b58b101018e59b101024354b0144b515a58b101018e
59858d8d00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358
b0001db1160042592b5e73757373742b732b73742b2b73745e732b5e7374
757374755e73747573015e7374737475757473745e737473002b2b732b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b73
74752b2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b
5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[6989 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> QJJAAA+Calibri-Bold AddT42Char 
2 6700 894 <0001006bfe9f021c059000230022bf001a01fa0000001001f90006000302
74b3151f0b85003f2f012ffdd6edd6ed3130010602151412171614060623
222e02272e0335343e02373e0333321e0202175456575206162d281c281b
0f033650351a1b364f35020c182920242e18030558c3fe61dadbfe63c610
17100804070b0768d3d7db7170dbd7d46905080703070e16>QJJAAA+Calibri-Bold AddT42Char 
2 6844 895 <00010061fe9f0212059000210024b900000273b2121505bb01fa000f001f
01fbb3151a0a85003f2f012fedd6ed10d6ed313001140e02070e03232226
263437361235340227263e0233321e0217161202121a354f36030f1b281c
292d1606535756550503192d251f281a0b03686c021a71dbd7d368070b07
0408101710c4019fdbda019fc30d160e0703070805d2fe53>QJJAAA+Calibri-Bold AddT42Char 
2 6560 882 <0001003b018f0238025d000f0011b200070bb901210004002fed012fcd31
30011406232122263534363321321e0202381618fe601916161901a00c11
0c0501f73a2e2f39382e0a182800>QJJAAA+Calibri-Bold AddT42Char 
2 316 4 <00020017fffa04c305140022002600e1b10102435558b90024ffe8b40b0f
014c23b8ffe8401e0b0f014c250c0d23180d0016010e16260b0a23220a00
2004230111232625b8012a401e400b000c0112030c0c271d2423231e0a0d
160023221807121d521255055500183f3f3f1217393811331112392f5f5e
5d331a4ded3201192f5e5d1a18cd32337d87c4c40118c45e5d32337d87c4
c43130002b2b1bb90024ffe8b40b0f014c23b8ffe8b50b0f014c2625b801
2a401e400b000c0112030c0c271d2423231e0a0d160023221807121d5212
55055500183f3f3f1217393811331112392f5f5e5d331a4ded3231302b2b
59251616060623222e02270321070e03232226263637013e0333321e0217
0723032104b10c0616383133391e0c0457fe1a52040d1d352b2e3414060c
018f0610233e333b46271106c201b7016f62242a15050309100d0104fd0e
130b0406172a23047c11150b03030b1613c6fdda>QJJAAA+Calibri-Bold AddT42Char 
2 666 18 <0001004fffeb040c05230039008bb10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed012fedd4c4
31301bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015a
b73530180b0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed
31305925140e0623222e02353412363633321e0615140e0223222e022322
0e0215141e0233323e0233321e02040c03060a163f5b754485d69650589e
dd85366455441b0a0603040a0e090f2e4965464d79552c2f577b4d466649
2f0d0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c
261c1e2a1a0c232b233f75a66872a76c3521282008182b00>QJJAAA+Calibri-Bold AddT42Char 
2 960 68 <0001008dfffa0671050e003c00d9b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
4ded3232323f012fd4ed32113310ed32113311393d2f3333113331301bb5
3651190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c
17101023024c0d101023024c0d172f30312e061f28511f55125505550018
3f3f3f3f1217392b2b2b2b1a4ded3232323f31305925140e0223222e0235
1123010e0323222e0227012311140e0223222e02351134363333321e0217
0133013e033333321e021506710b1d302524301c0c02fe8904121f302222
301f1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f
293825b11b27190d240a100a06060a100a041dfbe40d110a03050b100b04
1cfbe30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b27
1900>QJJAAA+Calibri-Bold AddT42Char 
2 1352 90 <0002008dfffa044d050e00360044009db10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1a4ded2b12392fed2b39012fed32d4edd4ed1112393931301bb12e10b8ff
e8b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b64021
511755055500183f3f3f1a4ded2b12392fed2b3931305925140e0223222e
0227032e03232311140e0223222e023511343633213216171e0315140e02
071e031717161601342627262623231133323e02044d081e3a322a321d0c
0474152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e
3c1d332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b11
0c0121314c331afe130a100a06060a100a04972c2704030b3657774d416b
543e130e2839492eff262303644058120506fe911b314400>QJJAAA+Calibri-Bold AddT42Char 
2 1706 94 <0001003fffe9038c0525004900bbb10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1a4ded2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2f
ed31301bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f01
4c3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1a
4ded2b3f123939ed2b1139392f2f10ed10ed31305901140e0223222e0435
343e0233321e0233323e0235342e0635343e0233321e0615140e0223222e
0223220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49
304c351c304d6268624d3045759f592e5c503e1407050203070d0b0b3046
5c372b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b21
2821172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a
0c1c211b1525341d2b3f312b303d5573>QJJAAA+Calibri-Bold AddT42Char 
2 2082 100 <0001000cfffa03ea050e00220055b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1a4ded2b32012f
c4fdcd31301bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f
3f1a4ded2b3231305901140e02232111140e0223222e02351121222e0235
343e023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05
050a0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19
291d1e2a190b0b192a00>QJJAAA+Calibri-Bold AddT42Char 
2 6634 890 <0001fff9fe930402ff4d000d000fb500070af5044f003fed012fcd313001
1406232122263534363321321604021316fc4a1713131703b61613fef032
2b2a32322c2a>QJJAAA+Calibri-Bold AddT42Char 
2 2272 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>QJJAAA+Calibri-Bold AddT42Char 
2 2744 272 <00010048ffea032103d60035009db10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1a4dfd2bd42bed3f
fd2bd4ed012fedc43231301bbc0018011f001f0024ffe8b40b0f014c24b8
011fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b2
40094d00183f1a4dfd2bd42bed3ffd2bd4ed31305925140e0623222e0235
343e0233321e0615140623222e0223220615141e0233323e0233321e0203
21030507183a4a572e679f6c374378a462284d4335160905031410112634
483262681a334d33344b38260d090c0704b01a23180f17211a10407db474
86c3803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00
>QJJAAA+Calibri-Bold AddT42Char 
2 3044 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>QJJAAA+Calibri-Bold AddT42Char 
2 3452 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>QJJAAA+Calibri-Bold AddT42Char 
2 3976 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>QJJAAA+Calibri-Bold AddT42Char 
2 4146 373 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>QJJAAA+Calibri-Bold AddT42Char 
2 4534 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>QJJAAA+Calibri-Bold AddT42Char 
2 4804 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>QJJAAA+Calibri-Bold AddT42Char 
2 5034 393 <0002007efe95040003d7002a003d0096b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022711140e0223
222e023511343e0233321e0215153e0333321e0205342e0223220e020711
161633323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e
29190a274b4e532f628a5728fefa11294332193133361e35603431452c15
01ed77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a
69283d29144d86b277396952310f223628feda4349325166>QJJAAA+Calibri-Bold AddT42Char 
2 5358 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>QJJAAA+Calibri-Bold AddT42Char 
2 5612 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>QJJAAA+Calibri-Bold AddT42Char 
2 6034 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>QJJAAA+Calibri-Bold AddT42Char 
2 6336 455 <00010016fe9503b403c600240068b10102435558b60109090e001a1bb802
42b640241a200a1a18b80273400f400e1a1f49190a13490a4b044f004b00
183f3f3f3f12393f01192f18d41a4ded12391a10dd1aed123912392fcd31
301b400c1f49190a13490a4b044f004b00183f3f3f3f12393f3130592103
060623222e023713262627012634363633321e02171333133e0233321616
140702836c09504d2830180207770d1505fecd0d18392f2b321c0e07d203
c006132c372b391b08fec4191607101811012b06190e033423251508030c
1917fdab02611a11080816251900>QJJAAA+Calibri-Bold AddT42Char 
2 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>QJJAAA+Calibri-Bold AddT42Char 
QJJAAA+Calibri-Bold /CharStrings get begin
/space 3 def
/parenleft 894 def
/parenright 895 def
/hyphen 882 def
/A 4 def
/C 18 def
/M 68 def
/R 90 def
/S 94 def
/T 100 def
/underscore 890 def
/a 258 def
/c 272 def
/e 286 def
/g 336 def
/i 349 def
/m 373 def
/n 374 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
/y 455 def
end
QJJAAA+Calibri-Bold /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 65 /A put
dup 67 /C put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/HVDQQP+Calibri-Bold /QJJAAA+Calibri-Bold findfont ct_VMDictPut
/HVDQQP+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp 
/A /.notdef /C 9{/.notdef}rp /M 4{/.notdef}rp /R /S 
/T 10{/.notdef}rp /underscore /.notdef /a /.notdef /c /.notdef 
/e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n 
/o /p /.notdef /r /s /t 4{/.notdef}rp /y 
134{/.notdef}rp]
HVDQQP+Calibri-Bold nf
HVDQQP+Calibri-Bold*1 [0 -12 -12 0 0 0 ]msf
23.1 119.728 mo
(min_energy)
[-9.78003 -2.94003 -6.42004 -6 -6.06009 -6.42001 -6.06006 -4.13995 -5.70001 0 ]ysh
HVDQQP+Calibri-Bold*1 [0 -13.98 -13.98 0 0 0 ]msf
18.66 56.6074 mo
(\(ns\))
[-4.3757 -7.49332 -5.57803 0 ]ysh
HVDQQP+Calibri-Bold*1 [13.98 0 0 -13.98 0 0 ]msf
104.82 212.56 mo
(STT)
[6.47284 7.07381 0 ]xsh
125.286 212.56 mo
(-)sh
129.55 212.56 mo
(RAM Macro Capacity)
[7.85681 8.45793 12.2324 3.24333 12.2464 6.89218 5.88557 4.79507 7.49321 3.17342 7.38155 6.90617 
7.49332 6.90616 5.88557 3.42513 4.86505 0 ]xsh
2.46 lw
1 lc
56.73 19.65 mo
75.93 19.65 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
66.33 22.14 mo
63.84 19.6201 li
66.33 17.1 li
68.82 19.6201 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.38 colr
ef
.72 lw
0 lc
66.33 22.14 mo
63.84 19.6201 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.373 colr
@
63.84 19.62 mo
66.33 17.1 li
@
66.33 17.1 mo
68.82 19.6201 li
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if

2 0 3 <> PBAAAA+Calibri AddT42Char 
2 5064 882 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>PBAAAA+Calibri AddT42Char 
2 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>PBAAAA+Calibri AddT42Char 
2 606 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>PBAAAA+Calibri AddT42Char 
2 756 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>PBAAAA+Calibri AddT42Char 
2 1344 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>PBAAAA+Calibri AddT42Char 
2 1686 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>PBAAAA+Calibri AddT42Char 
2 2106 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>PBAAAA+Calibri AddT42Char 
2 2312 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>PBAAAA+Calibri AddT42Char 
2 3244 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+Calibri AddT42Char 
2 3808 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>PBAAAA+Calibri AddT42Char 
2 3942 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+Calibri AddT42Char 
2 4232 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/space 3 def
/hyphen 882 def
/A 4 def
/I 47 def
/M 68 def
/R 90 def
/S 94 def
/T 100 def
/a 258 def
/e 286 def
/l 367 def
/n 374 def
/p 393 def
end
PBAAAA+Calibri /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 65 /A put
dup 73 /I put
dup 77 /M put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HVDQQN+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 4{/.notdef}rp /two /three /four 
/five /six /seven /eight 8{/.notdef}rp /A 7{/.notdef}rp /I 
3{/.notdef}rp /M 4{/.notdef}rp /R /S /T 12{/.notdef}rp /a 
3{/.notdef}rp /e 6{/.notdef}rp /l /.notdef /n /.notdef /p 
143{/.notdef}rp]
HVDQQN+Calibri nf
HVDQQN+Calibri*1 [13.98 0 0 -13.98 0 0 ]msf
77.963 23.6293 mo
(In)
[3.53693 0 ]xsh
88.8255 23.6293 mo
(-)sh
93.0894 23.6293 mo
(plane STT)
[7.32543 3.17352 6.72443 7.32543 6.96206 3.24333 6.30497 7.01794 0 ]xsh
147.989 23.6293 mo
(-)sh
152.253 23.6293 mo
(RAM)
[7.61909 8.09435 0 ]xsh
2.46 lw
1 lc
56.73 43.71 mo
75.93 43.71 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.051 colr
@
63.84 41.22 mo
68.82 41.22 li
68.82 46.2 li
63.84 46.2 li
cp
ef
.72 lw
0 lc
63.84 41.22 mo
68.82 41.22 li
68.82 46.2 li
63.84 46.2 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.686 colr
@
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 1102 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>PBAAAA+Calibri AddT42Char 
2 2662 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+Calibri AddT42Char 
2 2942 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>PBAAAA+Calibri AddT42Char 
2 3566 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PBAAAA+Calibri AddT42Char 
2 4534 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+Calibri AddT42Char 
2 4776 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/P 87 def
/c 272 def
/d 282 def
/i 349 def
/r 396 def
/u 437 def
end
PBAAAA+Calibri /Encoding get
dup 80 /P put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 114 /r put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HVDQQN+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 4{/.notdef}rp /two /three /four 
/five /six /seven /eight 8{/.notdef}rp /A 7{/.notdef}rp /I 
3{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S /T 
12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r 
2{/.notdef}rp /u 138{/.notdef}rp]
HVDQQN+Calibri nf
HVDQQN+Calibri*1 [13.98 0 0 -13.98 0 0 ]msf
77.9629 47.715 mo
(Perpendicular STT)
[6.9061 6.96205 4.86503 7.32543 6.96206 7.32543 7.32543 3.17352 5.94156 7.32544 3.17351 6.72444 
4.86502 3.35516 6.30498 7.01796 0 ]xsh
180.324 47.715 mo
(-)sh
184.588 47.715 mo
(RAM)
[7.61909 8.09435 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/HVDQQP+Calibri-Bold*1 uf
/HVDQQP+Calibri-Bold uf
/QJJAAA+Calibri-Bold uf
/HVDQQO+Calibri-Bold*1 uf
/HVDQQO+Calibri-Bold uf
/HIBBAA+Calibri-Bold uf
/HVDQQN+Calibri*1 uf
/HVDQQN+Calibri uf
/PBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
